(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    616039,      14268]
NotebookOptionsPosition[    609342,      14055]
NotebookOutlinePosition[    609726,      14072]
CellTagsIndexPosition[    609683,      14069]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"$Path", ",", "\"\<~/projects/KnotTheory/trunk/\>\""}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6279467223218184`*^9, 3.627946817228487*^9}, {
   3.627946848258802*^9, 3.627946879119302*^9}, 3.6279469146657696`*^9, {
   3.629506489600542*^9, 3.6295064933038363`*^9}, {3.648644123157957*^9, 
   3.648644145415345*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "KnotTheory`"}]], "Input",
 CellChangeTimes->{{3.627946822338113*^9, 3.6279468274164886`*^9}}],

Cell[BoxData["\<\"Loading KnotTheory` version of January 20, 2015, \
10:42:19.1122.\\nRead more at http://katlas.org/wiki/KnotTheory.\"\>"], \
"Print",
 CellChangeTimes->{
  3.661919393255608*^9, 3.66201337652029*^9, 3.6620136051989183`*^9, 
   3.66227217738531*^9, 3.662328129906715*^9, 3.6623284119045887`*^9, 
   3.662335670297122*^9, 3.662501581608604*^9, 3.662501694832432*^9, 
   3.662502141085951*^9, 3.6625027150650997`*^9, 3.662502778625128*^9, 
   3.662503272075802*^9, 3.66250336871999*^9, 3.662506905491955*^9, 
   3.66253230578553*^9, {3.662537941302761*^9, 3.6625379612443027`*^9}, 
   3.662600022475444*^9, 3.662679126146308*^9, 3.66287849413221*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "QuantumGroups`"}]], "Input",
 CellChangeTimes->{{3.6625379340040283`*^9, 3.6625379503928423`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Loading QuantumGroups` version 2.0\\n\"\>", 
   "\[InvisibleSpace]", "\<\"Read more at \
http://katlas.math.toronto.edu/wiki/QuantumGroups\"\>"}],
  SequenceForm[
  "Loading QuantumGroups` version 2.0\n", 
   "Read more at http://katlas.math.toronto.edu/wiki/QuantumGroups"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6628784942004337`*^9}],

Cell[BoxData["\<\"Remember to set QuantumGroupsDataDirectory[] to the \
appropriate path, if you've downloaded precomputed data.\"\>"], "Print",
 CellChangeTimes->{3.662878494204771*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "G2Invariant", "]"}]], "Input",
 CellChangeTimes->{{3.662543158817626*^9, 3.662543163128108*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"G2Invariant", "[", "K_", "]"}], ":=", 
  RowBox[{"G2Invariant", "[", 
   RowBox[{"PD", "[", "K", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G2Invariant", "[", "pd_PD", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Y", ",", "P", ",", "crossingRule", ",", "k", ",", "n"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SetAttributes", "[", 
      RowBox[{"P", ",", "Orderless"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"Y", ",", "Orderless"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"k", "=", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"Cases", "[", 
         RowBox[{"pd", ",", "_Integer", ",", "\[Infinity]"}], "]"}], "]"}], 
       "+", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"crossingRule", "=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "]"}], 
       "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", "=", 
          RowBox[{"k", "++"}]}], ";", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"q", "+", 
            SuperscriptBox["q", 
             RowBox[{"-", "1"}]]}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["q", 
              RowBox[{"-", "1"}]], " ", 
             RowBox[{"Y", "[", 
              RowBox[{"a", ",", "n", ",", "d"}], "]"}], 
             RowBox[{"Y", "[", 
              RowBox[{"n", ",", "b", ",", "c"}], "]"}]}], "+", 
            RowBox[{"q", " ", 
             RowBox[{"Y", "[", 
              RowBox[{"a", ",", "b", ",", "n"}], "]"}], 
             RowBox[{"Y", "[", 
              RowBox[{"n", ",", "c", ",", "d"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["q", 
              RowBox[{"-", "3"}]], " ", 
             RowBox[{"P", "[", 
              RowBox[{"a", ",", "d"}], "]"}], 
             RowBox[{"P", "[", 
              RowBox[{"b", ",", "c"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["q", 
              RowBox[{"3", " "}]], 
             RowBox[{"P", "[", 
              RowBox[{"a", ",", "b"}], "]"}], 
             RowBox[{"P", "[", 
              RowBox[{"c", ",", "d"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"P", "/:", 
      RowBox[{
       RowBox[{"P", "[", 
        RowBox[{"a_", ",", "b_"}], "]"}], 
       RowBox[{"P", "[", 
        RowBox[{"b_", ",", "c_"}], "]"}]}], ":=", 
      RowBox[{"P", "[", 
       RowBox[{"a", ",", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P", "/:", 
      SuperscriptBox[
       RowBox[{"P", "[", 
        RowBox[{"a_", ",", "b_"}], "]"}], "2"], ":=", 
      RowBox[{"P", "[", 
       RowBox[{"a", ",", "a"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P", "/:", 
      RowBox[{"P", "[", 
       RowBox[{"a_", ",", "a_"}], "]"}], ":=", 
      RowBox[{
       SuperscriptBox["q", "10"], "+", 
       SuperscriptBox["q", "8"], "+", 
       SuperscriptBox["q", "2"], "+", "1", "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "2"}]], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "8"}]], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "10"}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Y", "/:", 
      RowBox[{"Y", "[", 
       RowBox[{"a_", ",", "a_", ",", "b_"}], "]"}], ":=", "0"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Y", "/:", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], 
       RowBox[{"P", "[", 
        RowBox[{"a_", ",", "d_"}], "]"}]}], ":=", 
      RowBox[{"Y", "[", 
       RowBox[{"d", ",", "b", ",", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Y", "/:", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"b_", ",", "a_", ",", "d_"}], "]"}]}], ":=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q", "6"], "+", 
          SuperscriptBox["q", "4"], "+", 
          SuperscriptBox["q", "2"], "+", 
          SuperscriptBox["q", 
           RowBox[{"-", "2"}]], "+", 
          SuperscriptBox["q", 
           RowBox[{"-", "4"}]], "+", 
          SuperscriptBox["q", 
           RowBox[{"-", "6"}]]}], ")"}]}], " ", 
       RowBox[{"P", "[", 
        RowBox[{"c", ",", "d"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Y", "/:", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"d_", ",", "b_", ",", "e_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"f_", ",", "c_", ",", "e_"}], "]"}]}], ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["q", "4"], "+", "1", "+", 
         SuperscriptBox["q", 
          RowBox[{"-", "4"}]]}], ")"}], " ", 
       RowBox[{"Y", "[", 
        RowBox[{"a", ",", "d", ",", "f"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Y", "/:", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a1_", ",", "b1_", ",", "b2_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a2_", ",", "b2_", ",", "b3_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a3_", ",", "b3_", ",", "b4_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a4_", ",", "b4_", ",", "b1_"}], "]"}]}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q", "2"], "+", "1", "+", 
          SuperscriptBox["q", 
           RowBox[{"-", "2"}]]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"P", "[", 
            RowBox[{"a1", ",", "a2"}], "]"}], 
           RowBox[{"P", "[", 
            RowBox[{"a3", ",", "a4"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"P", "[", 
            RowBox[{"a2", ",", "a3"}], "]"}], 
           RowBox[{"P", "[", 
            RowBox[{"a4", ",", "a1"}], "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q", "2"], "+", 
          SuperscriptBox["q", 
           RowBox[{"-", "2"}]]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Y", "[", 
            RowBox[{"a1", ",", "a2", ",", "b1"}], "]"}], 
           RowBox[{"Y", "[", 
            RowBox[{"a3", ",", "a4", ",", "b1"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Y", "[", 
            RowBox[{"a2", ",", "a3", ",", "b1"}], "]"}], 
           RowBox[{"Y", "[", 
            RowBox[{"a4", ",", "a1", ",", "b1"}], "]"}]}]}], ")"}]}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Y", "/:", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a1_", ",", "b1_", ",", "b2_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a2_", ",", "b2_", ",", "b3_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a3_", ",", "b3_", ",", "b4_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a4_", ",", "b4_", ",", "b5_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a5_", ",", "b5_", ",", "b1_"}], "]"}]}], ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a1", ",", "a5", ",", "b2"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a2", ",", "b2", ",", "b3"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a3", ",", "b3", ",", "a4"}], "]"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a1", ",", "b1", ",", "b2"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a2", ",", "b2", ",", "a3"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a5", ",", "a4", ",", "b1"}], "]"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a1", ",", "b1", ",", "a2"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a3", ",", "b4", ",", "b5"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a5", ",", "b5", ",", "b1"}], "]"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a3", ",", "a2", ",", "b4"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a4", ",", "b4", ",", "b5"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a5", ",", "b5", ",", "a1"}], "]"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a2", ",", "a1", ",", "b3"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a3", ",", "b3", ",", "b4"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a4", ",", "b4", ",", "a5"}], "]"}]}]}], ")"}], 
       "\[IndentingNewLine]", "-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a1", ",", "a2", ",", "a3"}], "]"}], 
          RowBox[{"P", "[", 
           RowBox[{"a4", ",", "a5"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a2", ",", "a3", ",", "a4"}], "]"}], 
          RowBox[{"P", "[", 
           RowBox[{"a5", ",", "a1"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a3", ",", "a4", ",", "a5"}], "]"}], 
          RowBox[{"P", "[", 
           RowBox[{"a1", ",", "a2"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a4", ",", "a5", ",", "a1"}], "]"}], 
          RowBox[{"P", "[", 
           RowBox[{"a2", ",", "a3"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a5", ",", "a1", ",", "a2"}], "]"}], 
          RowBox[{"P", "[", 
           RowBox[{"a3", ",", "a4"}], "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Fold", "[", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "b"}], "}"}], ",", 
         RowBox[{"FixedPoint", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Collect", "[", 
             RowBox[{
              RowBox[{"Expand", "[", "#", "]"}], ",", 
              RowBox[{"_P", "|", "_Y"}], ",", "Factor"}], "]"}], "&"}], ",", 
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{"b", "/.", "crossingRule"}], ")"}]}]}], "]"}]}], "]"}], 
       ",", "1", ",", 
       RowBox[{"List", "@@", "pd"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQvWix/K6dnq8dve5m7AbRNpP5DoLotJ1rb4LoTLd8
011A+o3ZckcQLSPR7wWifZ7YBoBorx1iISCazXJSMoi+07A2F0QnS77LA9HL
N/wq3AOkjwVz14JoEd2iZhDdsU5wKohmUHu4EETXFCotBtFfWd707wXSt8Lf
gukNQtJTQHRtjN10EP34IvtiEH1HhgtM9zzSWQ2iFVbabAHR4u7Ml0H0u1eb
wfSrzdv+7QPSN2SNGPeD3B32ShJEn3ihKQWiGZV/yILoFf1hiiBaL4pL6jaQ
3p9YDqYPf76oBqKd/hRpgOgOc/U8EK0lwJwPol8J71gMoj0Kvq4B0fsWJG4D
0WIXVx8D0ReOrL4Goi+dvwWmTWYv0LwDpK/9W6cFogvSWwxA9OK1py1ANAD5
+tKO
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Xi]", "=", 
  RowBox[{
   RowBox[{
    SqrtBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["d", "2"], 
       SuperscriptBox["t", "4"]}], "+", 
      RowBox[{"2", "d", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["t", "4"], "-", 
         RowBox[{"2", 
          SuperscriptBox["t", "3"]}], "-", 
         SuperscriptBox["t", "2"], "+", 
         RowBox[{"4", "t"}], "+", "2"}], ")"}]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["t", "2"], "-", 
         RowBox[{"2", "t"}], "-", "1"}], ")"}], "2"]}]], "//", "Simplify"}], "//",
    "PowerExpand"}]}]], "Input",
 CellChangeTimes->{{3.6626121286380463`*^9, 3.6626121798664217`*^9}, {
  3.662612229491871*^9, 3.6626122356472588`*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["d", "2"], " ", 
    SuperscriptBox["t", "4"]}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"2", " ", "t"}], "+", 
      SuperscriptBox["t", "2"]}], ")"}], "2"], "+", 
   RowBox[{"2", " ", "d", " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"4", " ", "t"}], "-", 
      SuperscriptBox["t", "2"], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["t", "3"]}], "+", 
      SuperscriptBox["t", "4"]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{{3.662612227314781*^9, 3.662612236102037*^9}, 
   3.6628784943004227`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Together", "[", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"d", "+", "1"}], ")"}]}], 
       SuperscriptBox["t", "2"]}], "+", "\[Xi]", "+", "1"}], 
     RowBox[{"2", "\[Xi]"}]], ",", 
    FractionBox[
     RowBox[{
      RowBox[{"d", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["t", "2"], "-", 
         RowBox[{"2", "t"}], "-", "2"}], ")"}]}], "-", "\[Xi]", "+", 
      SuperscriptBox["t", "2"], "-", 
      RowBox[{"2", "t"}], "-", "1"}], 
     RowBox[{"2", "d", " ", "\[Xi]"}]], ",", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"d", 
        RowBox[{"(", 
         RowBox[{"t", "+", "2"}], ")"}], "t"}], "+", "\[Xi]", "+", 
       SuperscriptBox["t", "2"], "+", "1"}], 
      RowBox[{"2", "\[Xi]"}]]}], ",", 
    FractionBox[
     RowBox[{
      RowBox[{"d", " ", "t"}], " ", "+", "d", " ", "+", "t"}], "\[Xi]"]}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6626122527100687`*^9, 3.6626123703141537`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "-", 
     SuperscriptBox["t", "2"], "-", 
     RowBox[{"d", " ", 
      SuperscriptBox["t", "2"]}], "+", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", " ", "d"}], "+", 
       RowBox[{"4", " ", "t"}], "+", 
       RowBox[{"8", " ", "d", " ", "t"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["t", "3"]}], "-", 
       RowBox[{"4", " ", "d", " ", 
        SuperscriptBox["t", "3"]}], "+", 
       SuperscriptBox["t", "4"], "+", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["d", "2"], " ", 
        SuperscriptBox["t", "4"]}]}]]}], 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", " ", "d"}], "+", 
       RowBox[{"4", " ", "t"}], "+", 
       RowBox[{"8", " ", "d", " ", "t"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["t", "3"]}], "-", 
       RowBox[{"4", " ", "d", " ", 
        SuperscriptBox["t", "3"]}], "+", 
       SuperscriptBox["t", "4"], "+", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["d", "2"], " ", 
        SuperscriptBox["t", "4"]}]}]]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"2", " ", "d"}], "-", 
     RowBox[{"2", " ", "t"}], "-", 
     RowBox[{"2", " ", "d", " ", "t"}], "+", 
     SuperscriptBox["t", "2"], "+", 
     RowBox[{"d", " ", 
      SuperscriptBox["t", "2"]}], "-", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", " ", "d"}], "+", 
       RowBox[{"4", " ", "t"}], "+", 
       RowBox[{"8", " ", "d", " ", "t"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["t", "3"]}], "-", 
       RowBox[{"4", " ", "d", " ", 
        SuperscriptBox["t", "3"]}], "+", 
       SuperscriptBox["t", "4"], "+", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["d", "2"], " ", 
        SuperscriptBox["t", "4"]}]}]]}], 
    RowBox[{"2", " ", "d", " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", " ", "d"}], "+", 
       RowBox[{"4", " ", "t"}], "+", 
       RowBox[{"8", " ", "d", " ", "t"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["t", "3"]}], "-", 
       RowBox[{"4", " ", "d", " ", 
        SuperscriptBox["t", "3"]}], "+", 
       SuperscriptBox["t", "4"], "+", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["d", "2"], " ", 
        SuperscriptBox["t", "4"]}]}]]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"2", " ", "d", " ", "t"}], "-", 
     SuperscriptBox["t", "2"], "-", 
     RowBox[{"d", " ", 
      SuperscriptBox["t", "2"]}], "-", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", " ", "d"}], "+", 
       RowBox[{"4", " ", "t"}], "+", 
       RowBox[{"8", " ", "d", " ", "t"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["t", "3"]}], "-", 
       RowBox[{"4", " ", "d", " ", 
        SuperscriptBox["t", "3"]}], "+", 
       SuperscriptBox["t", "4"], "+", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["d", "2"], " ", 
        SuperscriptBox["t", "4"]}]}]]}], 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", " ", "d"}], "+", 
       RowBox[{"4", " ", "t"}], "+", 
       RowBox[{"8", " ", "d", " ", "t"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["t", "3"]}], "-", 
       RowBox[{"4", " ", "d", " ", 
        SuperscriptBox["t", "3"]}], "+", 
       SuperscriptBox["t", "4"], "+", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["d", "2"], " ", 
        SuperscriptBox["t", "4"]}]}]]}]], ",", 
   FractionBox[
    RowBox[{"d", "+", "t", "+", 
     RowBox[{"d", " ", "t"}]}], 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"4", " ", "d"}], "+", 
      RowBox[{"4", " ", "t"}], "+", 
      RowBox[{"8", " ", "d", " ", "t"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["t", "2"]}], "-", 
      RowBox[{"2", " ", "d", " ", 
       SuperscriptBox["t", "2"]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["t", "3"]}], "-", 
      RowBox[{"4", " ", "d", " ", 
       SuperscriptBox["t", "3"]}], "+", 
      SuperscriptBox["t", "4"], "+", 
      RowBox[{"2", " ", "d", " ", 
       SuperscriptBox["t", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["t", "4"]}]}]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.662612269052327*^9, 3.662612273936223*^9}, 
   3.6626123143376617`*^9, {3.66261234662754*^9, 3.662612370835902*^9}, 
   3.662878494338969*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Together", "[", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"d", "+", "1"}], ")"}]}], 
       SuperscriptBox["t", "2"]}], "-", "\[Xi]", "+", "1"}], 
     RowBox[{
      RowBox[{"-", "2"}], "\[Xi]"}]], ",", 
    FractionBox[
     RowBox[{
      RowBox[{"d", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["t", "2"], "-", 
         RowBox[{"2", "t"}], "-", "2"}], ")"}]}], "+", "\[Xi]", "+", 
      SuperscriptBox["t", "2"], "-", 
      RowBox[{"2", "t"}], "-", "1"}], 
     RowBox[{
      RowBox[{"-", "2"}], "d", " ", "\[Xi]"}]], ",", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"d", 
        RowBox[{"(", 
         RowBox[{"t", "+", "2"}], ")"}], "t"}], "-", "\[Xi]", "+", 
       SuperscriptBox["t", "2"], "+", "1"}], 
      RowBox[{
       RowBox[{"-", "2"}], "\[Xi]"}]]}], ",", 
    FractionBox[
     RowBox[{
      RowBox[{"d", " ", "t"}], " ", "+", "d", " ", "+", "t"}], 
     RowBox[{"-", "\[Xi]"}]]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6626122527100687`*^9, 3.6626123703141537`*^9}, {
  3.662612505195489*^9, 3.662612516256658*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["t", "2"], "+", 
     RowBox[{"d", " ", 
      SuperscriptBox["t", "2"]}], "+", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", " ", "d"}], "+", 
       RowBox[{"4", " ", "t"}], "+", 
       RowBox[{"8", " ", "d", " ", "t"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["t", "3"]}], "-", 
       RowBox[{"4", " ", "d", " ", 
        SuperscriptBox["t", "3"]}], "+", 
       SuperscriptBox["t", "4"], "+", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["d", "2"], " ", 
        SuperscriptBox["t", "4"]}]}]]}], 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", " ", "d"}], "+", 
       RowBox[{"4", " ", "t"}], "+", 
       RowBox[{"8", " ", "d", " ", "t"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["t", "3"]}], "-", 
       RowBox[{"4", " ", "d", " ", 
        SuperscriptBox["t", "3"]}], "+", 
       SuperscriptBox["t", "4"], "+", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["d", "2"], " ", 
        SuperscriptBox["t", "4"]}]}]]}]], ",", 
   FractionBox[
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "d"}], "+", 
     RowBox[{"2", " ", "t"}], "+", 
     RowBox[{"2", " ", "d", " ", "t"}], "-", 
     SuperscriptBox["t", "2"], "-", 
     RowBox[{"d", " ", 
      SuperscriptBox["t", "2"]}], "-", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", " ", "d"}], "+", 
       RowBox[{"4", " ", "t"}], "+", 
       RowBox[{"8", " ", "d", " ", "t"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["t", "3"]}], "-", 
       RowBox[{"4", " ", "d", " ", 
        SuperscriptBox["t", "3"]}], "+", 
       SuperscriptBox["t", "4"], "+", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["d", "2"], " ", 
        SuperscriptBox["t", "4"]}]}]]}], 
    RowBox[{"2", " ", "d", " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", " ", "d"}], "+", 
       RowBox[{"4", " ", "t"}], "+", 
       RowBox[{"8", " ", "d", " ", "t"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["t", "3"]}], "-", 
       RowBox[{"4", " ", "d", " ", 
        SuperscriptBox["t", "3"]}], "+", 
       SuperscriptBox["t", "4"], "+", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["d", "2"], " ", 
        SuperscriptBox["t", "4"]}]}]]}]], ",", 
   FractionBox[
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "d", " ", "t"}], "+", 
     SuperscriptBox["t", "2"], "+", 
     RowBox[{"d", " ", 
      SuperscriptBox["t", "2"]}], "-", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", " ", "d"}], "+", 
       RowBox[{"4", " ", "t"}], "+", 
       RowBox[{"8", " ", "d", " ", "t"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["t", "3"]}], "-", 
       RowBox[{"4", " ", "d", " ", 
        SuperscriptBox["t", "3"]}], "+", 
       SuperscriptBox["t", "4"], "+", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["d", "2"], " ", 
        SuperscriptBox["t", "4"]}]}]]}], 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", " ", "d"}], "+", 
       RowBox[{"4", " ", "t"}], "+", 
       RowBox[{"8", " ", "d", " ", "t"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["t", "3"]}], "-", 
       RowBox[{"4", " ", "d", " ", 
        SuperscriptBox["t", "3"]}], "+", 
       SuperscriptBox["t", "4"], "+", 
       RowBox[{"2", " ", "d", " ", 
        SuperscriptBox["t", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["d", "2"], " ", 
        SuperscriptBox["t", "4"]}]}]]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "d"}], "-", "t", "-", 
     RowBox[{"d", " ", "t"}]}], 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"4", " ", "d"}], "+", 
      RowBox[{"4", " ", "t"}], "+", 
      RowBox[{"8", " ", "d", " ", "t"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["t", "2"]}], "-", 
      RowBox[{"2", " ", "d", " ", 
       SuperscriptBox["t", "2"]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["t", "3"]}], "-", 
      RowBox[{"4", " ", "d", " ", 
       SuperscriptBox["t", "3"]}], "+", 
      SuperscriptBox["t", "4"], "+", 
      RowBox[{"2", " ", "d", " ", 
       SuperscriptBox["t", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["t", "4"]}]}]]]}], "}"}]], "Output",
 CellChangeTimes->{3.662612517261344*^9, 3.662878494368553*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "relation"}], "/", 
   RowBox[{
   "relation", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "//",
   "Factor"}]], "Input",
 CellChangeTimes->{{3.66286555668701*^9, 3.662865569005097*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   SuperscriptBox["q", "6"], ",", 
   FractionBox["1", 
    SuperscriptBox["q", "6"]], ",", "2", ",", 
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["q", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}]}]], ",", 
   FractionBox[
    SuperscriptBox["q", "4"], 
    RowBox[{"1", "+", 
     SuperscriptBox["q", "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.662865565200985*^9, 3.662865569291401*^9}, 
   3.662878936985818*^9, 3.6628793957850847`*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
PDJrEDq6B3cEZdaOvkN6BvXA9us+7p8fjlpYd9Z++wu+4L778h6j90Evgsfy
mLQGuO7ileC2sdcEAgMXc9MZqEXOjTNwvYtp6fE/8tHstY0rbSXvdOeD9pcv
ubzKV/8vHjK0wc4TzsA5q3LN0FgNbPxT9fk98pBD0v67755+q4+8VUEPhPPi
oeezbT7oJpuk9OabHft7ez3/PLEBrQHOgN6Af95ee+WcN66FjkO8xWPA+Tcv
S48TfdOwppgLX6BPSl+IOa6dibeKz7bajzpT8USwbovt9Ld+//vRkxAIBAIL
AtZka74eVzk93cEVV2S/rJ6aV0MzduedeSbBuHF53befyOXLuv/oo92f8WXf
wHWYF0azICYovQj2rnGNegJ+BC8dsUGgRfG/1XU9r6Pl4DrW09ysM5gXZ6AW
xitdLyzOgOZI71IrzebS/7XffllfIK+y7vEb8xr1GOMQynxF52luXpGBAQX9
CJ/ZZpu0W5UL//rXv+7rp9N7+Otfc11Db5HPr319pZWybr2j+zmtDZ5M3Zte
XhwyqqGbx61Fj8L8UbgCmhYzD62h5iDI64c3+VPxWRVz4XQ7W4fyGN4rc7nM
+nJ/5T33f/pYHGh4UAUCgcCChfVZbs9b2GxDM497ovZmj7/llpQ22CD3HhZ9
AR565syUDjgg9yh2hy8ocxTlCHor+H2Jk8tjiQnwBzgL+sPuzm0MBPoR8AA8
0/+9ugb+oYqx/lR9vn9fxWe/+c1v6vzB1/fffz/98Y9/rH//j9V1/q9VXun2
/1HFW/9dxdoDekabXIEHYuEM1KHmxRnoQxLDij1xBmJaWuXu8pX9CfTXes3U
4pwLOq5bb80/VwfUj+C1DxuW0t57Rx9wC+D+++5LG6+9dtp1hx1aW2fAo+j8
83NuWnTvNALqADSKHYG93wwpXnquDToDeoMJE/NMKTpL10Qr8qvdRakxFa7g
uONS2njjHMuNavAv4i61Guux80l/oBe2o+ez9DmoY/FeWX75vJZZs8v7feih
Kf3kJ+FbGQgEAn0JuYM6Ba1Zd/hb+wNfIvuFGL3M2qn5gkVzv9vnPpfr/d1Z
9z1fejd9DWprZjQWn97idci7QG3RbVpJgxwY1JDn/3MVW71VXas/+Pu/T/fd
e2+6/uqr02UXXZTOP+usdN4ZZ6RzHaefXv//kirW/vKll6brrroq3XLzzenO
229P36zivocfeij9sPr7V15+ufZexyn890DS4FgDzABv5gzMWpybB6JZ7NYI
t3OIP/m+thLot625RcerJsd3lp6AL1npS8Dh0pQNpPc6MFece+aZaY0VV0x7
77JLzQu2LFzr1bpV99cs0uDE8H56G82E6ijUMqq1sq4vjBmXYxL+BiVWePDB
nLcGb5BR6jI0GGpKxx6be0KWXjqlceMz74IncPiefpRPivcKx9AZvsDMBbyN
+JCGZNiwttmaakH8C/DBA5nnDgQCgVZCd+JI+4PcXE3fHAR8QfG4tZ/gCz7/
+Ty/oTvrPg3uK6/kugOuW/zf3utwiSWyhk1doZX0x4FBC35n+pefrz7TOIKT
qmtpr89+Nm23+eZpk1mz0gZrrpnWXW21tHaVN6+z6qr1sW51zKri4w2rXHLz
DTdMn67ive223DLtVMV1u++4Y9pv993TsYcfni44++x0z113pZ/85Ce1DmFA
QJzZnjPggdhec+92Yli1RbcTg8qhO9oLPVAgd1Kbcx68RhyJPm3rMf+CMi/B
LJkXXujrZxvoJv6tyskO2GOPtEqVvx150EHpP1u59uoapktUvx4xslEXWDT3
Gdx2W8fjFvdjfeBrpEaOLyg9CviIAw/M/ZkdmcfQyij+UIUrOPHEzBWI4QpX
4Lw5fM9P0poqr8fFitE6Cu+d94RHrfeXL4L32Drm8D2tqJnYwXMGAoFAa4D2
n485vkDvbNEQ6nOzH5u1Y1Z4d/gCtRQ+h3obcNFjxubYAV9QvA7FzfrszIGI
PSbQAtCDIJ+/6sor07677ZbWX3PNtEqV+y0zY0ZaaurUNHPy5LT4xIlpepU/
Lz5p0uxjZpUnL1H9bulp0+rbLlvFY8svsURacaml0ipVTvmp6lpZb/XV05Yb
b5z23XXXdFYVt32rur7erPLpv/71r/1bdyCuVTMs8wPnxRl4Derq6pLlduuu
m3VVrQJ8LU0BbQG+oGgu9Jwdc0xKiy6a+xLkWvxo9SsEBjTervbSLdZfP61Y
5XEnfv7zNafY0qCjMSe6zNwrPsrqEJ3RWOhlMDfJ3JTFJmef/5L34iD4JtAl
yXsHm95AbIYv0YNQuAIeUXQF4yd8kCug1bDmqN3wH8BF0hd0BM6t3jDelPxp
cQ5F+1HqP8MbvJD3q5X6yAKBQGAw449/zH5kfHJx9s18gb0Ah0x71lW+QDxk
1gNPHXt9rS0Y2aaLs8/IHYrXoVnV/TnfCQQ6gOJZ8L2HH05HHnxwnd9/oorR
po0fnyZXOfDk0aPrY0rjq5/53dRx49KU6vC18Aj4gyWnTKn5g6WnT0/LzpyZ
ll9qqbTSMsuk1au4bMO11ko7brVVOnCvvdJZp55a9zD87Gc/67+eB9YEHGWp
oVtv5Mn6YZsh1uRxNnJk25xFdStrVqtA/G1eLc1FORezZuU+DbPNxeB+Tu8r
J+poXB/ot3jku99Nq1d76wpLLJFOrXK7fnud9hRcxzQFtW59eL6OSw0aN9YZ
HTzvB77Pq61WXTOTcizhkBfzRDniiOzLj4toZS7GOfO5oVGxHjqPPFDwMM4r
rZJz4twUrkCsJbfXz4F71Utwxx05PuvoZ7D0sPKw5IXtvjxG4YIKh+O9Fs+F
90ogEAgMfFj77av4AvF60Q3W88EXzTV/fIG5OV3l7OX++thOOSVzEnrb7Cv2
l1pXOCalKvdJO+yQ0o035r2vlff5wKAB3wJ+BZ/ddtu0XJXjTxk7Nk2sct9y
4AimVjnztCpXnDFpUlpiypSaF1hy8uT6Kw0CfQFtwfJLLplWqI4Vl146rbzM
MumTyy6bVq2uz9VWXDGtU8XOG62zTtpq443TzltvnQ7Zd990zumnp/u/+c3a
W7FfwjXePGtxXjoD/izqk+YJyJutG+a26W1uFcinzjkn+8o7F9ZgfcVyAHkR
7UHxMuAb2SL105adCTIf0BRcedllNV/g+j77tNNanzMofQU8DEY36hJmLuq1
ufbazunhXS9q4vJdcxPoE+WpehUmTsqxjP6Fu+/OubA1pFU+Z808AY9C51Q/
wYUX5tmG663XpiuQx+MIClcg1uJZQEvq/PCt8ve0Gx2NuTw+nRNuYssts1ak
zMUW16k56RvZaKOUzjwz90e0yrkPBAKBwQp7BD9y84vE6jwIxe3WfnsNfUGV
d9R7bldyePuEvfqHP8x9hjhv+4l4uPQzqqvZv44/PqXHHw+vw0DL4F+qOOwb
d9yRtt5kk7R4FVfhCMYNG5bGL7pozRXQDixb5QyrVtfZOlWMSyew2frr18cW
Vbyl32CbzTZL2zf8C3apYm3+6rtX+TLPND0O/AwO3mefdOh++9UHLcPxRx1V
5yDXXnVV+vb996ff/e53fX0q5o4ya7GZM5Aft/dAVM/aY48qHh3SqLUvmteT
zuQY/R16j9UG9SB4jfzG1e94uvF2wRk4R3TE6qctAr6df2wlvUgHwXPkmMMO
qznCZRZfPF18wQWtzxmAa5YGns6w6NfFANU6VvcTdEY/45opdW45Mt5A3GIO
46TJKa24Yp6xcOmlKT35ZK6NiEcGYj1CLOV5e/5mH1ojeUNffHHO/Wk3V1kl
1/vHjp+TK6h7EMZmrqDaY+q1E1egjiPe6ujnrjw+val1m0YBLzGkac6VepC6
kN5SHjRuOxDPdyAQCATaYA/SD6y2RctH91v6EXgQ0pSdd16ebdDVNR8XradO
TdBeZu8q83/pGXjlqDmoMfBJiH63QDuUOqS6nJiaT5jDrEGH2YO8xBx6APpL
zdJzfLCK6bascn+9BmOHDq2P8cOH11zBKsstV2sCDt5333TaySeni6pr7SuX
X17PRrjpuuvq4+Ybbki333pr7W347QceSN+p8kezEh793vfqeQk/quLgcvzg
iSfq49lnnql9E9555536+MUvflGfl36JMmsRZ1DmceEu289atI58+tPV7xfO
Pf3WqtNOa615Xep8e+6Z666lB0ENlUeknq0yL0L9VN2uRfD0j36Unqg+t/3l
ul1QMCOB9kjf0fLVPojfGxTnwDWvJu46L33vtAHy+2odrHU1HfXrdxua9zvv
zLNIa3+/CZkzUP8wgxHftv76+VoSZ1Sft7o2j7uQ//bX/sfCEVjjcKZiNb7R
5iTyjj7ooOxrYj3wumkrRo9t4wocpT+g6Ap4SPFT7SxXAN6Tn/88x3PmNHpc
9Z/Zc66qx5s8OesOaEXFc53RLgQCgUCgf6LwBeJu3MCiI9pq/77HV+sVxGd3
JY7xN/oN9Srz0RXzioXdP+1as88hj+NW7zkchGjO8/nwyaFLbv9/qxjI/IA/
V7GbGvh7771XhSM/r3375Ls/rmKaV199tQqRXkkvvfBCeuG559IzVaz35A9+
kJ54/PH03e98J33r/vvreYP3Vvn0N6vjkYcfTr+o7qM/5Mde8+OPPZZ2rOKn
6VU+PGbo0DRmyJBaZ7DsjBm1duD0U06pvQpfq17vr371q7rWKo9Qd9XP4HCe
cCJqkvgR59Drc//OrXPczKM0e6gNCM23eL19bwL+sj1noFYlRi36fLcXl7bS
miGP2WqrvEZ6jSNGZM9ZfWH8aIvHgTyhv/aadBI+u7fcdFO68+tfb33/v3bA
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
9lHAkavZdGRNsC8UnqCcH/0L/CP1Uagd0RVMmZKfV5lr4fAc+UjiCpxPXg36
iQbKXhMIBAKBD4d9AQetZ84cnCHD2vwO1azMNBCDdrWX1D6lPqJPD//s/sW3
9hj9b/rzcP3BRQ9YlF755hkIZQ6CQ/zrKLyDeQjNPom//e1vZ89FKD6Jr77y
Ss09PPXkk7VnAk/A++69t+6PwDuYL3gr7uH66+vZg3olrrjkknTxeefV2n+9
EuYTfvH44+vjkvPPr3USf6nyyL7Il73+yy68sNYU6EegMeCHvkOVC+FXemvu
Ok4H9zKzyjXNZODrcFsV//UVb9JpFM5Ab0KZC6A/9vXX226DM+CJpsblNnwA
9f+2ks6g9Gg0cydqiffdl7XPhTOwht9xR8twBo8//njabN116x6mp+mhBwn4
tO609db1NUtnsGmVD/6yD3uq+hTWKjOc1KwPOSTnrWobcudSa9fP7zpQ/xZP
8GTio9iRXgW3s1bQWdLt6O2hPZB/i0/MFdAPhaNTw19iydwzMK3RM1D6BnAZ
+gEmLdb2va/1MTXfblpTn4Gv7mfxmfmgIZrR6H3AV+ACyqF3wWPjMnCEntOm
m2YvE74I/KppAPRoeO3iNTxBR+dRWl+chzKPAT/nvvSi0obiUdR7xja4mjKD
gWeB78VytAV8C/C5Zlq0yBoUCAQCgZRjbXyB+NqaP6Sp/i82tSfZp+0lXYE9
w/7BbwhfgCcofIF6GC8efkQd8T0OtCTKPIDCOTQfzdxDmctgtiDewaFHv/AP
hYOgfSgcxLvvvlt7N7799tt1vO32fVVf5x25RZX3jB02LI34+MfrngQ9CniQ
3szff/TUU7UnxKiFFkrD/u7v6sc/9sgjB05/gjWk/azF9joDr0WMX3QGOANr
SyvpDJo9G8p5qD5PtZe6up//0x6o/919d8vE69+uXt8Gq6+eNl5rrfToo4/2
9dNZYOCTuvmsWWlC9ZnGG9BZ/KlF5md2CcWfnx5SXqpXQR5N5196+fUCLL10
7t2X96tVdMQbEdxGji3XNV+BLvJb38ozDM1tOeOMrPMXy6h/qLHQJPBDqN6b
er6p/gY+Kg7fi59wDn7nNp6zdcnf+Srfdz+77JIPcwh95XvoMfbdN9fs6Sfw
ArwTeReedVZ+TnRHZirwlObdYh20TnRmj1Mz8nr1jdIs8Tvg82A99TzNbBS7
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
p7N2lEcTviz6DAKBQCDQHdhLzjwzc9RiSrGjfF4sac8SQ3ZHe2x/8hg0ffyH
C1/g0HvH39fearZxf4d6qt5GeYgagx5h3mK4g7POyv4HdH5uF9xBr0H8K9+X
x6px68HnefbrX/86vfnmm+nHr76aXn7ppfTsM8/McTz/3HPpherz7Hc/ff31
uhbJF83cdvfzH1VM1Zc6ezzGTddfP7vOjzdYe+WVF1hO/v7776f111ij1jR7
bN5xZ59+eu1z6Hw/V53DT2+4Ya311rugb2GDtdaq5yf0y/4Ez6n9rEVrUDNn
II6mM2j2M+AV3ko16dm9CcPyeSi9CXKcZg/EFupNMAeUb6ceGv0JO2y5Zfpd
K/FA84D1b/3VV6+vz1pnMHNm7WkanEEPw/6uTs8XEIegpsD7gB+SwzUnV3c9
tZ+PWGYoPvVUnqtYfl9mJpav87qd/5cZi/6PGxCn8XbVY1B8CPCh1sCY+xQI
BAKB7sIed8klea6OOVzFW4CWVz5sv+uOJrrwBTT9dHo8C4q+YNERuc8OX2Cf
Gyg5tjjBnElzyngiOU+0zNtsk9J++2X+5b778m3oDgIdhrhW7umQv+MC9CDT
28oB9Nq/8sor6akqVhIH69O99aab0tVf/nI9V+C0k09Oxx91VDq6yofUyx2H
Vu/JIdXxuQMOqPvyjzzkkHTsEUekL1Z54nnVe/WVyy+vZ5GpxT1dxWIe5y9/
+UvtP25uGS4BN7EgYm65+QXnnFPX73EGcvetN954gdVH773rrrTUtGlZ41Ad
+hIefeSR2b8369G5ndHoTzA/QR3zkur69l71O+jLVXNr9kCkM2j2QCyzFuXR
NWcwJOt6zWlvFczuTWiam4DzVBMtsxadG+uxHKQF8ou33norbbz22rVmBmfA
D/G3A4GX7iZ+8pOfpHWqzzi+gM5guSWWqDm94Az6ANYf8VPJ3+d2iCfK1/J9
Z2+HFwhuIBAIBAK9BTE+DZ0YWv4uZnSMHZtjZhx2d2uH4m59dPgCXr64guJ3
aIaw/Fpu3Rt8gX0VX9Ebs+A8XzUrmnFzmOh+zWHm02DuA90Bz0S9DFW+2y88
HfsZ1K3l5j//+c/Tj3/847r2/2SVrzxW5agPPvBAPR/spurzeeWll6bzzzor
nX3aaekLxx1XcwKHV7k/Tfxen/1s+sy229befJvOmlXXvNdbbbW0RvXZMqvw
U1UOVH9dfvna89/3q1bfr1l9Htf65Cfr2260zjpp2+o92+Mzn6nv90snnpgu
v+iidOO116Zv3H57eujBB9NLL75Y58u0+ziEf6/yTEdPcwk4gy+ddFLtYYAz
oP+nqV4Q3m1ez5e+8IW0WPXYOAOcwBYbbFDrNwrwONdedVV9PsdVeadaJn5j
/z32qDUb/S4vcZ3ySKEzwAfMbdaia/OYY+actdhqOgNzXszObfZAPOig7O2q
H422zMEv7fHHWyLveOONN9JG1XowoXqttAZbb7JJrUNqdbxUraOrrbhiff3i
DfQ5BWcQ6DR8XnAeYkBrpDgKv0pDWbQV/t/+KLfzN+XvHOX/5Xe4jvBaDAQC
gf4Pa36VD9XzePUKFC9C32+4YUrf+lb3ZwnSx9Hw0wLzOPQYNAYew7yzKi+r
fRR6K5aR05srzLvR6+0NeI20g+eem2NyHkj8Grw+vki4g8svz1pCteKI22ZD
Df/5Z59ND1afNbPAbr7hhnT91Venr1x6ac0P0AyccPTRtTbgwL32Svvuumva
faed0meqfE6OjyfYuMr3121wBLiAlZZeuq6NL7P44mnp6dPrmnk5lpw6tZ5V
vuSUKWnmYovV+v+ZkybV/+cZ4O/wCmutskraoHoPN6/y5R2rfH2f6nGPP/LI
dMXFF9ccAj3CQ9/+du07oM+BBqCn/MXk7V6z/mucAT+B3arP1YKYK4+/2WW7
7erH5H2oD5zn4b+2u3Z+VH2Wt9xoo3rufZmfsPG669bno9/5rHk+/MHpDApn
sPrqee56gRgWZyCPLpwBzpRfa6uAzoBXW7POAGdQXXe15xq+wLnho6YPugXW
KZqkDavrGLdVcwbVevErerYWxzNPP51WWXbZmi8YufDC9ZqIhw3OIFCvhziA
9vm/r46S95vRw3/q9ddzDKUv4rvfzXMWqr0vVXtgraX0la+inzn83qzGRx/N
9RL8o8P39GoOdRY/00/BT1LtynPoj71tgUAgMNiBCxAX8vctfEGp/eMQcAnd
9UG3B1x/fY7PRzTpC6pcqPb0NTO9t3NoeZZ9yT6m10+trTdgr/vJT3LfNK8j
55CuQr+Hmuamm+b43LwIfkQxY6GGmrU+/Zerc/L3TzyRHq/iDPyBfoObbrih
7hnQb3DmF7+YTqxyOv0Eeg3wB/J43nzbbrZZ2mLDDdOG1TlfpzrXa1TnfdUV
Vqhz/5WXWSat/IlPpBWWWqrmA/iH4waWnjq15gxmTJyYpk+YkKaOG5emVcf0
Kq+cVv3fz/1+qep2y1a3F3OvXt3vhtXn1uPRNexW5V/77bFHrQn4XvX5oj/o
CeAMjv7c52rOQK1f/r579Vj/sAC8QV977bX6/NEzj/z4x9P06jxcf801H+AB
6A6OOvTQPD9h6NBaC7FidY6urXLz/+hvehrP/Yor8owWnMFCVV68zjo5Vi0o
vQnFz2BIwwOxlTgDax8t1NCGByIO1ywccT+eAF+AN6A5MB+mBep/NPqzVlut
5gz0J2xZrRPvvvtu7Rmi94lGqHz9sKPf8WDzgbXU9Vj3JlTHytX3369ytM5y
Bm7v9Rcvk8AAhPfceyfms4fQdOo3lbOLAZtz/5L3u/7FKqefnudDiWnMlrR+
bL997sF00GJtt13b4Xf6n/Rquq2vxe+p2q/n+DnfRr1R+lLFTXiEwh+IPYM/
CAQCgb6HWFC/qjVeD0LRF+hN0KOgV6G7Oa11/447Ulp33exFXjwS8BNrrJH3
IzFsb9c9Sv+AHgv7Iq67t3QN7lMNS38wfoDeAGdQ5az1gTuQh5iLTMOhr7YF
4vLuQixa4nb5ppp28TDgVybGf/3119OLL75Yew08UsUW337ggXT7rbfWMwHV
/s+pYhu1eX0FB+y1V9q7ik923WGHOrenE9huiy3SVptsUusGCrdAk4BH+MT0
6WmJyZNr7mAG/qC6JtTP66/VQXc/vcEj0CXQLnxixoy0/BJL1Pr87av3FLfx
hx7yG/D6P184gypvl+t8porP/tTLvfXehxuq63Jx3osLLVTzFc7Rq+aItgNe
w231fZQZ8PiD4448Mv2j+lR/gjXgjDMyH/CRj2adE/1Pc187zuDzn5+zN4E/
SSv1JuBPxf1DGx6I1fuWquul5lN50BbOgO8tXUY/W5uK52lZK3wG6ZTob/QM
0fpYL/iemFXq+E712tag0R86tOYNNqj2HuvHq6+8kl584YX03LPP1jX5J3/4
w/Sjao94tvr+mR/9qO6Peqr6mfXmlZdfrtegfx9AvjTfffjhmid1DeP/Vqr2
nye+//0O/73zbA1+84036vOhL8s5wFvyeMGPOvfFN7Z4x/5PP/vMDFqUngKf
WfvGm2/m+r7c3HyYffbJubu8n55KXOJ7MaGveivxquoefLHr+Y+LpzR9RkpT
p6U0ZWo+fO+YVo7p+TZuW25f/39G2/zI6Y3bLLFknkFJg6qnE4eAPzB7wprE
OxIPH1xVIBAI9A3sI7y/zOvR31v4gjLrkIa+uxpoPW533ZXnE48a3eaRgJOg
OeBH5jYLSifpcfSw4tXpJ/DodMm9wWOXeYw0fLTO9AXO6xJL5P3S/ktjgXOn
s3jppd7rmWgRlFzBISYttb/mWQnyA17hcoGnqxj3sUcfTQ8/9FB64L770j3V
Z/HO225Lt9x4Y+2TePF556VTjj8+Hbr//jWvgEfQ27B6lVvQEyzT4BDoDNTZ
cQYO/AE9gsP3NAn4Bh4KPAvf7yFvNa+LX4N58nJ3HoPbVp+j3u7DlgOcWOXN
pSdiTMNHYW49Ed4THpSbV6+d5lte4u/0UPCm6FdwfcmNhwzJ9fWhw3Pu3Py6
6HSbdQbmJuAMWmkuHy7HulN0BjgDfVNPPJHSKqvkvQBngEc+++wF7r9SZqDK
PQsXYL4nz0KfKZoBeb6+mO8/9ljNG37jjjvSzddfn6668sr05csuS5dffHG6
qLq+Lzz33HR+9RoOP+SQNLO6hsv8kaWq6/rgffdNnz/ssHTEwQfXvqgH7r13
zTPSLh2w555zHG7rmtAv9cbPfjYgcmLr5P333lv3ZrkuaQ1ornAjHQFOhvbL
eS19Ycccfng64wtfSFdccknt8XJHtZ7Sgt1XPY734XsPP1yvu/ga71/0QPQR
nHd6AnUSWgJ6AfMezV+kCdAzKU8Xj8xoyv+nNvJ9h/8vNjmlceNTGjMupdHV
ejBqTP5avhfX1ceYtqP8fvbtqt+Pbty2/e8c7ntsdYyfkB+Tj0rhD8zq4nOl
x8Fr8ZriMxUIBAILDtZcfLMauNla6m1yebO35LJqcd2p/fs7cebXv579EKqc
Zw5Ogt8hTmIBeLnNFXI6uTweG6dRxZ/d7r+YG5wH/LgY7Utfyjw+vUG9R0/N
X3mT4xNOPDFzGPbFARCP9mcUbqHwCvS0jmbtgn59uTcNvloiXwJzDc+rPvtq
+/QJdAmbrLderUXQj7ByFWMtN3NmzSMs3uhlwCGoqy+/5JK1zuCGa67pMb+B
2ofwpJNqbkIvMt3/BquvXvdv9CacG7PoPN6iH/tYzQGcWn0+51VflcvxoOTV
OLp6nuq4ejfMs+xXcG3NmlWtQwvlXFlvlLmKeMsCnIFrkSaq1hk0ehNaaS4f
zgBXPJszGJ5nvOAt6cFoK3AGzsFRRy2Q/imfLbyAGjbvAZ8dMzq+ec896eu3
3JKur/JTXMC51fXpmjipyt/lsHxN9AbVvUkNX5PN1l+/9jKlI3LwQqWT8Xke
+pGP1MfYIUPq+rsc+pPVdY0jpOFfwVH9fMWGFwoNkUNv03rVtbd/lcPIwweC
1sAaiCelhyo6A/1GtAId+VuzJr54wgn1GugcOSfOI79YHi/Os3O+fbVW7Fjl
oZ/dbrvah1Y/FU6BVoMOIXiDBQTn2WENKzGOmc977pn1VLSjOIJJi+UcfY7c
v/lo8AAjq2PEqHzwrPbV7+X45ahz/qZjDh5gfD7K7fAGjva3m4NDGNPGH+Av
Sm0Fd3DllSm98krmfuMzFQgEAr2PUmsXK6t3D2nMVMQbyGHVxGn2u3P/cqav
fS3rC0rPg2P4iDzz26zFvtb6ygFw17S35pLz9RFL94b+DX/Ce5EeUD8fT0R7
d9Hx4dXx/noF9WrwGsJhhBav19CsV8AnyAFwCfz+n3/uuXp24+1VrkKPcF4V
d4mdzWnU48BrUdysH4Emn+eiXOWU6javVHlXT/X74jsuOuecmqNQIzSXgCfD
12+9tX7OvQVe63ID2gZ12aWmTKnztnlBXsBnYmbjecrNnJcHvvnN/tP7bF3i
z4WrkyfjA6rXVc8KaH6Ozqu1sZkzoDNoJc5Av1h7zsDag0fGa/o5zoDPAR1G
L3s5qGe/8/bbtYfJnbffXvtm+Ny7nugAXHc4KdoVepdtNtssbTZrVpq1xhpp
7SoPWnOVVerP20oNvxI5/rIzZ9Z+JXxL9A/pJ+LlOeRv/zYt8jd/U3+ucXH4
vsL96UGa2tAQTWnSEU3FC1Z/L2feubr++bP+0wDwoXHt3VZ9vq0fOAO847qr
rlrrND4McnzrIG3BKsssU58DWqfa66VxLorHCx9ZGqtPNPq08Czm0fCVOamK
JZ54/PFaKxLoBRQPQzm0a1pMRTdpnfvCFzLXSdsoxpgwMefj8n5xmAMPMHJ0
W+5ejjrPH9uW38vh/f3kKTlGrN7jOmaRz+u19FVPk8P3fld+X773N/oaxD3l
/+Vn4lD6gvET2ziGUQ1+wf8nTc6PU133dT+n3gp+DFFbCQQCgd6FtdbcP+s5
ba7YEF+gd5XuwNyx7sT5eubMM9MDx2usaBjEpdZ9GgY63/6QS3iuuHj8tYP3
Dz6lN3oV7G88h+6+O6VDD80eB/ZYOYzcxVeaA/2DNAk4DHFpfzhPgwji7MIh
iHX15L///vt1zU2fs1kJl154YV13P/bww2v/P/0NV11xRV1Xaz9XoDvAZ5gv
uUIVZ8nDcQbi/8Or6/SVV17pFd7A67/mq1+t8yh5ldrk2p/8ZP365wU53y03
3VTnavVMt+pvPlHFqXwQ/7u/+FfR++hLMCOg9j9cJNfUf/GLOW9H+6rPF2dQ
ehNaTWcgv1B7tP7jRXAE6ni4Yl/1ZdgX/J43Lg6zF4Eb+2n1GPwFzFTVX2Ce
quvq6Or6OmTffev6Nf9P2p+tque0UfXe0Q8UDRCOSy0cp7Z8lZMs2+ANyjFj
0qRaM4MzcOAP8AJ8Tqc3juJ/OrXhXVL6j4qWyP2bwWr2a29ydj0F1/KN1frh
udfX8iKLpPXXWKPu3fow0EmddeqptbZiYnUdFA8IeqPi7TKbT2l4vhTfFz93
LnnL0mWccNRR6eUXXxwQvRwDBs6l+oY1WZxAK8l7yrwmXqY0/WIteoKRDZ3A
iJFtegE8wZgGD4BPkMeX/L/k/oULEJPoVzI3Wk8DrlEfE8/Cz30u9zo4jjwy
fxXbeA5+76uY8oADso6puo7rv/V/a7GfWYfMcPGcPQ4+Ycq0Nv4Ad+A16I/w
XPW0+nsaVr1v/WV/CQQCgVaD2rVat94AOXzRF0ys1ufddssa/e7s7foZ1O15
G1rnxdtic49lHzr55KyZ60+6MhwKn16eAvZc+gh1mN7qVdCPwXcSdyIXobvA
F1RxXX3Yv/Et9mM9iM5X7It9iuK3Jk/AI/BZ09PMM+HHr76a3qpicJ5rPT0n
wOOaWchjwaxDsbt6n1hcTsWXzPPpyXhc/XT/PfbIMxarHEuusFeVJ33YrAbP
U1857QVeo/ZBrNaUM045pfZk6BeguxeTWvNwATiBo4/+4HXuPaQzaPYzECv3
tS6qJ4E/4X022wNxePYdM08NX0IbhjPw2u0VeNVe5C59fnzucHNvv/127bXJ
i5DW594qH7r5xhvTNV/5Srr8wgvT6dVn6qRjj635uoOr17D3Lrukz26/fdqh
Wku33nTTtMUGG6RNq/xGbwJOoe5NWHPN9KnGvMHSmzCm0ZtAK6SWXuayrqgv
oXHoN1rOz6r8iccJ79QzvvjFmt8YCHBe9XMU/s9r3nTddWvPl3kBV3pbtQeu
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
a0Cji/PxWnscH0vzYkd5Jk4QBOMJ+jd5nrOLht2c4OmAHJLn1xveEL5gpiG+
ULfQTynG4EkuXqE3UOfgcSA2d27qz3PWTTWfF5f4zMXzfOT1Pfg3Nt608gb9
XoXNqr8mfbfZDd/73up7MAbBugRNr/5icxL0FmywYfUn6zIXHgenFrV06fI5
i/bbUZ6Z0PCNb1QfGzk/rkQtlMfKZJ42YnGvpV1qHmW4A3sK7hO3OQvxk14e
d3jv//espz+97L/PPuXKK66Ye1r6KYDe4Lrrris7PPjBd5uZwMfgLUcdVa6+
6qr+PMWrennVl77whfKVXg7t8mfXXH11+cbXv947Br5XfvGLX5Q777yz/PGP
f+w9Lv/d5wjmJE8wjG99q3Lkm2++3I/QOjbHiOaIZkavjXNwqj0Dnp93v7vq
+tTHWz+CmYp8QPRMue8Ir71pA06Pz5aaxrDWwB599tmT85N0RPxs+VjiDHAO
uE3xVhAEwahAXnjqqdU7Vmw2nXsc7hZngIMNZh7iL2fftddW3ZwzbdvtqhZA
jUI+r9fYLMYTT6xeY1PlDfwb6iQ+87e+tdZX+GP0faGXVp+DZYNZTzwu6E94
PNH3JbYJZjP0Fnhm1hv4EfBB5EfQpbeebkstEd/Qn5mwUc0lxsELVm6PI9Rb
jTPgEaYG14VrsS/QvekBbzPo+LvZO/RSzUIfN33+l1x4YXlvLwf5zDnn9Gvl
cz73nQRf653129///nfjDO7Ty5Ovuuqq3kf0n3e7cAIuX+s1wKfMWR3BRMCf
H3JI1fTJQe0b1q/fi7U++MF6xjqTp9oP6Psvv7zq593TvfszSRfX8xa3qT6e
M7UbVqY1cPGN9l76LCeCfdxnTUPVPA1wOXSX0VIGQTAq+MEPqiZdbvfJT05d
kz4R9P6qWU9Hn0MwfdCn4LOhD1b/E8OYS4w34HGgB5IXplj9m9+cuga4aRrM
YDfLaJ99Kn+vLxln0HiDe29beXy1ljPPLOX22+PNFMxOWJcf/3idd976Ejw3
NDVdcp1e3th/psSSXm/eIr5sHObNquGZD4Er8L7pszZ3FwczGYY9ytRq6Qzk
Rfo6eLdOlyZuGqFG/qtf/rL8qLf/6Un4v2Owp914ww39eYnNAxFn8LDeZ0Rz
MZYQ8+Dd5e+4suZHaK4ifwGzp7v4FawKnilaProlz5Tatq/p453rXeYEBneH
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
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBF3xX/810/+DIAiCIAiCIAiCIAhmG/7jP0q57bZS/vCH
mf6fBEEQBEEQBEEQBEEwm/DrX5fypS+V8q1vlfLf/z3T/5sgCIIgCIIgCIIg
CGYL/vf/LuXqq0u56KJSfvjD1b/Hv//79P6/giAIgiAIgiAIgiCYefzkJ6Wc
e269br99aq/9P/+nlO98p5Qbb6yahSAIgiAIgiAIgiAIRgc8EK+7rpTTT696
g3/5l+6v/b//t/Y1fPrTpVx2WeUc/t//W3v/1yAIgiAIgiAIgiAI1i3uvLPm
/aeeWsqVV1ZvxK74zW9K+dznSvngB0s5++xSfvSjqj8IgiAIgiAIgiAIgmA0
cOutlTM46aRSbrppank/LwQ6hXe8o5QPf7jeK56KQRCMK+it/vM/Z/p/EQRB
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
RUMoBzRHSazctAbiBTUM8+4zezGAxhfoReALrxY7f8AV0BbI+8WX6gZqrqta
e+IM9S9xAn5BDcuapeu2Dum7rLlwVcG6RJuB0HzkrGfxq3zJPI8ufohyKn6I
NAp0BvIv/nHWNu4hfojB6kLtVl33+OMrX0CXNTxH0fmtzkXbpX67Yq1XfsY3
lk+HGpi1rU4wzBXwLLBe8bj6atzvXe8q5dprq7Yhe3KwIngY6L/ClfKEUQcw
z0i/VhfQE3h985ORdw3Pq82aC2YrfvCD6tVlP1Zn2GDDeukV16NACx4Esw18
jukL1bOs1WUD/y2ecT/96eSvV4uQw/GwazxZm72IP9ZbltrCeMPnLx8yK5E3
Fj0BrsC1cFDf4oH8jnfUuHai/Kr51OMX1BZ4H4kzjjuuvrarrjEIphtqsPwz
9NuIAVx0s/KsVfXYDIPmW93MXooLa7mYWPj5z6+5V9Z3MFXgs/CwBx9c59M1
fQG+wFlNW4irogsXp654XqvX4mL1ilvbfV3B4uXrE7+FP6A5oD3Yb79S3vve
OhfXDKWc/8GqIKfXC8vPkNYA1/S859XexS41K6/nE2vN8dISg9o73ccMr/Qo
BLMRcqvDD6/xMF1BmyuufsbXk1dczvpgNkL9QF+4vllaAz3h9l05nH5FWoTJ
oD8d12utLx5ozcUlYhF+uOHLxhfyf3UrfIF4c8GC5XMR6FrUBMQIZ501eXz5
zW+W8vKX13jAvfCzNLLmiluDQTCTwJ+aGUMDgzOlNfCrvVUPV5cYmHbcnmnv
ND9BT7j+HXurmkTX+lsQAG0KHmqffWotAEc73I+Ae6UFwHetLEal2bK/8qrD
0Ypvm1cBrmCTQU8Y7YHag74HfTTO/PTSBF1gjb7//XWftB55bOnz6jozRoxq
frLX22/b/HC1BLFtehSC2QIcFx5LHUG9y36MK6AvwBdYt2JatdwgmK3QU3Po
oZWnlcfJ9+kLeYF38SSwr6uBqYWpGVv7Ll+bo8PLI7MXxw/qpnQmzn9ra3h/
lE/pX1GXVY+azHtAX4PvFZuKKcSwall6H1PHCmYL5Pz0Muq5dAb2U7pvzwDu
bLK1Km/76lerlkb80Pzk3EvP42c/G5+OYHLI1/EA6lVtDq211PgC3oTW6Jvf
vOoZd/gCc2nkXs5y+7e1iGvAFVjX8jQzE/SPW9/yt+zHwVTBf8is71YPcM7b
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
r9ahGoE1l5wnGDXIIfWDeX7kj54dWgF7rbnhXX2XaW9PPXV5T9DCQU+PZ4n3
Bw/n7NszD30Hj33s8nmxalN6UXgSdI0znfF0KG3NDPMFPCyiiQ3GEZ4fmqsD
Dqh1h6YToBfnEWKWTBetAX/agw+u9Qq+CH0/xKU1HlEbiR/43IEzTw0UX9B6
99oZS5f3t39b53ZNxhf4e7yDvVsuhCvAGeCk5El6DMW4qWkFcxH8O3Ci9jy+
Bi5f84zTkzUZ1HzlcPZZPQ44gzZ7kV/CVOKbYDTh8+dvwWsYj9+01S65ilqp
/fUd76hn8EQeRGYjWlf4BbyvvZzegF+x10ZXHYwqWk86bZhc314rrrHXin27
7NfgeaQx4zvjOWpzRmh+7nOfqmUwdyy828zB52x2MZ7A54PPweV/6Uvdz1N7
of4se6tzHUfb/AvoF6IvCMYZONgzz6yca9MayPv1S5rT1KVfxz3U13CttFqt
z8HzSvP4hS+kR3cuwGeknwRf0M9jBp8j7qDN+bYnT5bnq3XRIdDRLh3SF7T5
X0cdVfWCiVODuQrPgL5wPnLiULUIz4w4g7amS0+WvfVtb6szwxcPtOaLB54y
J5zQzdM5GE3I/+mm7bnOYp7fbS6CPZVelo+32iZOfqJ4WB5jjjLvIvfikYj7
pbVOP24wDrAf05PL9RcNtAbiXfu1mKdrfGrfl3/ybKaVdC9cr7pI06xn354Z
2MsOO6zWpMSszd/lwgunFmvypsAz6Nuy7y4ZnMnHHht9QRA0rYG6L62BHBFv
4HnRu8XXazJ+rs1+Uu/YfvvqgzhvwL+KbdTe5JqTzWIIZg5Nu8oby2ff5nT7
mjcFTR6N7GRrwd6s38B8hI2H/AvwBXRe1ghfmdRQg7kOe96hh9aZB/I4+b49
VJ9sF08CzwA/JrpJNeP2zPk6s2fGF2227UEH1bVl71x/g94+umHdU/H75hrQ
e03G39qzfe/jHld9O5/97DpnGWebPTgYF9iLcWf22r4P86C3x34t9p3KrDxe
T+aPNr54eN/Wb6kfN1qDdQvnZOuz9jnQkOAL6AWmMtOCrgu/2p+rOfC5pPF6
61szHyEIGsQd9OhiEXGv3nV9CjhZ8UUX3lSuKP6lf8TvtT4HHgfqGvhX/WDZ
S2cffCb/+I+1btU/A+fX/dLeK/dXT8Wvdpk/j6Pld9CfATbwTWw+xXQrv/jF
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
FHEXzqBbN/PzjjP4TPEziHIGfM19FoMNWYxvvvlGurncIcoZ7JeXJ5s2bcr0
oZUeH38c5mtXrR68DPbeO/QlJGkeWK6A+IkvTJQzMD8DQzmCHJr173//W/73
f/9X/vWvf8k///lPv/7bxRDW3//+d/n555/lp59+kh9//NEv8u6//e1vbmv9
P5l+CeUD9z7IRReFGrxyBsOHJ4czIJ7Mnh10FLVri3TuLPL225k+qvJBOmdA
3dI4g5wEcWzjhg3yF+aoGrIPeBZcconIPvuIVKoc9F3HHmveXHFHus6Ar63n
1pDl+O6776Rr27aFOIMWDRvKy2vX+rw5doArf+ih4OddOeVlQA3FfPbjCT4z
fGGUM+AzNc7AUE6AJ/jzn/8sn336qWzZvFk2rF8va198UV5w8eM3zz8vz7r/
uzVub/XIgw/KyqVL5Z4775Tbbr5Zbl60SO51X69ZvVo+eP99n4f/O2l9UOSu
F1wQcteoziAp877+8Q+R8eMDxwxn0Lu3yLZtmT6q8sFLL4XeC81X8TNA62wx
Nefw1VdfyfL77ov/rKykAi7nhBNCvK0UqYGZ/2G8kT5rUTkDgyGLgc6gR4cO
hTiD5g0ayFNPPhlPzoAa3/z5IvXqBb4ArUGfPjRhZPrIDKVBUb0JxFbui+P/
pyErQaz7h9szUm+7fckSuWzGDDn7tNPktHHjZMKJJ8rJo0fLOJe3jR01So4b
PlyOPvxwGT54sBw5cKAc1revDO7XT44aMsQ/9vJLLpHVjz3mZ88kSnNAjure
F9+bgD6WHNa9D4nhDNzeyfvm8rrgDJjN+4c/ZPqoygcvvlhYZ6AeMYacA95V
N15/vZ+7bchCMB9c/Q/hDBo2FLnlFst/4g6thamnjPkZGGIAPBB7duwotfbc
0/MFrCYuJ3xo1ap49rfRf8CMRXI+OIMaLv9z+b73ODDED1wXVcOFxqBKyivG
OANDGYE498MPP8j9y5fLhLFjZWDv3tLNxcROrVtLB/e/1s7tp1htW7Xyq02L
FtKate++sn+zZrJf06ayv1vcf7Dbh/Xv2dM/zx0ur/v0k0+SwxvQm3DxxRHO
oJbIkCFhr50EbNki4j53qV49+BmMGxe0B0kEnIHqDCxfzWnQh3rN3LnywQcf
ZPpQDEWBPmFm2nKuVk7pZul7N8QbcAaqM9AYbJ+rIcvxxRdfyCHpnME++8id
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
9RwlLqGnNSQDxGB81/hs4YWMM9gp6C06atAgaVy3ro9dY0aOzPj87IoGOSj+
Xa++8ornBmbPnOnrTmOOPVaOPvxwOdK9P0P795fB/fr5ObPcDh0wQIYddpj/
+XFur8BjTx4zRk4/5RQ5/6yzZM7FF8vNN9wgT7i9FvMUqTmmc6wP3n+/n/dF
7gpvAH/wtotR7DcOdvkD8Za6XZuWLeWeO+/M7r0E+fa8eSG3ZVZW9VRu++23
mT4yw66C/1udC0YdkIVvxVNPJdqjDI6OfeRf/vIXz63C8W10e5tn3OvGE3r8
CSd4j7+9Klf2/ftt3d6T+8Ydf7ycMGKE52JHuHPgqMGDvR+ULr4f4eIGi++J
IWNHjZJLL7xQnn3mmazq/d8ZeF8mjh3rORP1ZIHjvP2WW3a6B4/qudjTw1Vz
Pfr00099L9b7770n77h4+Obmzb734fXXXvMxGn0H7xMzHVc/9pisfuQRz888
tGqVj6nMRIDHffShh+Rhdz/rwZUr5eZFi2S0+1y8hovY6j4zjps5mW+hjc9G
0Ds0dWqY9QVnUKt28CxNUi8Q8QXOoG3bAp0BvRi5wBn4mBrx33rhhUwflaGC
gF4VnWljd27DGTBzkXpVnMFrmnjiif71oJ2lL+G8M86Ir0cavt74ckV99V98
MdNHZSgLRPNa7U0wH9qdghh1hNsP57ncCY0mue7333+f6cOqELCHJ8ZtePVV
WXTttXKyy/eZK84smA7uf4e9+oEudznQ7evxh0RjhW8WegC+pz5Fz2475lS6
PLmzy3nw/OrdtasM7N1bRrq9wOknnyxXX3GFPOTyVrxkv/jiC78HgY+dN2eO
52k012aPgX6LmWT0I+AlRh0Mf8rr58/P7nkWHNtFFwVfWc8ZJHCGeK6C2Ar3
qjMxWHCzbt+WxJwejfr777/v6+TsPeER8W5ivgx+sRPGjJGR7lztcOCB/tyt
teeefjVy+RFxg4UHNnNTiRFohvi6dSqWHJT6vg23fO9iSOd27WTkkUd6T9S4
xF/VGOTPinXvBVq1s0891XOwqgtAC0DM++677/z1Bj7gjddf93t/+gTY6991
221y/cKFMnf2bM+3XnbhhTLT7ZWnT57s3/PJkyb556Uud4p7/08cNcr31I0+
+mjvEXuMe+/4TLg91uXho9x93PKeHuNu4WX6duvmZ1ygh9gn5RXTxcVsuISs
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
1cJ/lmsVsRJtApwMnEv3jh09/9sj1cdADPf3ueXvS2m+4H2HDx0qF0+bJpvf
eCMeta9PPhHp2bPwrC93zUnceUdvAnMDNL6on0GSuJF0MCMhmq+a/1bOAM4V
rSncJzot4ij+VuSoxCXiq8564ZpDXP3yyy+9Lvidd97xs7m4BuHJy6wuOO1f
P/eczzvpfSUfhdNlTg95KjO/brv5Zs95c98L7tr92aef+l68sgT+6ccNG+b7
LeqkehMumT49Nte1QoDncHl6vv+s+5y8/6x5dCUHyttGfWipjxm2C/ah/Vz+
xYxxau3DXH5WFvVsYmJ0LhaxMDoXS2eUM4tQ+VDiCo/hsWWtF4Vnfd5dj5mz
hdYVjoSeK52tTn7Jz+a7nJ94Syxm3gHvBb0axGziIZ6JxHE9dm55TXrsOped
18P9vHbeC30/2HtwLMwzpxeC+hzHgDbhp1Qs4vUzz7alyw+ZXcY1hbokXo1Z
i48/FnH/R/mcQV5emCue5JwvV8D+JN/jO1UHJLaii0na3qUYgEfgPIcHwPeE
3IhYgu6IfA4/GLRaxA4Wvim6yPvYR/O1/ozHkhfGqRZD3EMzoJwJvObp48f7
PDcK3iudP8F7RlwkbiqfQA7MfAT1PmBm7SOpeQfMo7zXxRA8KOFplyxa5PmY
BS420iML73L5xRd7DQPzvbidM3Om96rkexZfw/vyePok8KnY5mJVLPgC4K5B
0qVLyGfIW5s1Cz22STvv0jkD5iY88kiyrx9wBqozUM7A8tXYQ2NeNO6RC5I7
kkMS7+nrmupyQHSt8K3U49G+Ev8eTfV2adwjblG3wksQX9gp7nH4wcJZo2FF
ywrfSu8r87tOGDnS69aOPuIIOWrIEDl8wABfc4JzPcJ9zc/QyTFLpqw9F7n2
4UnL9YB6F3U54nAsOQOO+ZxzCvxnuT3lFJG0a5whxtCeW9V6EY9t3u0OQT8n
ftKc4+xdmaFQnHkv6odNjki+y76aGawfbt3qZ2NRU3957Vr5tftM0KlSb6fG
RM62asUKWe5i4rJ77/U1J+5jXhaPgf+kBvR7t0f/vzLKF9ijo5PFRxtdK9wI
cZrXjLaVGha+6K+4vIXXoXt9XiPHUJQWDJRW20W+fKyL5+wzyLfRpVFv07jK
373LXS/Q4dKbQJ803l/oFrJWt8ysMuZr656S3JacL1uP11B88BkyI4H5iny2
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
zVPfR3kG6lH7quY1xTvw3MTik447zmvqYpOXc5y33hq8YeAM6Kft148iZaaP
rOyBH07PngU6Nfe5idtfJN4Px/LVnMTWrVtlgPt/r5viDNgr33v33fGJTaUA
uTUeXvSM0auwcN48mTltmu9BIzaPOPxwGezi24BevXwvLv1q8ArMQuOagffh
8CFDZPLpp8sjDz7o5yiUe13z/vtF3GeTH3/pv33nnfL9m4aKBT23GoO1/894
2+3CcwaPPBK8A1N+BtSD6A+Nk84AEI/oBUD7RK6o+ibyyf2bNPHcQS93zh81
eLCcNn689+zCnxX9ARqFNzdt8j0DPA/xiHk4eJvBKTBDltvo0vt4HD64zFPE
7+XsU0/13Cl8AT0JXBc4jlFH/f/27jxK9rI6F/8/N05wOMAZOYByMPFq1Khx
igPGABIUUKM4xAmNCk4MiiCDOAEOOAFeUQEFcUJQQIleE6PkBypEwShGJVER
iAYVE2+Sm5v7u+uu9d7+1Fvv6e9p+pyu7q6eqp5nrXdVd3XVt6q7v7W/+332
s599SO/vuqz3/3NB68vEE7QatM+gz+IKO4eCbWA6zqD5deV/HEyDxh2IkeZu
qfFfMhFrzVx804kn9mbNPu+Zz+zVnPhe6UHgg/VQXMLEuUUvwJ+m6RK20rF2
uITe6t/XFn7B4/bu+2w9ZuLYPBKuWUk+PfYPb3tb9QWUs+64qpSJvLr84hdL
/c6Gj29/e2udGq/ycdCpNY+Ybr4azmDkoa7E918tib4XZ3DRBReMNGcAra4m
Z6bF/f7E30Ef9Ocvv7ynQTAn4b1nnFHeNRH3rHe/4x3lve98Z2+WgtkJF3/i
E705RXLvRYnjF11UdV7No/ThDy/le99b+NcNFg9yWLls05KIx3LdYFo0zkCt
p81NUJP52grrTQA8ppxQf6sckddg8+Bqy+wvmorfn9jT4w9oVg998pN7vbCv
eeUre54qbz/ttPK+97ynnHvOOb3eXPPHP3PxxeXSiXxXzss34dJPf7pcMnHf
Jz/2sd6MWfGNhuCJj3987/h6rjbstFOvH0FO+8R99+3NVtTzO3JwndvSd7vD
5GxtNZQVdg4F24D/o1y262cgtkZLEgwAsZmWi482bddNN93U07LJFcVY8fbU
U04pxx19dHn5i1/c8yF4ztOf3uMTmmc2PkFPAq8Dq8crTJyDbh/cv2/Lmnhc
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
x/psG2eAG4rOIAgWDj/9aa2/y1XlrBs3lvK+940WZyB2fP3rtZetxRU9T+Mw
w9XvRwM7tcaVfHXkceutt5bnPeMZvTle9KsH7bdfL+cOlglonz72sVImcv8t
OgOLlvb5z6++Mq94RSmvelW9bYtnrfssX7fHvPrVpbzmNaUcc8zWy336zY4+
evK+o46q/i5e42UvK+WII+rt4YeX8qIXlfKCF5TyvOeV8tznlvKc51TvF/N0
9HdZf/InpTzlKVWjZjbvk55Ub//4j0s54IDKQ0+cb73VvuY5u+++k/d5nOV5
juN4jv3MZ9bf/yUvqb+f9/u615Xy5jeXcsYZpUzsnXqzJvAV+Iurrqrzb/7+
76un7T//8ySfQLOAT1jq65l4S98VncFAwAt8eeJvZp7Vffbcs6c3OHLiHP3Z
GHgW29d3/bub55aZLma98EO45ZZberPF6RNoB/7hH/6ht9z3k5/8pNx22229
x+Ig9NiOFVfQIL/BW5pJ0zz11Y1wpcFooOW3OIOmJWmxNfltEAwfE9ebXv9s
4wzUuz7ykdH6vHX1S+KKZU6vGto4YKoHYvLVsYDZga8/7riebvWRE8tMGHln
sAxgL6s2r+5uHyyv9dlsnjL2lzy+73//unzdVrsPB9p+5usHPrD267r1ffe+
dn/7Wfe4Xks89LVb36vVWGKFW/PK+I9v3lxvLdzGXpv7t3tVDbBbdT3L9/fy
/cTtnvest1vu7yzPcVyvYeFzvW77Xb13mmL5vr6Nxz2ulCc8oZSDD678gjk/
uIXjjy/l1FNrz5m9Ah2ZGhQ+YWI/1fPuwSXof6DPXkwewUz4qZyBWlgwLXAG
13/rW715Vfr7zRD86Ic/3NtDjzO6s17wABYfrrbafUs+D2Y5wO8vl6UpbZzB
wx9edUvBaKCr4Wq9Cb7GI4z7+R8ECwGa1p5mv++PJ4ejNR0liB1XXll/Nxq1
5oVz7bVL/c4WB8lXxxLqVJd88pO9WbGHT+yrrrziil79KlgGsJc9/fT62TQ3
wb5cf5jP5867lLJxtzuvDRtr7xgtWG9N85jdNnV+PrF2a/dNOc6WrzdMrq1e
Z2Kt3zB521vrqw/Mlu83TD52q8f1H7vV91OO1X6X3jHX3/lYW95v53fYfSL3
32PPyj/gKvAM/m54DjzIQx5S9wT77FP1DjQLtBJ0GPo/zjyzcgn6KvQ9/OQn
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
C42C/b783/8Aj8ATsekR8AONP+jOjmjzGuw1PA7vIIenb9Bf4X/jdWgntsUf
dOeBib+ZdxsECwd7WbV5dXf7YB4ocj/1ol13nfRpabNrfd1Wd55t+1mbazt1
Tm27rzvbtjsX13O9Vptl2/VosX5nIgb89u9U/pJna28WzN51mVF7r8392/68
Wrd4zi1za30/cbvHPevtlvs76179ebhew7p3/3Xb7+q985Khq9K3gVvdf/8a
H/ELeFLcgh40XKzZMzQOOFqcJz4Bp43LFX/FYfF4seYzdeeodzmDcaoJBsFi
wWeKDooPVpczGKUZhHJLfKk4gi9o81vps8YhpnRn0XRnLSZfDYLFAd2WGo8a
kL3rbDTtON0zzqga12AwiHldPkEuq+dXHwR9sHxSDZLeQy6MQ1CT09Mg79fL
0HwWWw9Dmw9h/+HnrpP8D+hG5NT2JvYp+AOaElxPV0vSOIMWg12PaIXjTRoE
w4W97Gmn1b2kniL78x13qrnf6l1K2bDbndf6jVPmsUzzmI2bppkHu+nOx9ny
dXdWTfd1Jta6DZO36/rza9au63y/YfKxWz2uzcTZcOfHbvW8dsz1dz7Wlvfb
+R028Zbds/IPuAo8Az7jvn3OhFctz1g8K72D6xmtBB2G/g8zgHAJ9hNqjnrW
9DnMpY9rNhDr5fKNM5DjR2cQBAsDnyl9U7ykWy6DdxwlzqDVeMbVI6Vb4+rm
q/GVDYKFhz5RtW2zFF/wgtq7Pyj0wdKM0ooOw7t/3CHeNR7Bnv43v6lcDC2C
fgM6BPqBgw+uNTfXQnw6nqDNaWgaBHoE99uP6Hd41KOqvyRN8rvfXfuH9TO3
2Qteo+tn4Hm0J3qu+UPQ/XpfQRDMHfq3+K/ymMUT4uX4pto377xLKWvWbr23
bvt432/ZX0/Zl0/3uLXrJ+fZTrfP7x5vyzzbjXc+5kychf38brtPro2dWTFb
YlLnMfb+m/aYZm7tpul5kC3vbyrn0FntGL3ZM/csZa/+LB66CRyr3i3XNzo6
2gS9GDxx9YnxY6Dpdd1rOoRh9jI4TvPr6tYE1cSS3wbBcNHlDJoHIp2SGWCj
ghZTGmfQehPGSbuEHxDfozMIgsWD/SnPPjmrflM69kFjDo9AWtCTT67az2Bh
IH9V61cPo0OQ3/INe9vbag8yjW7TH9jn9+Yy7F7z+uahyGPN/a4x+AP6Xj3K
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
Bq7VtCXD5Iq8Fu/Yl72s9pTRsuANnKc4C3PQzFkPgpUG+0A6AXyBJa8dJP/g
e2fvyaeLt4j9YbB8oTYkt6QDkA/yL+RP8N731rgmP8QXmcnomkt3gK/HHchR
8bHbqi/Z5zhn1KDwEry2LddkmgOca7RYwbjg+98vZf/9J3sL6GXpyvnFzMTF
+ozh3OSwnrt656qn1CcZjC+cN/QnZuXIdWmv8bz4JN4zn/70cHvC9CrSbfM2
MEPB9QCnzFdDjB92bS4I5gL5q3pGL9b2PWaf/OTta298luSrYrLY3GbZmEWV
c3q0QVPNv1t+ql6mD5tGGh/rXBrm/9+1/Etfqj4KesrEUUs+rTcC15U6a7CS
0HoSeh55m6oe9nOfmzmv9bmisdWf4zOnppy6w/IHr1gcgVzQLEW1K3VPfOiF
F9Z89IUvLOVJT6r8gTjn9hWvqH0JM8VTOaveW1ySGZD0rfpwxePrr8+smWD0
IQ6KqWoKdAKtt8Bna5A597g3ukl5bE/js66UN7wh852DyToZr2FcAc4Az6/P
TLzFSamfDgNivZh91FG1TkZnwPtGL5s5IGY3REMWLCXExLPPruekngTL58G5
ub2asZ5JfZR4MM/BM/DGG2aPT7B8gX/n9YVrkt/iRfnD6Eu59dbh8ga0BHJr
GhYaA7mA3EBurT579dXZOwUrB1/5St3z0806l53Dg+hlzA/zGWvaSHXkYPnD
tVLfiT09f2z/f/sY97vVg01/QIeAV+Cf+J731Lg2aC7qOHy03vrWyq/icOlY
7HvMcHR+pY8rGFXoIcClmpFoz+9W79agvQX8YXC4raeBpvEzn1nY9xysHOBd
1cloC+SdzV9L/Z9eTPwelt+A64LjeS3eN715vetrvwJ9LZ1avA2CpYAcAqcl
1tIK0BjQZKl3zOQxq6dWjXnVRGy++w61XsYPL3724wPniBzX+fKwh1XNiT4F
vIE+hWHlqM0TEY/Fy0DsxL/SG4jZxx5byre/nXMvWP7gt6w2gStQy6KXoS2f
CXoS9MLTsKt1mLeXPeDKgf87/2s9XTxa9KY2r0LcPO4eP+BxuCDxbrY1To83
I4z+5HnPq1pBPCu9ghkb+PxoAINRA74Mz9a8CCy5wUyzFRvUkc2OVs/FN+AN
1ECG6Y0frHzQh5lXIwfFLznH8AZ/8Ac1B+VdM6wc1Kw6r6XXBn+FM1CflS+Y
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
QRAEQRAEQRAEQRAEQRAEQRAEI4P/B2QaQrU=
    "], {{0, 519}, {1037, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVeQk4Vd/X/z7n3MnlmudZZjLPJPM8z0Mq1zzTNUWRkAyVZEghhUSKRkMJ
oUkyFUqRQiiVypAp70H1/f2/7/993ufdz7PP/Zy911rns/Zee++zzhXwCLX1
gQEA4QT0YkuO1qFQyDF2GPRGNybC2wNCATsXegFc7OSwsCCYHoDgkAiKrZEu
v7OLKz9+FECACBgAO2Ake4aH6Vhbm4P/sSwMgA2D4LnUhq3/We7/Wxi8vMM9
AYCsUezhFe4ZjOJbAGA4PcMoEQBge9B2weiIsA08h2JmCkoQANyGY8y+W5h7
A3tsYdlNGXtbPRTrA0CgIZMpvgDQbtjnj/L0Re3QhqF9jCFe/iGoaDKKd3r6
kb0A4GxHZbYHB4du4FkUi3n8hx3f/8emx1+bZLLvX7zly2Yh6PuHhwWRY/6P
w/G/l+CgyD/P2IZWGj+Kse2Gz+i4VQSGmm1gGhQ3hnhYWqGYEcWP/b025Tfw
kF+kscNv+RnPcD10zAArADDwIuuboRgdS5g1MtBB5zeWJ1M2dVF52NI/wsT+
N/aghNr+tg9HeYcb2P3Bft4m5r9tpoYEWf7B53z8DU1QjEYafCvWz95piyfc
HuXvaIliWhT3hAfamf2WH4n107P8I0OJtN3gLITiOR+Koe2WDMIeHP7HL0Ta
k7zJgR3F2hF+9sZbuoizd7iz+R9uXt76BlscEC/vEIffnBE0unRtf+umhAVZ
/5ZHznkHGdlujTNyLTzK7o9uXwQaYFvjgLwPIJtab/FHFsIirO23uGEwwBzo
AX3ADyLR6gFCQQDw75qpm0HvtnoMARlQgC/wBlK/W/5oOG32hKBXOxALPqPI
G4T/1dPd7PUGUWj72t/WrasU8NnsjdrUCAQfUByM4cTsxGhgzNGrNlrlMaoY
tT96/HR/noozwOnjjHGGOPG/PDxR1kFopQD//972jyb2A7YX+x7bjx3FvgJm
aK836vMGw5C/njmC8U0rv+/3+idS/sWcH1iAUVTP8Ld3Hqj29B8ZjAjKWgmj
i9FE+aPcMawYTiCFUUQ90cFoob4poa3/yTDyL4t/xvLfz9vg958+/m6nlaBV
+s3C4y9/vb9S/7ai9x9j5IX+mv1bEklFbiKPkPvIE6QRqQP8SDNSj3Qi9zbw
30gY34yEP0+z3eQWiNrx/yMjWyU7Lbv6355O/s2AsjnfIMJ7f8TGgtALDYuh
+Pv6RfDroDuyN79JiKf0dn55WTllADb2963t44ft5r4NsXb/00ZG929VeQCI
uv+0haL7QHUuGtZn/mkTQdcmhxoAN2w9IylRW20bxwvAoucGHboyOAAvEARi
qE/yQBloAG1gAEyBFbAHLmAPOup+IBhlHQ0OgsMgBWSAkyAXnAXFoBRUgKvg
BqgDjeA+eAiegh7QD16jsTEBPoFZsABWIAjCQySICeKA+CBhSBKSh1ShnZAB
ZA7ZQi6QO+QLhUCR0EEoCcqATkFnoQtQJXQdaoDuQ0+gXugV9A6ahr5DyzAC
08DMMA8sAsvAqrAObAbbw7thX3gfHAsnwyfgfLgEvgLXwvfhp3A/PAp/gucR
gFAjrIgAIoWoInqIFeKK+CAUJB5JR/KQEqQauYPO9XNkFJlBljA4DBOGHyOF
xqcxxgHjidmHicccw5zFVGBqMe2Y55h3mFnMLywJy42VxKpjTbDOWF9sNDYF
m4ctx97GPkBX1AR2AYfDseJEcSro2nTBBeAO4I7hinA1uBZcL24MN4/H4znw
knhNvBWejI/Ap+DP4K/gm/F9+An8TwI1gY8gTzAkuBJCCImEPMJlQhOhjzBJ
WKGipxKmUqeyovKiiqHKpCqjukPVTTVBtUJkIIoSNYn2xADiYWI+sZr4gPiG
+IOamnobtRq1DbU/dQJ1PvU16sfU76iXaBhpJGj0aNxoImlO0FyiaaF5RfOD
RCKJkLRJrqQI0glSJamNNEL6SctEK01rQutFe4i2gLaWto/2Cx0VnTCdDt0e
uli6PLqbdN10M/RU9CL0evRk+nj6AvoG+kH6eQYmBjkGK4ZghmMMlxmeMEwx
4hlFGA0YvRiTGUsZ2xjHmBAmQSY9Jk+mJKYypgdME8w4ZlFmE+YA5gzmq8xd
zLMsjCyKLI4s+1kKWO6xjLIirCKsJqxBrJmsN1gHWJfZeNh02LzZ0tiq2frY
Ftm52LXZvdnT2WvY+9mXOfg5DDgCObI46jiGOTGcEpw2nNGc5zgfcM5wMXNp
cHlypXPd4BrihrkluG25D3CXcndyz/Pw8hjxhPGc4WnjmeFl5dXmDeDN4W3i
neZj4tvJ58+Xw9fM95GfhV+HP4g/n7+df1aAW8BYIFLggkCXwMo20W0O2xK3
1WwbFiQKqgr6COYItgrOCvEJWQgdFKoSGhKmElYV9hM+LfxIeFFEVMRJ5KhI
nciUKLuoiWisaJXoGzGSmJbYPrESsRfiOHFV8UDxIvEeCVhCScJPokCiWxKW
VJb0lyyS7N2O3a62PWR7yfZBKRopHakoqSqpd9Ks0ubSidJ10l9khGRcZbJk
Hsn8klWSDZItk30txyhnKpcod0fuu7yEvKd8gfwLBZKCocIhhXqFb4qSit6K
5xRfKjEpWSgdVWpVWlNWUaYoVytPqwipuKsUqgyqMqtaqx5TfayGVdNVO6TW
qLakrqweoX5D/auGlEagxmWNqR2iO7x3lO0Y09ymSda8oDm6k3+n+87zO0e1
BLTIWiVa77UFtb20y7UndcR1AnSu6HzRldWl6N7WXdRT14vTa9FH9I300/W7
DBgNHAzOGowYbjP0NawynDVSMjpg1GKMNTYzzjIeNOEx8TSpNJk1VTGNM203
ozGzMztr9t5cwpxifscCtjC1yLZ4YylsGWJZZwWsTKyyrYatRa33Wd+1wdlY
2xTYfLCVsz1o+8iOyW6v3WW7BXtd+0z71w5iDpEOrY50jm6OlY6LTvpOp5xG
nWWc45yfunC6+LvUu+JdHV3LXed3GezK3TXhpuSW4jawW3T3/t1P9nDuCdpz
by/dXvLem+5Ydyf3y+6rZCtyCXnew8Sj0GPWU8/ztOcnL22vHK9pb03vU96T
Ppo+p3ymfDV9s32n/bT88vxm/PX8z/p/CzAOKA5YDLQKvBS4HuQUVBNMCHYP
bghhDAkMaQ/lDd0f2hsmGZYSNrpPfV/uvlmKGaU8HArfHV4fwYy+6nRGikUe
iXwXtTOqIOpntGP0zf0M+0P2d8ZIxKTFTMYaxl48gDngeaD1oMDBwwffxenE
XYiH4j3iWw8JHko+NJFglFBxmHg48PCzRNnEU4lzSU5Jd5J5khOSx44YHalK
oU2hpAwe1ThanIpJ9U/tSlNIO5P2K90rvSNDNiMvY/WY57GO43LH84+vn/A5
0ZWpnHnuJO5kyMmBLK2silMMp2JPjWVbZNfm8Oek58zl7s19kqeYV3yaeDry
9Gi+eX79GaEzJ8+snvU721+gW1BTyF2YVrhY5FXUd077XHUxT3FG8fJ5//Mv
LxhdqC0RKckrxZVGlX4ocyx7dFH1YmU5Z3lG+dqlkEujFbYV7ZUqlZWXuS9n
VsFVkVXTV9yu9FzVv1pfLVV9oYa1JuMauBZ57eN19+sDN8xutN5UvVl9S/hW
4W2m2+m1UG1M7WydX91ovUt9b4NpQ+sdjTu370rfvdQo0Fhwj+VeZhOxKblp
vTm2eb4lrGXmvu/9sda9ra/bnNtetNu0dz0we/D4oeHDtkc6j5ofaz5ufKL+
pKFDtaPuqfLT2k6lztvPlJ7d7lLuqu1W6a7vUeu507ujt6lPq+/+c/3nD1+Y
vHjab9nfO+Aw8HLQbXD0pdfLqVdBr74NRQ2tvE54g32TPkw/nDfCPVLyVvxt
zajy6L13+u8639u9fz3mOfZpPHx8dSL5A+lD3iTfZOWU/FTjtOF0z8ddHyc+
hX1amUn5zPC58IvYl1tftb92zjrPTnyjfFv/fuwHx49Lc4pzrfPW8yMLwQsr
i+k/OX5WLKkuPVp2Wp5ciV7Fr+avia/d+WX268168Pp6GJlC3nwVQNAK+/gA
8P0SACQXAJjQPI5Iu5V//S4ItJF2AOAISUOf4HYkCWOH1caJ4jkJ7FR8RE1q
S5pA0knaBroZBilGb6ZS5jFWCbYY9mZOOi4n7jKeH3w7+JMFngkyCNkKHxd5
KgbEFSR8JE9v75BalBGTtZFLkK9S6FeCleVUdqumq9Wqv9tB0lTd6a6Vpn1d
540eQV/ZwNPwpFG98YgpZCZkbmQRYJlpdcv6pc1PO1Z7BQcrx2Cn487VLk9d
3+2adVvcvbIXuBPJHB5Snjpett57fbx9yX52/jsC+AOhwNGg5uDzIUmhfmHW
+1Qp/OGE8K8RA5FNURXR2fvjY4JiXQ6YHNSMU4lXPqSWoHPYLNEpyTs54siR
lJyjZak301rSOzMGjr09Pnnic+b3k/NZC6fms+dzlvMwp1nyt58xOutZcKgw
v6j6XHPx0/MvLgyVjJZOl82VI5dYKiQqdS+7VUVfybl6o7q35tt1hhsKN+1u
hd8+WVtZd6f+fkPbnZa7dxtv36tpqmwubSm6n9ua3nawPeCB3UPlR+yPlh6P
PunuePi0rfP+s8aumu78nvBevT5S3/PnBS98+pUGsAODgxUvo15pD+GGHqHx
pfRmcjhrRGNk7O3xUY3RT++K39uOIWM14w7jSxM5H7Z/aJ60nRyfOjItMz3+
seJTyIzCzPznmi+eXxm+3p61nv3w7eB3tu8Pf2TOhcyTF3zQOBpffrAmvb6+
Of+C0DU4AJFHpjDXsQk4Z7wmQYpKlChKvY1GlqROa0PnSR/PUMzYxDTNQs+q
ykZmT+W4xTnCTc2jwLuLL4H/gkDztteC88LUInyiSmIm4u4SMZLZ269LdUpP
yWLkBOR3KLgqRihlKJepNKg+U3uvPrcDp8m1U07LQjtIJ1P3ml6P/mdDghGP
sbyJgamDmad5iMV+y3irJOsjNim2qXbp9scc0h2TnWKc/VzsXfV3abkZ7nbd
E7031/0audWjw/OB123vQp8Dvk5+sv40/jMBPYF3giqDC0IyQxPDKPvcKNrh
fOErEf2RV6NSoj32G8TIxgod4DnIEccST38Id2gh4f3hjsTrSbnJ0Ud2p5ge
1U81TyOnH864eOzh8ZETXzLnTy5mzZ/6kT2b8zl3Ju/L6Z9n6M+qFYQUlhd1
nRsrnj4/ceFtyavS3rLHF5vKGy91VHy+LFC1+0rh1Vc1zNcsr6eiu9fSbela
r7qC+r472LuKjXvvHWkqb25sabp/ufVkW1x79IOEh5mPih6XPjnXceJpZKfd
M6kuTNdQ942ejN6APpvnBi8M+m0GPAYjXya/OjoU99rnjd4w5/DMSMPbo6PO
76TeE95/GGsbL5rY90F7kmbyxVTp9KGP/p+8Zvw+B38J+xo2G/aN8j3qR8xc
9Lz/gtEi3eLNnwY/ny65Ln1e7lmlWRvanH9J0A6ZQS9hbwSHZGIkMd3YWJwM
bhp/keBHJUO1ROygLqaJJtnSytPR0i3Qv2JoYaxkymaOY/FltWXTZBfnYOFY
5Zzi6uNu4qnmLeUr4M8TyNmWKZgiFCVMFjEQ5Rf9KdYpXiwRLmm8XUAKlpqW
HpR5LHtH7rJ8vkKCoruSmjJOuVslV9VZjUPtlXqRhtcOeU2c5sjOWq1MbT8d
fV0RPXp9oP/DYNJwwOiucZ6Jt6mw6ahZvrmVBd6izTLJysSa3fqjTZNttp2f
vYYDyWHE8arTQWdTFxaXt64Vu0LR839p9709CXv13AnuveRCj0DPHV40XkPe
l3z2+ar6rvo1+ycEaAeCwJagw8F6IZiQB6FHwnTCfu6rorigZ3ZlhFXEXGR+
1I6okeiE/Tz778W4x7LGDh2oOpgU5xwvFr9wqC0h+7Bvon6SRDL7EeoUkDJ3
dCz1WVpN+rEM8jHF4/jjQyeuZaafDMwyOsV46mH2ruyZnNhcnTzd06lnCGfT
C8aLOM7JF6udV7ugVCJTKlYmcJGjnOESsYKqkg6NJM0r7lePVl+teX5t9YbY
Tddbp2731jHXuzQU3hlsxN4TbzJq9mg5dP9ca1Pb2/b1hwKP9B77PjnWcf3p
QOdal3j3rp7TvSPP5V8c7/8yaPeyYUjgde6wzFvad9HjGVMxny2/LyzZbMz/
1ne4jYJDs9NsNM90PI7WaQCy6tA88y4AbEQArEkA2KsB+Gg1gI2qARR45O/5
AaGJJwHNOVkBHxAHimimaQ5c0cx5P0hDM8oroAn0gQ9gFWKExCFtND8Mh46j
+eADaAyGYAFYF/aCj6JZXh+8jAgiFkgsUoEMYggYdUwwphTzCsuINUMzsjYc
hNPGJeBa8Vi8Kf4k/iVBgBBEaKDCUzlRVVAtEy2IF4iL1JbUFTQYGg+aNpIw
KY30hdaethHNdLLoAf0++nEGF4ZuRkPGe0yqTLXM6sxtLLYsY6yRbDi2PHYR
9noOS44pzlQuOa4x7mIeD15J3p98D/lzBby2KQriBF8L3RTOFAkSNROTFCeJ
z0r0S97dfk4qXtpNRk2WWXZW7pn8ZYU0RT8lU2VpFRaVddXPaiPqfRodOx5o
tu98pNWlPaQzpbugDwxw6D5HMCaYUJnSmDGbC1goWlpahVjn2DTaTtiTHBQd
XZzinM+7tLtOulHvlt3juPegexm5y+Onl5C3nc8R30a/5QC9wDNBSyGeoX37
DCmNEYqRNdFS+6/H7jjQExd6iDthIDEn2fzIwtGctO3pD455n2DJfJv1LHs4
dz2f/6xaofm5vedjSs6XDV2Sqjx/RbZ69PqFW3vqqBuqG3c3S7byPTB8XNJJ
0y3Wu/Aia1DsVe+bc29Pv+/74D699Jnx65XvYE52QW1xfSl9uX7lxerdtdJf
Yesqm/sHtPnNgRFwAREgD7SABXADwSAeZIEy0AC6wQRYg1ghGcgU8oGSoBLo
PvQexsCisDlMgc/CbfBXhBsxQw4iNcg4hhNji8nAPMBCWE3sAexd7CpOC5eE
e4Knx7vgL+K/E3QI2YQPVBpU2VQzREN0zlepnalvoZkwheYFSY10npaadj/t
JJ0LXRe9IX0Lw06GZkY9xg4mO6ZhNDNdZslklWB9yraPnZW9lsOG4wNnDBeJ
q4xbm3ucJ4vXlI+Wb5j/psCJbf6CukLsQp+E74mcFPUR0xUXlmCUJGzHShGk
aWUYZRnkCHJL8lMKg4odSveV76t0qL5W+65Bu0NW02anv1aENkXHT9dZz0hf
zUDRUNXIyHivSbzpBbNH5rOWXFYG1oHomZZjd9o+1yHH8bxTs/M3V6VdCW7P
9vDujXDv9hD09PHK9b7t0+U77rcSwBqoEGQfHBVyNrQl7COFLdwwIiryUtTQ
fvoYi9jMAy/jROLjDo0d9k2iT+5IiUjFpR3NwBxLPcGV2ZaVmO2cq3da44xG
gUaRWrH4BUzJw7Kocq5L9yo9qliuDFc/uNZ9Y/62XN3BhqeNdE36LZTW8vbp
R7pPbnTKdRX2DPfNvfg2MPlybGjqzdxb6B1xjHlCaNJ4Om9G5Wv6j/LFoKWu
leTVtrW5X0ub8w+jq58B8AIpsBPYAB8QB/LANdAJPkJUkCRkAVGgfKgF+giz
wvpwBFwODyEMiAmSjLQgaxgNTCzmDmYVq4NNxw7ixHGHccP4nfgSAoEQSnhB
pUZVRISJAcR+an3quzRqNPdJ1qQPtIl0AnQt9G70CwwnGaUYnzGFMJOYK1h0
Wd6wxrDxsnWxn+Dw4NTlkuBm5l7hGeat5zvFHyxgvk1WkF0IJ7Qk/E3kq+gP
sTUJWkmh7dpS7tIJMkWy9XLP5X8ociqZKCeqtKnRqLtpXNPEo++qTTrbdLP1
WQ2qjVxNGEx7zc9ahlo72MrbDTm4OnY6G7s83+Xj9nNPkjtEDvPo91LxLvSl
8jscQAwsDbYIBWF1lNAI3si26MgYrwNf4ssSYg4PJK4mw0cIKfRHFVLD015k
OBybPpF6UjrrVXZqrkbet/zKs3sKiUWXilXO3yvRKm25qF/eUWFd+aLK/kpP
tWFNw3WxG6dvEW7H1a7Wp90RudtzL7FZuWW6tbDd6iHm0d0n4U8lO8e7zvU4
9zE/7+vPHDR9uT505Y3V8NTbyNG194njyETiJDyV9BHz6dDMly+GX2Nmi74d
/x75Q//H4tzlecv51wt+CwuLUYvTP91+di/pLVUtk5bDlvtWlFbyV76tmqyW
rK6s2a9d/YX8cv51ZR1ad1i/vDH/4T4K8pvHB0SjCwB2ZH39hwgA+FMArGWt
r6+UrK+vlaLJxhsAWoK2/tvZPGvoASh8u4E6JPoT/v0fy38BoPLUGw==
      "], "RGB", 
      "XYZ"], Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{266.65546875000007`, Automatic},
  ImageSizeRaw->{1037, 519},
  PlotRange->{{0, 1037}, {0, 519}}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"G2AdjointInvariant", "[", "K_", "]"}], ":=", 
  RowBox[{"G2AdjointInvariant", "[", 
   RowBox[{"PD", "[", "K", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G2AdjointInvariant", "[", "pd_PD", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Y", ",", "P", ",", "F", ",", " ", "Q", ",", "crossingRule", ",", "k", 
      ",", "n1", ",", "n2", ",", "n3", ",", "n4", ",", "n5", ",", "n6", ",", 
      "n7"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SetAttributes", "[", 
      RowBox[{"P", ",", "Orderless"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"Q", ",", "Orderless"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"Y", ",", "Orderless"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"k", "=", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"Cases", "[", 
         RowBox[{"pd", ",", "_Integer", ",", "\[Infinity]"}], "]"}], "]"}], 
       "+", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"crossingRule", "=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"a_", ",", "b_", ",", "c_", ",", "d_"}], "]"}], 
       "\[RuleDelayed]", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n1", "=", 
          RowBox[{"k", "++"}]}], ";", 
         RowBox[{"n2", "=", 
          RowBox[{"k", "++"}]}], ";", 
         RowBox[{"n3", "=", 
          RowBox[{"k", "++"}]}], ";", 
         RowBox[{"n4", "=", 
          RowBox[{"k", "++"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"n5", "=", 
          RowBox[{"k", "++"}]}], ";", 
         RowBox[{"n6", "=", 
          RowBox[{"k", "++"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"n7", "=", 
          RowBox[{"k", "++"}]}], ";", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["q", "6"], 
             RowBox[{"Q", "[", 
              RowBox[{"a", ",", "b"}], "]"}], 
             RowBox[{"Q", "[", 
              RowBox[{"c", ",", "d"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["q", 
              RowBox[{"-", "6"}]], 
             RowBox[{"Q", "[", 
              RowBox[{"a", ",", "d"}], "]"}], 
             RowBox[{"Q", "[", 
              RowBox[{"b", ",", "c"}], "]"}]}], "+", 
            RowBox[{"2", 
             RowBox[{"F", "[", 
              RowBox[{"a", ",", "n2", ",", "n1"}], "]"}], 
             RowBox[{"F", "[", 
              RowBox[{"b", ",", "n3", ",", "n2"}], "]"}], 
             RowBox[{"F", "[", 
              RowBox[{"c", ",", "n4", ",", "n3"}], "]"}], 
             RowBox[{"F", "[", 
              RowBox[{"d", ",", "n1", ",", "n4"}], "]"}]}]}], ")"}], "+", 
          RowBox[{
           FractionBox["1", 
            RowBox[{
             SuperscriptBox["q", "3"], 
             RowBox[{"(", 
              RowBox[{"q", "+", 
               SuperscriptBox["q", 
                RowBox[{"-", "1"}]]}], ")"}]}]], 
           RowBox[{"F", "[", 
            RowBox[{"a", ",", "n3", ",", "n1"}], "]"}], 
           RowBox[{"F", "[", 
            RowBox[{"d", ",", "n1", ",", "n2"}], "]"}], 
           RowBox[{"F", "[", 
            RowBox[{"b", ",", "n7", ",", "n6"}], "]"}], 
           RowBox[{"F", "[", 
            RowBox[{"c", ",", "n5", ",", "n7"}], "]"}], 
           RowBox[{"Y", "[", 
            RowBox[{"n3", ",", "n4", ",", "n6"}], "]"}], 
           RowBox[{"Y", "[", 
            RowBox[{"n2", ",", "n4", ",", "n5"}], "]"}]}], "+", 
          RowBox[{
           FractionBox[
            SuperscriptBox["q", "3"], 
            RowBox[{"q", "+", 
             SuperscriptBox["q", 
              RowBox[{"-", "1"}]]}]], 
           RowBox[{"F", "[", 
            RowBox[{"b", ",", "n3", ",", "n1"}], "]"}], 
           RowBox[{"F", "[", 
            RowBox[{"a", ",", "n1", ",", "n2"}], "]"}], 
           RowBox[{"F", "[", 
            RowBox[{"c", ",", "n7", ",", "n6"}], "]"}], 
           RowBox[{"F", "[", 
            RowBox[{"d", ",", "n5", ",", "n7"}], "]"}], 
           RowBox[{"Y", "[", 
            RowBox[{"n3", ",", "n4", ",", "n6"}], "]"}], 
           RowBox[{"Y", "[", 
            RowBox[{"n2", ",", "n4", ",", "n5"}], "]"}]}]}]}], ")"}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"P", "/:", 
      RowBox[{
       RowBox[{"P", "[", 
        RowBox[{"a_", ",", "b_"}], "]"}], 
       RowBox[{"P", "[", 
        RowBox[{"b_", ",", "c_"}], "]"}]}], ":=", 
      RowBox[{"P", "[", 
       RowBox[{"a", ",", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P", "/:", 
      SuperscriptBox[
       RowBox[{"P", "[", 
        RowBox[{"a_", ",", "b_"}], "]"}], "2"], ":=", 
      RowBox[{"P", "[", 
       RowBox[{"a", ",", "a"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P", "/:", 
      RowBox[{"P", "[", 
       RowBox[{"a_", ",", "a_"}], "]"}], ":=", 
      RowBox[{
       SuperscriptBox["q", "10"], "+", 
       SuperscriptBox["q", "8"], "+", 
       SuperscriptBox["q", "2"], "+", "1", "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "2"}]], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "8"}]], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "10"}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Y", "/:", 
      RowBox[{"Y", "[", 
       RowBox[{"a_", ",", "a_", ",", "b_"}], "]"}], ":=", "0"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Y", "/:", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], 
       RowBox[{"P", "[", 
        RowBox[{"a_", ",", "d_"}], "]"}]}], ":=", 
      RowBox[{"Y", "[", 
       RowBox[{"d", ",", "b", ",", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Y", "/:", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"b_", ",", "a_", ",", "d_"}], "]"}]}], ":=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q", "6"], "+", 
          SuperscriptBox["q", "4"], "+", 
          SuperscriptBox["q", "2"], "+", 
          SuperscriptBox["q", 
           RowBox[{"-", "2"}]], "+", 
          SuperscriptBox["q", 
           RowBox[{"-", "4"}]], "+", 
          SuperscriptBox["q", 
           RowBox[{"-", "6"}]]}], ")"}]}], " ", 
       RowBox[{"P", "[", 
        RowBox[{"c", ",", "d"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Y", "/:", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"d_", ",", "b_", ",", "e_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"f_", ",", "c_", ",", "e_"}], "]"}]}], ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["q", "4"], "+", "1", "+", 
         SuperscriptBox["q", 
          RowBox[{"-", "4"}]]}], ")"}], " ", 
       RowBox[{"Y", "[", 
        RowBox[{"a", ",", "d", ",", "f"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Y", "/:", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a1_", ",", "b1_", ",", "b2_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a2_", ",", "b2_", ",", "b3_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a3_", ",", "b3_", ",", "b4_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a4_", ",", "b4_", ",", "b1_"}], "]"}]}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q", "2"], "+", "1", "+", 
          SuperscriptBox["q", 
           RowBox[{"-", "2"}]]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"P", "[", 
            RowBox[{"a1", ",", "a2"}], "]"}], 
           RowBox[{"P", "[", 
            RowBox[{"a3", ",", "a4"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"P", "[", 
            RowBox[{"a2", ",", "a3"}], "]"}], 
           RowBox[{"P", "[", 
            RowBox[{"a4", ",", "a1"}], "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q", "2"], "+", 
          SuperscriptBox["q", 
           RowBox[{"-", "2"}]]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Y", "[", 
            RowBox[{"a1", ",", "a2", ",", "b1"}], "]"}], 
           RowBox[{"Y", "[", 
            RowBox[{"a3", ",", "a4", ",", "b1"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Y", "[", 
            RowBox[{"a2", ",", "a3", ",", "b1"}], "]"}], 
           RowBox[{"Y", "[", 
            RowBox[{"a4", ",", "a1", ",", "b1"}], "]"}]}]}], ")"}]}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Y", "/:", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a1_", ",", "b1_", ",", "b2_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a2_", ",", "b2_", ",", "b3_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a3_", ",", "b3_", ",", "b4_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a4_", ",", "b4_", ",", "b5_"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a5_", ",", "b5_", ",", "b1_"}], "]"}]}], ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a1", ",", "a5", ",", "b2"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a2", ",", "b2", ",", "b3"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a3", ",", "b3", ",", "a4"}], "]"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a1", ",", "b1", ",", "b2"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a2", ",", "b2", ",", "a3"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a5", ",", "a4", ",", "b1"}], "]"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a1", ",", "b1", ",", "a2"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a3", ",", "b4", ",", "b5"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a5", ",", "b5", ",", "b1"}], "]"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a3", ",", "a2", ",", "b4"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a4", ",", "b4", ",", "b5"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a5", ",", "b5", ",", "a1"}], "]"}]}], 
         "\[IndentingNewLine]", "+", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a2", ",", "a1", ",", "b3"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a3", ",", "b3", ",", "b4"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"a4", ",", "b4", ",", "a5"}], "]"}]}]}], ")"}], 
       "\[IndentingNewLine]", "-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a1", ",", "a2", ",", "a3"}], "]"}], 
          RowBox[{"P", "[", 
           RowBox[{"a4", ",", "a5"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a2", ",", "a3", ",", "a4"}], "]"}], 
          RowBox[{"P", "[", 
           RowBox[{"a5", ",", "a1"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a3", ",", "a4", ",", "a5"}], "]"}], 
          RowBox[{"P", "[", 
           RowBox[{"a1", ",", "a2"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a4", ",", "a5", ",", "a1"}], "]"}], 
          RowBox[{"P", "[", 
           RowBox[{"a2", ",", "a3"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a5", ",", "a1", ",", "a2"}], "]"}], 
          RowBox[{"P", "[", 
           RowBox[{"a3", ",", "a4"}], "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Q", "/:", 
      RowBox[{
       RowBox[{"Q", "[", 
        RowBox[{"a_", ",", "b_"}], "]"}], 
       RowBox[{"Q", "[", 
        RowBox[{"b_", ",", "c_"}], "]"}]}], ":=", 
      RowBox[{"Q", "[", 
       RowBox[{"a", ",", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Q", "/:", 
      SuperscriptBox[
       RowBox[{"Q", "[", 
        RowBox[{"a_", ",", "b_"}], "]"}], "2"], ":=", 
      RowBox[{"Q", "[", 
       RowBox[{"a", ",", "a"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Q", "/:", 
      RowBox[{"Q", "[", 
       RowBox[{"a_", ",", "a_"}], "]"}], ":=", 
      RowBox[{
       SuperscriptBox["q", "18"], "+", 
       SuperscriptBox["q", "12"], "+", 
       SuperscriptBox["q", "10"], "+", 
       SuperscriptBox["q", "8"], "+", 
       SuperscriptBox["q", "6"], "+", 
       SuperscriptBox["q", "2"], "+", "2", "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "2"}]], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "6"}]], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "8"}]], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "10"}]], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "12"}]], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "18"}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"F", "/:", 
      RowBox[{
       RowBox[{"Q", "[", 
        RowBox[{"a_", ",", "b_"}], "]"}], 
       RowBox[{"F", "[", 
        RowBox[{"b_", ",", "c_", ",", "d_"}], "]"}]}], ":=", 
      RowBox[{"F", "[", 
       RowBox[{"a", ",", "c", ",", "d"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P", "/:", 
      RowBox[{
       RowBox[{"P", "[", 
        RowBox[{"a_", ",", "b_"}], "]"}], 
       RowBox[{"F", "[", 
        RowBox[{"c_", ",", "a_", ",", "d_"}], "]"}]}], ":=", 
      RowBox[{"F", "[", 
       RowBox[{"c", ",", "b", ",", "d"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"P", "/:", 
      RowBox[{
       RowBox[{"P", "[", 
        RowBox[{"a_", ",", "b_"}], "]"}], 
       RowBox[{"F", "[", 
        RowBox[{"c_", ",", "d_", ",", "a_"}], "]"}]}], ":=", 
      RowBox[{"F", "[", 
       RowBox[{"c", ",", "d", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"F", "/:", 
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"e_", ",", "d_", ",", "a_"}], "]"}], 
       RowBox[{"F", "[", 
        RowBox[{"e_", ",", "b_", ",", "c_"}], "]"}]}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["q", 
           RowBox[{"1", "+", 
            SuperscriptBox["q", "2"]}]]}], 
         RowBox[{"P", "[", 
          RowBox[{"a", ",", "b"}], "]"}], 
         RowBox[{"P", "[", 
          RowBox[{"c", ",", "d"}], "]"}]}], "+", 
        RowBox[{
         FractionBox["q", 
          RowBox[{"1", "+", 
           SuperscriptBox["q", "2"]}]], 
         RowBox[{"Y", "[", 
          RowBox[{"a", ",", "b", ",", "e"}], "]"}], 
         RowBox[{"Y", "[", 
          RowBox[{"e", ",", "c", ",", "d"}], "]"}]}], "+", 
        RowBox[{
         FractionBox[
          SuperscriptBox["q", "5"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["q", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox["q", "4"], "+", 
             SuperscriptBox["q", "8"]}], ")"}]}]], 
         RowBox[{"P", "[", 
          RowBox[{"a", ",", "d"}], "]"}], 
         RowBox[{"P", "[", 
          RowBox[{"b", ",", "c"}], "]"}]}], "-", 
        RowBox[{
         FractionBox[
          SuperscriptBox["q", "3"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["q", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "q", "+", 
             SuperscriptBox["q", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "q", "+", 
             SuperscriptBox["q", "2"]}], ")"}]}]], 
         RowBox[{"Y", "[", 
          RowBox[{"a", ",", "e", ",", "d"}], "]"}], 
         RowBox[{"Y", "[", 
          RowBox[{"c", ",", "e", ",", "b"}], "]"}]}]}], ")"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Fold", "[", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "b"}], "}"}], ",", 
         RowBox[{"FixedPoint", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Collect", "[", 
             RowBox[{
              RowBox[{"Expand", "[", "#", "]"}], ",", 
              RowBox[{"_P", "|", "_Q", "|", "_Y", "|", "_F"}], ",", 
              "Factor"}], "]"}], "&"}], ",", 
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{"b", "/.", "crossingRule"}], ")"}]}]}], "]"}]}], "]"}], 
       ",", "1", ",", 
       RowBox[{"List", "@@", "pd"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6625320489887247`*^9, 3.662532059277013*^9}, {
   3.662532104455473*^9, 3.6625323014288816`*^9}, {3.662533035477345*^9, 
   3.6625331332254543`*^9}, {3.662533204471693*^9, 3.6625332499341183`*^9}, {
   3.662533280709996*^9, 3.662533404569461*^9}, {3.66253348542198*^9, 
   3.662533495440599*^9}, {3.662537615834064*^9, 3.6625377043539762`*^9}, {
   3.6625377555680027`*^9, 3.662537896552555*^9}, {3.6625379990358887`*^9, 
   3.662538009076353*^9}, {3.662539903375605*^9, 3.662539903416974*^9}, {
   3.662539936846031*^9, 3.66253996194879*^9}, {3.662540056244371*^9, 
   3.662540056316023*^9}, {3.6625401214026546`*^9, 3.662540193895645*^9}, {
   3.662540440102428*^9, 3.662540445622428*^9}, {3.662542837709462*^9, 
   3.662542857566143*^9}, {3.6625430553230343`*^9, 3.6625430573096657`*^9}, {
   3.662543087754273*^9, 3.662543114705036*^9}, {3.6626004003235083`*^9, 
   3.662600403730682*^9}, {3.662600502561006*^9, 3.662600515593293*^9}, {
   3.6626010732255287`*^9, 3.662601080095723*^9}, {3.662601501752431*^9, 
   3.662601575669956*^9}, {3.662601651050872*^9, 3.662601781369273*^9}, {
   3.662601909367775*^9, 3.6626019108378687`*^9}, {3.6626025730189457`*^9, 
   3.662602581468608*^9}, {3.6626026281376266`*^9, 3.662602694364946*^9}, {
   3.662604115346387*^9, 3.662604120866507*^9}, {3.662604394908437*^9, 
   3.6626045579507523`*^9}, {3.6626046358530188`*^9, 3.662604748037671*^9}, {
   3.662605027161132*^9, 3.662605116716078*^9}, 3.6626052728468323`*^9, {
   3.662605332700091*^9, 3.662605336139413*^9}, {3.662605390087721*^9, 
   3.6626054820901947`*^9}, 3.662605765944471*^9, {3.662605822382703*^9, 
   3.662606050234621*^9}, {3.662606437367833*^9, 3.662606441541*^9}, {
   3.6626064836547003`*^9, 3.662606566394497*^9}, {3.662606799840127*^9, 
   3.662606815638935*^9}, {3.662612719926775*^9, 3.662612753145315*^9}, {
   3.662612986403378*^9, 3.662613028205714*^9}, {3.662879663006608*^9, 
   3.662879717440473*^9}, {3.662879750225543*^9, 3.662879928117346*^9}, {
   3.662880047778809*^9, 3.6628800853023863`*^9}, 3.662880344560049*^9, {
   3.662880474087682*^9, 3.662880478992941*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"IdentityMap", "[", 
   RowBox[{"G2", ",", 
    SuperscriptBox[
     RowBox[{
      RowBox[{"Irrep", "[", "G2", "]"}], "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], "]"}], 
     RowBox[{"\[CircleTimes]", "2"}]], ",", "\[Beta]"}], "]"}], ",", "CupCap",
   ",", "\[CapitalIota]", ",", "H"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", 
     FractionBox["q", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}]]}], ",", 
    FractionBox[
     SuperscriptBox["q", "5"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["q", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["q", "4"], "+", 
        SuperscriptBox["q", "8"]}], ")"}]}]], ",", 
    FractionBox[
     SuperscriptBox["q", "3"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["q", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "q", "+", 
        SuperscriptBox["q", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "q", "+", 
        SuperscriptBox["q", "2"]}], ")"}]}]], ",", 
    FractionBox["q", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "2"]}]]}], "}"}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"OPD", "[", 
   RowBox[{"PD", "[", "crossings___", "]"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"OPD", "[", "crossings", "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"i_", ",", "j_", ",", "k_", ",", "l_"}], "]"}], "/;", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"j", "-", "l"}], "\[Equal]", "1"}], "||", 
         RowBox[{
          RowBox[{"l", "-", "j"}], ">", "1"}]}], ")"}]}], "\[RuleDelayed]", 
      RowBox[{"Xp", "[", 
       RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"i_", ",", "j_", ",", "k_", ",", "l_"}], "]"}], "/;", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"l", "-", "j"}], "\[Equal]", "1"}], "||", 
         RowBox[{
          RowBox[{"j", "-", "l"}], ">", "1"}]}], ")"}]}], "\[RuleDelayed]", 
      RowBox[{"Xn", "[", 
       RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}]}]}], 
    "}"}]}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"OPD", "[", "K_Knot", "]"}], ":=", 
  RowBox[{"OPD", "[", 
   RowBox[{"PD", "[", "K", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OPD", "[", "L_Link", "]"}], ":=", 
  RowBox[{"OPD", "[", 
   RowBox[{"PD", "[", "L", "]"}], "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Writhe", "[", 
   RowBox[{"k", ":", 
    RowBox[{"(", 
     RowBox[{"_Knot", "|", "_Link", "|", "_BR"}], ")"}]}], "]"}], ":=", 
  RowBox[{"Writhe", "[", 
   RowBox[{"PD", "[", "k", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Writhe", "[", "p_PD", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"o", "=", 
      RowBox[{"OPD", "[", "p", "]"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{"o", ",", "_Xp"}], "]"}], "-", 
     RowBox[{"Count", "[", 
      RowBox[{"o", ",", "_Xn"}], "]"}]}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TwistFactor", "[", 
   RowBox[{"\[CapitalGamma]_", ",", 
    RowBox[{
     RowBox[{"Irrep", "[", "\[CapitalGamma]_", "]"}], "[", "\[Lambda]_", 
     "]"}]}], "]"}], ":=", 
  SuperscriptBox["q", 
   RowBox[{
    RowBox[{"KillingForm", "[", "\[CapitalGamma]", "]"}], "[", 
    RowBox[{"\[Lambda]", ",", 
     RowBox[{"\[Lambda]", "+", 
      RowBox[{"2", 
       RowBox[{"\[Rho]", "[", "\[CapitalGamma]", "]"}]}]}]}], 
    "]"}]]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"check", "[", "L_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Factor", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"TwistFactor", "[", 
        RowBox[{"G2", ",", 
         RowBox[{
          RowBox[{"Irrep", "[", "G2", "]"}], "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], "]"}]}], "]"}], 
       RowBox[{"Writhe", "[", "L", "]"}]], 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"QuantumKnotInvariant", "[", 
          RowBox[{"G2", ",", 
           RowBox[{
            RowBox[{"Irrep", "[", "G2", "]"}], "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], "]"}]}], "]"}], "[", "L", "]"}], 
        "[", "q", "]"}], "/", 
       RowBox[{"G2Invariant", "[", "L", "]"}]}]}], "]"}], ")"}], "===", 
   "1"}]}]], "Input",
 CellChangeTimes->{{3.6626013801082077`*^9, 3.6626013874198112`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"check", "/@", 
  RowBox[{"AllKnots", "[", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.662601391084902*^9, 3.662601420551279*^9}, {
  3.6626028414075937`*^9, 3.662602841482888*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True", ",", "True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{
  3.662601418618228*^9, 3.66260145900146*^9, {3.662602838182878*^9, 
   3.6626028437020073`*^9}, 3.6628784783917437`*^9, 3.662878692469565*^9, 
   3.662880114731388*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"check", "/@", 
  RowBox[{"AllLinks", "[", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.662601405341721*^9, 3.662601407816753*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.662603319747135*^9, 3.662606080732397*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"G2Invariant", "/@", 
  RowBox[{"AllLinks", "[", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.662603324550445*^9, 3.66260333073392*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"], "-", 
       SuperscriptBox["q", "3"], "+", 
       SuperscriptBox["q", "4"], "-", 
       SuperscriptBox["q", "5"], "+", 
       SuperscriptBox["q", "6"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "3"], "+", 
       SuperscriptBox["q", "4"], "+", 
       SuperscriptBox["q", "5"], "+", 
       SuperscriptBox["q", "6"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "4"], "+", 
       SuperscriptBox["q", "8"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"], "+", 
       SuperscriptBox["q", "10"], "+", 
       SuperscriptBox["q", "14"], "+", 
       SuperscriptBox["q", "18"], "+", 
       SuperscriptBox["q", "24"], "+", 
       SuperscriptBox["q", "28"]}], ")"}]}], 
    SuperscriptBox["q", "24"]], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["q", "48"]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"], "-", 
       SuperscriptBox["q", "3"], "+", 
       SuperscriptBox["q", "4"], "-", 
       SuperscriptBox["q", "5"], "+", 
       SuperscriptBox["q", "6"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "3"], "+", 
       SuperscriptBox["q", "4"], "+", 
       SuperscriptBox["q", "5"], "+", 
       SuperscriptBox["q", "6"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "4"], "+", 
       SuperscriptBox["q", "8"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"], "-", 
       SuperscriptBox["q", "6"], "-", 
       SuperscriptBox["q", "12"], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["q", "14"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["q", "16"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["q", "18"]}], "-", 
       SuperscriptBox["q", "20"], "+", 
       SuperscriptBox["q", "24"], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["q", "26"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["q", "28"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["q", "30"]}], "+", 
       SuperscriptBox["q", "32"], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["q", "38"]}], "-", 
       SuperscriptBox["q", "40"], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["q", "42"]}], "-", 
       SuperscriptBox["q", "44"], "+", 
       SuperscriptBox["q", "46"], "+", 
       SuperscriptBox["q", "48"], "-", 
       SuperscriptBox["q", "50"], "+", 
       SuperscriptBox["q", "52"], "+", 
       SuperscriptBox["q", "56"]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["q", "40"]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"], "-", 
       SuperscriptBox["q", "3"], "+", 
       SuperscriptBox["q", "4"], "-", 
       SuperscriptBox["q", "5"], "+", 
       SuperscriptBox["q", "6"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "3"], "+", 
       SuperscriptBox["q", "4"], "+", 
       SuperscriptBox["q", "5"], "+", 
       SuperscriptBox["q", "6"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "4"], "+", 
       SuperscriptBox["q", "8"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["q", "4"]}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["q", "6"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["q", "8"]}], "+", 
       SuperscriptBox["q", "10"], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["q", "12"]}], "+", 
       RowBox[{"7", " ", 
        SuperscriptBox["q", "14"]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["q", "16"]}], "+", 
       RowBox[{"9", " ", 
        SuperscriptBox["q", "18"]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["q", "20"]}], "+", 
       RowBox[{"6", " ", 
        SuperscriptBox["q", "24"]}], "-", 
       RowBox[{"11", " ", 
        SuperscriptBox["q", "26"]}], "+", 
       RowBox[{"15", " ", 
        SuperscriptBox["q", "28"]}], "-", 
       RowBox[{"13", " ", 
        SuperscriptBox["q", "30"]}], "+", 
       RowBox[{"11", " ", 
        SuperscriptBox["q", "32"]}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["q", "34"]}], "-", 
       RowBox[{"5", " ", 
        SuperscriptBox["q", "36"]}], "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["q", "38"]}], "-", 
       RowBox[{"15", " ", 
        SuperscriptBox["q", "40"]}], "+", 
       RowBox[{"15", " ", 
        SuperscriptBox["q", "42"]}], "-", 
       RowBox[{"11", " ", 
        SuperscriptBox["q", "44"]}], "+", 
       RowBox[{"5", " ", 
        SuperscriptBox["q", "46"]}], "+", 
       SuperscriptBox["q", "48"], "-", 
       RowBox[{"7", " ", 
        SuperscriptBox["q", "50"]}], "+", 
       RowBox[{"11", " ", 
        SuperscriptBox["q", "52"]}], "-", 
       RowBox[{"10", " ", 
        SuperscriptBox["q", "54"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["q", "56"]}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["q", "58"]}], "+", 
       SuperscriptBox["q", "62"], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["q", "64"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["q", "66"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["q", "68"]}], "+", 
       SuperscriptBox["q", "70"]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6626033320227833`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"G2AdjointInvariant", "[", 
  RowBox[{"Link", "[", 
   RowBox[{"2", ",", "Alternating", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.662606093699092*^9, 3.662606104997755*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"], "-", 
       SuperscriptBox["q", "3"], "+", 
       SuperscriptBox["q", "4"], "-", 
       SuperscriptBox["q", "5"], "+", 
       SuperscriptBox["q", "6"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "3"], "+", 
       SuperscriptBox["q", "4"], "+", 
       SuperscriptBox["q", "5"], "+", 
       SuperscriptBox["q", "6"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "8"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"6", " ", 
        SuperscriptBox["q", "2"]}], "+", 
       RowBox[{"13", " ", 
        SuperscriptBox["q", "4"]}], "+", 
       RowBox[{"9", " ", 
        SuperscriptBox["q", "6"]}], "-", 
       RowBox[{"5", " ", 
        SuperscriptBox["q", "8"]}], "+", 
       RowBox[{"7", " ", 
        SuperscriptBox["q", "10"]}], "+", 
       RowBox[{"62", " ", 
        SuperscriptBox["q", "12"]}], "+", 
       RowBox[{"130", " ", 
        SuperscriptBox["q", "14"]}], "+", 
       RowBox[{"183", " ", 
        SuperscriptBox["q", "16"]}], "+", 
       RowBox[{"229", " ", 
        SuperscriptBox["q", "18"]}], "+", 
       RowBox[{"173", " ", 
        SuperscriptBox["q", "20"]}], "+", 
       RowBox[{"136", " ", 
        SuperscriptBox["q", "22"]}], "+", 
       RowBox[{"421", " ", 
        SuperscriptBox["q", "24"]}], "+", 
       RowBox[{"1115", " ", 
        SuperscriptBox["q", "26"]}], "+", 
       RowBox[{"1115", " ", 
        SuperscriptBox["q", "28"]}], "-", 
       RowBox[{"27", " ", 
        SuperscriptBox["q", "30"]}], "-", 
       RowBox[{"655", " ", 
        SuperscriptBox["q", "32"]}], "+", 
       RowBox[{"1491", " ", 
        SuperscriptBox["q", "34"]}], "+", 
       RowBox[{"3683", " ", 
        SuperscriptBox["q", "36"]}], "+", 
       RowBox[{"1702", " ", 
        SuperscriptBox["q", "38"]}], "-", 
       RowBox[{"2193", " ", 
        SuperscriptBox["q", "40"]}], "-", 
       RowBox[{"577", " ", 
        SuperscriptBox["q", "42"]}], "+", 
       RowBox[{"5255", " ", 
        SuperscriptBox["q", "44"]}], "+", 
       RowBox[{"5896", " ", 
        SuperscriptBox["q", "46"]}], "-", 
       RowBox[{"905", " ", 
        SuperscriptBox["q", "48"]}], "-", 
       RowBox[{"3897", " ", 
        SuperscriptBox["q", "50"]}], "+", 
       RowBox[{"2808", " ", 
        SuperscriptBox["q", "52"]}], "+", 
       RowBox[{"8254", " ", 
        SuperscriptBox["q", "54"]}], "+", 
       RowBox[{"2838", " ", 
        SuperscriptBox["q", "56"]}], "-", 
       RowBox[{"3893", " ", 
        SuperscriptBox["q", "58"]}], "-", 
       RowBox[{"931", " ", 
        SuperscriptBox["q", "60"]}], "+", 
       RowBox[{"5892", " ", 
        SuperscriptBox["q", "62"]}], "+", 
       RowBox[{"5277", " ", 
        SuperscriptBox["q", "64"]}], "-", 
       RowBox[{"569", " ", 
        SuperscriptBox["q", "66"]}], "-", 
       RowBox[{"2207", " ", 
        SuperscriptBox["q", "68"]}], "+", 
       RowBox[{"1698", " ", 
        SuperscriptBox["q", "70"]}], "+", 
       RowBox[{"3693", " ", 
        SuperscriptBox["q", "72"]}], "+", 
       RowBox[{"1497", " ", 
        SuperscriptBox["q", "74"]}], "-", 
       RowBox[{"659", " ", 
        SuperscriptBox["q", "76"]}], "-", 
       RowBox[{"29", " ", 
        SuperscriptBox["q", "78"]}], "+", 
       RowBox[{"1117", " ", 
        SuperscriptBox["q", "80"]}], "+", 
       RowBox[{"1117", " ", 
        SuperscriptBox["q", "82"]}], "+", 
       RowBox[{"421", " ", 
        SuperscriptBox["q", "84"]}], "+", 
       RowBox[{"136", " ", 
        SuperscriptBox["q", "86"]}], "+", 
       RowBox[{"173", " ", 
        SuperscriptBox["q", "88"]}], "+", 
       RowBox[{"229", " ", 
        SuperscriptBox["q", "90"]}], "+", 
       RowBox[{"183", " ", 
        SuperscriptBox["q", "92"]}], "+", 
       RowBox[{"130", " ", 
        SuperscriptBox["q", "94"]}], "+", 
       RowBox[{"62", " ", 
        SuperscriptBox["q", "96"]}], "+", 
       RowBox[{"7", " ", 
        SuperscriptBox["q", "98"]}], "-", 
       RowBox[{"5", " ", 
        SuperscriptBox["q", "100"]}], "+", 
       RowBox[{"9", " ", 
        SuperscriptBox["q", "102"]}], "+", 
       RowBox[{"13", " ", 
        SuperscriptBox["q", "104"]}], "+", 
       RowBox[{"6", " ", 
        SuperscriptBox["q", "106"]}], "+", 
       SuperscriptBox["q", "108"]}], ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["q", "48"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["q", "4"], "+", 
        SuperscriptBox["q", "8"]}], ")"}], "2"]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "3"]}], "-", 
      SuperscriptBox["q", "5"], "+", 
      SuperscriptBox["q", "6"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "3"]}], "+", 
      SuperscriptBox["q", "5"], "+", 
      SuperscriptBox["q", "6"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"2", ",", "13"}], "]"}]}], 
   RowBox[{
    SuperscriptBox["q", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "8"]}], ")"}]}]], "-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["q", "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["q", "4"], "+", 
        SuperscriptBox["q", "8"]}], ")"}], "2"]}]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["q", "4"]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["q", "6"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "8"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "10"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "12"]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["q", "14"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["q", "16"]}], "-", 
      SuperscriptBox["q", "18"], "+", 
      SuperscriptBox["q", "20"]}], ")"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"3", ",", "10"}], "]"}]}]}], "+", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["q", "12"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["q", "4"], "+", 
        SuperscriptBox["q", "8"]}], ")"}], "2"]}]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "8"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "2"], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["q", "6"]}], "+", 
      SuperscriptBox["q", "8"], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["q", "10"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "12"]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["q", "14"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "16"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["q", "18"]}], "+", 
      SuperscriptBox["q", "20"], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["q", "22"]}], "+", 
      SuperscriptBox["q", "26"], "+", 
      SuperscriptBox["q", "28"]}], ")"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"3", ",", "17"}], "]"}]}]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"4", ",", "6"}], "]"}]}], 
   RowBox[{
    SuperscriptBox["q", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "8"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["q", "6"]}], "+", 
       SuperscriptBox["q", "8"], "-", 
       SuperscriptBox["q", "10"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["q", "12"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["q", "14"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["q", "16"]}], "-", 
       SuperscriptBox["q", "18"], "+", 
       SuperscriptBox["q", "20"], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["q", "22"]}], "+", 
       SuperscriptBox["q", "24"], "-", 
       SuperscriptBox["q", "26"], "+", 
       SuperscriptBox["q", "28"]}], ")"}], " ", 
     RowBox[{"P$38982", "[", 
      RowBox[{"4", ",", "7"}], "]"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["q", "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["q", "4"], "+", 
        SuperscriptBox["q", "8"]}], ")"}], "2"]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "4"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"4", ",", "12"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "3"]}], "-", 
      SuperscriptBox["q", "5"], "+", 
      SuperscriptBox["q", "6"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "3"]}], "+", 
      SuperscriptBox["q", "5"], "+", 
      SuperscriptBox["q", "6"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"4", ",", "13"}], "]"}]}], 
   RowBox[{
    SuperscriptBox["q", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "8"]}], ")"}]}]], "+", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["q", "12"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["q", "4"], "+", 
        SuperscriptBox["q", "8"]}], ")"}], "2"]}]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "6"]}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["q", "8"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["q", "10"]}], "-", 
      RowBox[{"5", " ", 
       SuperscriptBox["q", "12"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["q", "14"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["q", "16"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["q", "18"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "20"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["q", "22"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["q", "24"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["q", "26"]}], "-", 
      RowBox[{"5", " ", 
       SuperscriptBox["q", "28"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["q", "30"]}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["q", "32"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "34"]}], "+", 
      SuperscriptBox["q", "40"]}], ")"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"4", ",", "16"}], "]"}]}]}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"], "-", 
      SuperscriptBox["q", "6"], "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"5", ",", "6"}], "]"}]}], 
   RowBox[{
    SuperscriptBox["q", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"5", ",", "7"}], "]"}]}], 
   RowBox[{
    SuperscriptBox["q", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["q", "10"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SuperscriptBox["q", "2"], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "4"]}]}], ")"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"3", ",", "4"}], "]"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"5", ",", "11"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["q", "10"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], " ", 
        RowBox[{"P$38982", "[", 
         RowBox[{"3", ",", "13"}], "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "q", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "q", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "3"]}]]}], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"P$38982", "[", 
        RowBox[{"3", ",", "16"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"P$38982", "[", 
        RowBox[{"4", ",", "14"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"P$38982", "[", 
        RowBox[{"4", ",", "17"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]]}], ")"}], " ", 
   RowBox[{"P$38982", "[", 
    RowBox[{"5", ",", "11"}], "]"}]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"5", ",", "13"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["q", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"4", ",", "15"}], "]"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"5", ",", "14"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "2"]}], ")"}], "6"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"4", ",", "14"}], "]"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"5", ",", "15"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "2"]}], ")"}], "6"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"5", ",", "16"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"]}]], "+", 
  RowBox[{
   RowBox[{"P$38982", "[", 
    RowBox[{"4", ",", "11"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["q", "6"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["q", "4"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["q", "8"]}], "+", 
          SuperscriptBox["q", "10"], "+", 
          SuperscriptBox["q", "12"]}], ")"}], " ", 
        RowBox[{"P$38982", "[", 
         RowBox[{"3", ",", "6"}], "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "q", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "q", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "3"]}]]}], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "6"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["q", "4"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["q", "8"]}], "+", 
         SuperscriptBox["q", "10"], "+", 
         SuperscriptBox["q", "12"]}], ")"}], " ", 
       RowBox[{"P$38982", "[", 
        RowBox[{"3", ",", "7"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"P$38982", "[", 
        RowBox[{"5", ",", "14"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"P$38982", "[", 
        RowBox[{"5", ",", "17"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["q", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"3", ",", "15"}], "]"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"11", ",", "13"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "2"]}], ")"}], "6"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"3", ",", "13"}], "]"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"11", ",", "15"}], "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "2"]}], ")"}], "6"]], "+", 
  RowBox[{
   RowBox[{"P$38982", "[", 
    RowBox[{"3", ",", "5"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["q", "10"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          SuperscriptBox["q", "2"], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["q", "4"]}]}], ")"}], " ", 
        RowBox[{"P$38982", "[", 
         RowBox[{"4", ",", "11"}], "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "q", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "q", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "3"]}]]}], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"P$38982", "[", 
        RowBox[{"11", ",", "13"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"P$38982", "[", 
        RowBox[{"11", ",", "16"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "8"]}], ")"}], "2"], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"13", ",", "15"}], "]"}]}], 
   RowBox[{
    SuperscriptBox["q", "12"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"]}]], "+", 
  RowBox[{
   RowBox[{"P$38982", "[", 
    RowBox[{"3", ",", "11"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["q", "2"], "+", 
          SuperscriptBox["q", "4"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "8"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["q", "2"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["q", "4"]}], "-", 
          RowBox[{"43", " ", 
           SuperscriptBox["q", "6"]}], "-", 
          RowBox[{"20", " ", 
           SuperscriptBox["q", "8"]}], "-", 
          RowBox[{"27", " ", 
           SuperscriptBox["q", "10"]}], "+", 
          RowBox[{"22", " ", 
           SuperscriptBox["q", "12"]}], "-", 
          RowBox[{"51", " ", 
           SuperscriptBox["q", "14"]}], "-", 
          RowBox[{"52", " ", 
           SuperscriptBox["q", "16"]}], "-", 
          RowBox[{"51", " ", 
           SuperscriptBox["q", "18"]}], "+", 
          RowBox[{"22", " ", 
           SuperscriptBox["q", "20"]}], "-", 
          RowBox[{"27", " ", 
           SuperscriptBox["q", "22"]}], "-", 
          RowBox[{"20", " ", 
           SuperscriptBox["q", "24"]}], "-", 
          RowBox[{"43", " ", 
           SuperscriptBox["q", "26"]}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["q", "28"]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["q", "30"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["q", "32"]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["q", "10"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["q", "4"], "+", 
          SuperscriptBox["q", "8"]}], ")"}]}], ")"}]}], "-", 
     FractionBox[
      RowBox[{"12", " ", 
       SuperscriptBox["q", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"P$38982", "[", 
        RowBox[{"4", ",", "5"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"P$38982", "[", 
        RowBox[{"4", ",", "6"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"P$38982", "[", 
        RowBox[{"4", ",", "7"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["q", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"P$38982", "[", 
        RowBox[{"5", ",", "13"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["q", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"P$38982", "[", 
        RowBox[{"5", ",", "16"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["q", "2"], "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"P$38982", "[", 
        RowBox[{"13", ",", "15"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "2"]}], ")"}], "6"]]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "8"]}], ")"}], "2"], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"14", ",", "15"}], "]"}]}], 
   RowBox[{
    SuperscriptBox["q", "12"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "3"]}], "-", 
      SuperscriptBox["q", "5"], "+", 
      SuperscriptBox["q", "6"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "3"]}], "+", 
      SuperscriptBox["q", "5"], "+", 
      SuperscriptBox["q", "6"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"P$38982", "[", 
     RowBox[{"16", ",", "18"}], "]"}]}], 
   RowBox[{
    SuperscriptBox["q", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "8"]}], ")"}]}]], "+", 
  RowBox[{
   RowBox[{"Y$38982", "[", 
    RowBox[{"3", ",", "10", ",", "11"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["q", "12"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"4", ",", "5", ",", "10"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "12"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"4", ",", "6", ",", "10"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"Y$38982", "[", 
    RowBox[{"3", ",", "9", ",", "11"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["q", "12"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"4", ",", "5", ",", "9"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "12"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"4", ",", "7", ",", "9"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "10"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"3", ",", "5", ",", "9"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"4", ",", "9", ",", "11"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "10"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"3", ",", "5", ",", "10"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"4", ",", "10", ",", "11"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"], "-", 
      SuperscriptBox["q", "3"], "+", 
      SuperscriptBox["q", "4"], "-", 
      SuperscriptBox["q", "5"], "+", 
      SuperscriptBox["q", "6"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "3"], "+", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "5"], "+", 
      SuperscriptBox["q", "6"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"5", ",", "8", ",", "13"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox["q", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "2"], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "4"]}], "-", 
      SuperscriptBox["q", "6"], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "8"]}], "+", 
      SuperscriptBox["q", "10"], "+", 
      SuperscriptBox["q", "12"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"5", ",", "8", ",", "16"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox["q", "12"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "10"], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"3", ",", "4", ",", "9"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "9", ",", "11"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"4", ",", "6", ",", "13"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "9", ",", "13"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "10"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"4", ",", "9", ",", "11"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "9", ",", "14"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "10"], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"3", ",", "4", ",", "10"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "10", ",", "11"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"4", ",", "7", ",", "16"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "10", ",", "16"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "10"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"4", ",", "10", ",", "11"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "10", ",", "17"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["q", "12"], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"3", ",", "4", ",", "13"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "11", ",", "13"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "12"], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"3", ",", "13", ",", "16"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "11", ",", "13"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "10"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"3", "+", 
      SuperscriptBox["q", "2"], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["q", "4"]}]}], ")"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"3", ",", "4", ",", "14"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "11", ",", "14"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "12"], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"4", ",", "14", ",", "17"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "11", ",", "14"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "10"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"3", ",", "13", ",", "15"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "11", ",", "15"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"3", ",", "15", ",", "16"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"4", ",", "14", ",", "15"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"4", ",", "15", ",", "17"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]]}], ")"}], " ", 
   RowBox[{"Y$38982", "[", 
    RowBox[{"5", ",", "11", ",", "15"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["q", "12"], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"3", ",", "4", ",", "16"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "11", ",", "16"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "12"], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"3", ",", "13", ",", "16"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "11", ",", "16"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "10"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"3", "+", 
      SuperscriptBox["q", "2"], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["q", "4"]}]}], ")"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"3", ",", "4", ",", "17"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "11", ",", "17"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "12"], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"4", ",", "14", ",", "17"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "11", ",", "17"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["q", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"4", ",", "13", ",", "15"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "13", ",", "14"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"], "-", 
      SuperscriptBox["q", "3"], "+", 
      SuperscriptBox["q", "4"], "-", 
      SuperscriptBox["q", "5"], "+", 
      SuperscriptBox["q", "6"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "3"], "+", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "5"], "+", 
      SuperscriptBox["q", "6"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"5", ",", "13", ",", "14"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox["q", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "2"], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["q", "4"]}], "+", 
      SuperscriptBox["q", "6"], "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"4", ",", "13", ",", "14"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "13", ",", "15"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "4"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"4", ",", "13", ",", "15"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "13", ",", "16"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "4"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"4", ",", "15", ",", "16"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "13", ",", "16"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"]}]], "+", 
  RowBox[{
   RowBox[{"Y$38982", "[", 
    RowBox[{"4", ",", "11", ",", "14"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["q", "8"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["q", "2"], "+", 
          SuperscriptBox["q", "4"]}], ")"}], " ", 
        RowBox[{"Y$38982", "[", 
         RowBox[{"3", ",", "6", ",", "14"}], "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "q", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "q", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "3"]}]]}], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"3", ",", "7", ",", "14"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "12"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"5", ",", "14", ",", "17"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"Y$38982", "[", 
    RowBox[{"4", ",", "11", ",", "17"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"3", ",", "6", ",", "17"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "8"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["q", "2"], "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"3", ",", "7", ",", "17"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "12"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"5", ",", "14", ",", "17"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"Y$38982", "[", 
    RowBox[{"3", ",", "11", ",", "15"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["q", "10"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["q", "2"], "+", 
          SuperscriptBox["q", "4"]}], ")"}], " ", 
        RowBox[{"Y$38982", "[", 
         RowBox[{"4", ",", "5", ",", "15"}], "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "q", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "q", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "3"]}]]}], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"5", ",", "13", ",", "15"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"5", ",", "15", ",", "16"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"Y$38982", "[", 
    RowBox[{"3", ",", "11", ",", "17"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"6", " ", 
       SuperscriptBox["q", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"4", ",", "5", ",", "17"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"4", ",", "6", ",", "17"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"5", ",", "16", ",", "17"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"3", ",", "6", ",", "9"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"6", ",", "8", ",", "11"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"], "-", 
      SuperscriptBox["q", "3"], "+", 
      SuperscriptBox["q", "4"], "-", 
      SuperscriptBox["q", "5"], "+", 
      SuperscriptBox["q", "6"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "3"], "+", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "5"], "+", 
      SuperscriptBox["q", "6"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"6", ",", "14", ",", "15"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"3", ",", "7", ",", "10"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"7", ",", "8", ",", "11"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"7", ",", "8", ",", "16"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox["q", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "8"]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"8", ",", "10", ",", "17"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox["q", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "8"]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"], "-", 
      SuperscriptBox["q", "3"], "+", 
      SuperscriptBox["q", "4"], "-", 
      SuperscriptBox["q", "5"], "+", 
      SuperscriptBox["q", "6"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "3"], "+", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "5"], "+", 
      SuperscriptBox["q", "6"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"8", ",", "11", ",", "14"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox["q", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "2"], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "4"]}], "-", 
      SuperscriptBox["q", "6"], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "8"]}], "+", 
      SuperscriptBox["q", "10"], "+", 
      SuperscriptBox["q", "12"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"8", ",", "11", ",", "17"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox["q", "12"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"8", ",", "15", ",", "17"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox["q", "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "5"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "10"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"4", ",", "5", ",", "9"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"9", ",", "11", ",", "14"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["q", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"10", ",", "11", ",", "14"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "5"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"10", ",", "11", ",", "15"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox["q", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "5"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "10"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"4", ",", "5", ",", "10"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"10", ",", "11", ",", "17"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"10", ",", "13", ",", "15"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox["q", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "8"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"10", ",", "15", ",", "17"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["q", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"11", ",", "12", ",", "14"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "5"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["q", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"3", ",", "14", ",", "15"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"11", ",", "13", ",", "14"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["q", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["q", "4"]}], "-", 
      RowBox[{"10", " ", 
       SuperscriptBox["q", "6"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["q", "8"]}], "-", 
      RowBox[{"5", " ", 
       SuperscriptBox["q", "10"]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["q", "12"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "14"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "16"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "20"]}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"11", ",", "13", ",", "14"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox["q", "8"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"]}]], "+", 
  RowBox[{
   RowBox[{"Y$38982", "[", 
    RowBox[{"3", ",", "5", ",", "14"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SuperscriptBox["q", "2"], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["q", "4"]}], "+", 
         SuperscriptBox["q", "6"], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["q", "8"]}]}], ")"}], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"4", ",", "11", ",", "14"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"11", ",", "13", ",", "14"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"11", ",", "13", ",", "15"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox["q", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "5"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"]}]], "+", 
  RowBox[{
   RowBox[{"Y$38982", "[", 
    RowBox[{"3", ",", "5", ",", "13"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["q", "12"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"4", ",", "11", ",", "13"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "12"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"11", ",", "13", ",", "16"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"Y$38982", "[", 
    RowBox[{"3", ",", "5", ",", "16"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["q", "12"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"4", ",", "11", ",", "16"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "12"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"11", ",", "13", ",", "16"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"11", ",", "13", ",", "17"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "8"]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "2"], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["q", "4"]}], "+", 
      SuperscriptBox["q", "6"], "+", 
      SuperscriptBox["q", "8"]}], ")"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"3", ",", "13", ",", "14"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"11", ",", "14", ",", "15"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "8"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"4", ",", "5", ",", "16"}], "]"}], " ", 
    RowBox[{"Y$38982", "[", 
     RowBox[{"11", ",", "14", ",", "16"}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "q", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["q", "4"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"11", ",", "14", ",", "16"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "8"]}], ")"}]}]], "+", 
  RowBox[{
   RowBox[{"Y$38982", "[", 
    RowBox[{"4", ",", "5", ",", "15"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"11", ",", "14", ",", "15"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"11", ",", "15", ",", "17"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"11", ",", "16", ",", "17"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]], "+", 
  RowBox[{
   RowBox[{"Y$38982", "[", 
    RowBox[{"3", ",", "5", ",", "17"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SuperscriptBox["q", "2"], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["q", "4"]}], "+", 
         SuperscriptBox["q", "6"], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["q", "8"]}]}], ")"}], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"4", ",", "11", ",", "17"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"11", ",", "16", ",", "17"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"Y$38982", "[", 
    RowBox[{"3", ",", "11", ",", "14"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"6", " ", 
       SuperscriptBox["q", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"4", ",", "5", ",", "14"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"4", ",", "7", ",", "14"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"5", ",", "13", ",", "14"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["q", "2"], "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "2"], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["q", "4"]}], "+", 
         SuperscriptBox["q", "6"], "+", 
         SuperscriptBox["q", "8"]}], ")"}], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"13", ",", "14", ",", "15"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "q", "+", 
         SuperscriptBox["q", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "q", "+", 
         SuperscriptBox["q", "2"]}], ")"}]}]]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"Y$38982", "[", 
    RowBox[{"4", ",", "5", ",", "13"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["q", "6"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["q", "2"], "+", 
          SuperscriptBox["q", "4"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["q", "2"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["q", "4"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["q", "6"]}], "+", 
          SuperscriptBox["q", "8"]}], ")"}], " ", 
        RowBox[{"Y$38982", "[", 
         RowBox[{"11", ",", "13", ",", "17"}], "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "q", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "q", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "3"]}]]}], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["q", "2"], "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "2"], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["q", "4"]}], "+", 
         SuperscriptBox["q", "6"], "+", 
         SuperscriptBox["q", "8"]}], ")"}], " ", 
       RowBox[{"Y$38982", "[", 
        RowBox[{"13", ",", "14", ",", "15"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "q", "+", 
         SuperscriptBox["q", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "q", "+", 
         SuperscriptBox["q", "2"]}], ")"}]}]]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"], "-", 
      SuperscriptBox["q", "6"], "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["q", "10"]}], "-", 
      SuperscriptBox["q", "14"], "+", 
      SuperscriptBox["q", "16"], "+", 
      SuperscriptBox["q", "20"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"13", ",", "14", ",", "16"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox["q", "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "8"]}], ")"}]}]], "+", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["q", "14"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "4"], "+", 
       SuperscriptBox["q", "8"]}], ")"}]}]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "4"], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox["q", "8"]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["q", "10"]}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox["q", "12"]}], "-", 
      RowBox[{"22", " ", 
       SuperscriptBox["q", "14"]}], "+", 
      RowBox[{"27", " ", 
       SuperscriptBox["q", "16"]}], "-", 
      RowBox[{"16", " ", 
       SuperscriptBox["q", "18"]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["q", "20"]}], "-", 
      RowBox[{"16", " ", 
       SuperscriptBox["q", "22"]}], "+", 
      RowBox[{"27", " ", 
       SuperscriptBox["q", "24"]}], "-", 
      RowBox[{"22", " ", 
       SuperscriptBox["q", "26"]}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox["q", "28"]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["q", "30"]}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox["q", "32"]}], "-", 
      SuperscriptBox["q", "36"], "+", 
      SuperscriptBox["q", "40"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"13", ",", "15", ",", "16"}], "]"}], "2"]}]}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"13", ",", "16", ",", "17"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "8"]}], ")"}]}]], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"7", " ", 
        SuperscriptBox["q", "2"]}], "+", 
       RowBox[{"24", " ", 
        SuperscriptBox["q", "4"]}], "+", 
       RowBox[{"66", " ", 
        SuperscriptBox["q", "6"]}], "+", 
       RowBox[{"150", " ", 
        SuperscriptBox["q", "8"]}], "+", 
       RowBox[{"232", " ", 
        SuperscriptBox["q", "10"]}], "+", 
       RowBox[{"241", " ", 
        SuperscriptBox["q", "12"]}], "+", 
       RowBox[{"271", " ", 
        SuperscriptBox["q", "14"]}], "+", 
       RowBox[{"482", " ", 
        SuperscriptBox["q", "16"]}], "+", 
       RowBox[{"938", " ", 
        SuperscriptBox["q", "18"]}], "+", 
       RowBox[{"1131", " ", 
        SuperscriptBox["q", "20"]}], "+", 
       RowBox[{"951", " ", 
        SuperscriptBox["q", "22"]}], "+", 
       RowBox[{"1062", " ", 
        SuperscriptBox["q", "24"]}], "+", 
       RowBox[{"2219", " ", 
        SuperscriptBox["q", "26"]}], "+", 
       RowBox[{"3097", " ", 
        SuperscriptBox["q", "28"]}], "+", 
       RowBox[{"2461", " ", 
        SuperscriptBox["q", "30"]}], "+", 
       RowBox[{"1450", " ", 
        SuperscriptBox["q", "32"]}], "+", 
       RowBox[{"3133", " ", 
        SuperscriptBox["q", "34"]}], "+", 
       RowBox[{"6249", " ", 
        SuperscriptBox["q", "36"]}], "+", 
       RowBox[{"6390", " ", 
        SuperscriptBox["q", "38"]}], "+", 
       RowBox[{"2915", " ", 
        SuperscriptBox["q", "40"]}], "+", 
       RowBox[{"2054", " ", 
        SuperscriptBox["q", "42"]}], "+", 
       RowBox[{"6015", " ", 
        SuperscriptBox["q", "44"]}], "+", 
       RowBox[{"9006", " ", 
        SuperscriptBox["q", "46"]}], "+", 
       RowBox[{"6015", " ", 
        SuperscriptBox["q", "48"]}], "+", 
       RowBox[{"2054", " ", 
        SuperscriptBox["q", "50"]}], "+", 
       RowBox[{"2915", " ", 
        SuperscriptBox["q", "52"]}], "+", 
       RowBox[{"6390", " ", 
        SuperscriptBox["q", "54"]}], "+", 
       RowBox[{"6249", " ", 
        SuperscriptBox["q", "56"]}], "+", 
       RowBox[{"3133", " ", 
        SuperscriptBox["q", "58"]}], "+", 
       RowBox[{"1450", " ", 
        SuperscriptBox["q", "60"]}], "+", 
       RowBox[{"2461", " ", 
        SuperscriptBox["q", "62"]}], "+", 
       RowBox[{"3097", " ", 
        SuperscriptBox["q", "64"]}], "+", 
       RowBox[{"2219", " ", 
        SuperscriptBox["q", "66"]}], "+", 
       RowBox[{"1062", " ", 
        SuperscriptBox["q", "68"]}], "+", 
       RowBox[{"951", " ", 
        SuperscriptBox["q", "70"]}], "+", 
       RowBox[{"1131", " ", 
        SuperscriptBox["q", "72"]}], "+", 
       RowBox[{"938", " ", 
        SuperscriptBox["q", "74"]}], "+", 
       RowBox[{"482", " ", 
        SuperscriptBox["q", "76"]}], "+", 
       RowBox[{"271", " ", 
        SuperscriptBox["q", "78"]}], "+", 
       RowBox[{"241", " ", 
        SuperscriptBox["q", "80"]}], "+", 
       RowBox[{"232", " ", 
        SuperscriptBox["q", "82"]}], "+", 
       RowBox[{"150", " ", 
        SuperscriptBox["q", "84"]}], "+", 
       RowBox[{"66", " ", 
        SuperscriptBox["q", "86"]}], "+", 
       RowBox[{"24", " ", 
        SuperscriptBox["q", "88"]}], "+", 
       RowBox[{"7", " ", 
        SuperscriptBox["q", "90"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["q", "92"]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Y$38982", "[", 
       RowBox[{"14", ",", "15", ",", "17"}], "]"}], "2"]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["q", "22"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "q", "+", 
        SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "q", "+", 
        SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["q", "4"], "+", 
        SuperscriptBox["q", "8"]}], ")"}], "3"]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Y$38982", "[", 
     RowBox[{"5", ",", "8", ",", "11"}], "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["q", "2"], "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "q", "+", 
         SuperscriptBox["q", "2"], "-", 
         SuperscriptBox["q", "3"], "+", 
         SuperscriptBox["q", "4"], "-", 
         SuperscriptBox["q", "5"], "+", 
         SuperscriptBox["q", "6"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "q", "+", 
         SuperscriptBox["q", "2"], "+", 
         SuperscriptBox["q", "3"], "+", 
         SuperscriptBox["q", "4"], "+", 
         SuperscriptBox["q", "5"], "+", 
         SuperscriptBox["q", "6"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["q", "4"], "+", 
         SuperscriptBox["q", "8"]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["q", "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "q", "+", 
         SuperscriptBox["q", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "q", "+", 
         SuperscriptBox["q", "2"]}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["q", "14"], " ", 
       SuperscriptBox[
        RowBox[{"Y$38982", "[", 
         RowBox[{"14", ",", "15", ",", "17"}], "]"}], "2"]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Y$38982", "[", 
     RowBox[{"7", ",", "8", ",", "10"}], "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"6", " ", 
         SuperscriptBox["q", "2"]}], "+", 
        RowBox[{"13", " ", 
         SuperscriptBox["q", "4"]}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox["q", "6"]}], "-", 
        RowBox[{"5", " ", 
         SuperscriptBox["q", "8"]}], "+", 
        RowBox[{"21", " ", 
         SuperscriptBox["q", "10"]}], "+", 
        RowBox[{"99", " ", 
         SuperscriptBox["q", "12"]}], "+", 
        RowBox[{"106", " ", 
         SuperscriptBox["q", "14"]}], "-", 
        RowBox[{"39", " ", 
         SuperscriptBox["q", "16"]}], "-", 
        RowBox[{"71", " ", 
         SuperscriptBox["q", "18"]}], "+", 
        RowBox[{"222", " ", 
         SuperscriptBox["q", "20"]}], "+", 
        RowBox[{"405", " ", 
         SuperscriptBox["q", "22"]}], "+", 
        RowBox[{"24", " ", 
         SuperscriptBox["q", "24"]}], "-", 
        RowBox[{"312", " ", 
         SuperscriptBox["q", "26"]}], "+", 
        RowBox[{"285", " ", 
         SuperscriptBox["q", "28"]}], "+", 
        RowBox[{"859", " ", 
         SuperscriptBox["q", "30"]}], "+", 
        RowBox[{"242", " ", 
         SuperscriptBox["q", "32"]}], "-", 
        RowBox[{"468", " ", 
         SuperscriptBox["q", "34"]}], "+", 
        RowBox[{"357", " ", 
         SuperscriptBox["q", "36"]}], "+", 
        RowBox[{"1199", " ", 
         SuperscriptBox["q", "38"]}], "+", 
        RowBox[{"402", " ", 
         SuperscriptBox["q", "40"]}], "-", 
        RowBox[{"559", " ", 
         SuperscriptBox["q", "42"]}], "+", 
        RowBox[{"398", " ", 
         SuperscriptBox["q", "44"]}], "+", 
        RowBox[{"1321", " ", 
         SuperscriptBox["q", "46"]}], "+", 
        RowBox[{"398", " ", 
         SuperscriptBox["q", "48"]}], "-", 
        RowBox[{"559", " ", 
         SuperscriptBox["q", "50"]}], "+", 
        RowBox[{"402", " ", 
         SuperscriptBox["q", "52"]}], "+", 
        RowBox[{"1199", " ", 
         SuperscriptBox["q", "54"]}], "+", 
        RowBox[{"357", " ", 
         SuperscriptBox["q", "56"]}], "-", 
        RowBox[{"468", " ", 
         SuperscriptBox["q", "58"]}], "+", 
        RowBox[{"242", " ", 
         SuperscriptBox["q", "60"]}], "+", 
        RowBox[{"859", " ", 
         SuperscriptBox["q", "62"]}], "+", 
        RowBox[{"285", " ", 
         SuperscriptBox["q", "64"]}], "-", 
        RowBox[{"312", " ", 
         SuperscriptBox["q", "66"]}], "+", 
        RowBox[{"24", " ", 
         SuperscriptBox["q", "68"]}], "+", 
        RowBox[{"405", " ", 
         SuperscriptBox["q", "70"]}], "+", 
        RowBox[{"222", " ", 
         SuperscriptBox["q", "72"]}], "-", 
        RowBox[{"71", " ", 
         SuperscriptBox["q", "74"]}], "-", 
        RowBox[{"39", " ", 
         SuperscriptBox["q", "76"]}], "+", 
        RowBox[{"106", " ", 
         SuperscriptBox["q", "78"]}], "+", 
        RowBox[{"99", " ", 
         SuperscriptBox["q", "80"]}], "+", 
        RowBox[{"21", " ", 
         SuperscriptBox["q", "82"]}], "-", 
        RowBox[{"5", " ", 
         SuperscriptBox["q", "84"]}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox["q", "86"]}], "+", 
        RowBox[{"13", " ", 
         SuperscriptBox["q", "88"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox["q", "90"]}], "+", 
        SuperscriptBox["q", "92"]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["q", "26"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["q", "4"], "+", 
           SuperscriptBox["q", "8"]}], ")"}], "3"]}], ")"}]}], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "16"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["q", "2"], "+", 
          SuperscriptBox["q", "4"]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Y$38982", "[", 
         RowBox[{"14", ",", "15", ",", "17"}], "]"}], "2"]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["q", "4"], "+", 
          SuperscriptBox["q", "8"]}], ")"}], "4"]}]]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"P$38982", "[", 
    RowBox[{"4", ",", "5"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["q", "8"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["q", "2"]}], "+", 
            RowBox[{"15", " ", 
             SuperscriptBox["q", "4"]}], "+", 
            RowBox[{"24", " ", 
             SuperscriptBox["q", "6"]}], "+", 
            RowBox[{"62", " ", 
             SuperscriptBox["q", "8"]}], "+", 
            RowBox[{"63", " ", 
             SuperscriptBox["q", "10"]}], "+", 
            RowBox[{"117", " ", 
             SuperscriptBox["q", "12"]}], "+", 
            RowBox[{"88", " ", 
             SuperscriptBox["q", "14"]}], "+", 
            RowBox[{"151", " ", 
             SuperscriptBox["q", "16"]}], "+", 
            RowBox[{"127", " ", 
             SuperscriptBox["q", "18"]}], "+", 
            RowBox[{"221", " ", 
             SuperscriptBox["q", "20"]}], "+", 
            RowBox[{"155", " ", 
             SuperscriptBox["q", "22"]}], "+", 
            RowBox[{"233", " ", 
             SuperscriptBox["q", "24"]}], "+", 
            RowBox[{"155", " ", 
             SuperscriptBox["q", "26"]}], "+", 
            RowBox[{"221", " ", 
             SuperscriptBox["q", "28"]}], "+", 
            RowBox[{"127", " ", 
             SuperscriptBox["q", "30"]}], "+", 
            RowBox[{"151", " ", 
             SuperscriptBox["q", "32"]}], "+", 
            RowBox[{"88", " ", 
             SuperscriptBox["q", "34"]}], "+", 
            RowBox[{"117", " ", 
             SuperscriptBox["q", "36"]}], "+", 
            RowBox[{"63", " ", 
             SuperscriptBox["q", "38"]}], "+", 
            RowBox[{"62", " ", 
             SuperscriptBox["q", "40"]}], "+", 
            RowBox[{"24", " ", 
             SuperscriptBox["q", "42"]}], "+", 
            RowBox[{"15", " ", 
             SuperscriptBox["q", "44"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["q", "46"]}], "+", 
            SuperscriptBox["q", "48"]}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q", "12"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "q", "+", 
             SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "q", "+", 
             SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["q", "4"], "+", 
            SuperscriptBox["q", "8"]}], ")"}]}], ")"}]}], ")"}]}], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["q", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"P$38982", "[", 
        RowBox[{"11", ",", "14"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["q", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"P$38982", "[", 
        RowBox[{"11", ",", "17"}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "3"]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["q", "2"], "+", 
         SuperscriptBox["q", "4"]}], ")"}], " ", 
       RowBox[{"P$38982", "[", 
        RowBox[{"14", ",", "15"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["q", "2"]}], ")"}], "6"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["q", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["q", "2"]}], "+", 
         RowBox[{"5", " ", 
          SuperscriptBox["q", "4"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["q", "6"]}], "+", 
         SuperscriptBox["q", "8"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Y$38982", "[", 
         RowBox[{"14", ",", "15", ",", "17"}], "]"}], "2"]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "q", "+", 
          SuperscriptBox["q", "2"]}], ")"}], "4"]}]]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["q", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"], "-", 
      SuperscriptBox["q", "3"], "+", 
      SuperscriptBox["q", "4"], "-", 
      SuperscriptBox["q", "5"], "+", 
      SuperscriptBox["q", "6"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "3"], "+", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "5"], "+", 
      SuperscriptBox["q", "6"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Y$38982", "[", 
      RowBox[{"14", ",", "15", ",", "18"}], "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.662606107316545*^9, 3.662880183514382*^9, 
  3.662880521117713*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%96", "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.66288037593926*^9, 3.662880380441674*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{
          FractionBox["17977", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "q", "+", 
              SuperscriptBox["q", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "q", "+", 
              SuperscriptBox["q", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               SuperscriptBox["q", "4"], "+", 
               SuperscriptBox["q", "8"]}], ")"}], "2"]}]], "+", 
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["q", "48"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "q", "+", 
              SuperscriptBox["q", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "q", "+", 
              SuperscriptBox["q", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               SuperscriptBox["q", "4"], "+", 
               SuperscriptBox["q", "8"]}], ")"}], "2"]}]], "+", 
          FractionBox["7", 
           RowBox[{
            SuperscriptBox["q", "46"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["q", "2"]}], ")"}], "6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "q", "+", 
              SuperscriptBox["q", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "q", "+", 
              SuperscriptBox["q", "2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               SuperscriptBox["q", "4"], "+", 
               SuperscriptBox["q", "8"]}], ")"}], "2"]}]], "+", 
          FractionBox["20", 
           RowBox[{
            SuperscriptBox["q", "44"], " ", 
            TemplateBox[{"3"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
               GrayLevel[0.75], RoundingRadius -> 7]& )], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton",
               DisplayFunction->(FrameBox[
                 
                 RowBox[{
                  "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                 Background -> GrayLevel[0.75], 
                 BaseStyle -> {
                  "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                   ShowStringCharacters -> False}, BaselinePosition -> 
                 Baseline, ContentPadding -> False, FrameMargins -> 1, 
                 FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
              ")"}], "2"]}]], "+", 
          FractionBox["29", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )]], "+", 
          TemplateBox[{"1335"},
           "OutputSizeLimit`Skeleton",
           DisplayFunction->(FrameBox[
             RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
             Background -> GrayLevel[0.75], 
             BaseStyle -> {
              "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
               ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
             ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
             GrayLevel[0.75], RoundingRadius -> 7]& )]}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 99, 30530613599514657474, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 99, 30530613599514657474, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 99, 30530613599514657474, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{73., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{73., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[99]]], "Output",
 CellChangeTimes->{3.662880380861746*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Together"}]], "Input",
 CellChangeTimes->{{3.662880385215246*^9, 3.662880386402545*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.662880472128354*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkAdjoint", "[", "L_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Factor", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"TwistFactor", "[", 
        RowBox[{"G2", ",", 
         RowBox[{
          RowBox[{"Irrep", "[", "G2", "]"}], "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], 
       RowBox[{"Writhe", "[", "L", "]"}]], 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"QuantumKnotInvariant", "[", 
          RowBox[{"G2", ",", 
           RowBox[{
            RowBox[{"Irrep", "[", "G2", "]"}], "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], "[", "L", "]"}], 
        "[", "q", "]"}], "/", 
       RowBox[{"G2AdjointInvariant", "[", "L", "]"}]}]}], "]"}], ")"}], "===",
    "1"}]}]], "Input",
 CellChangeTimes->{{3.662606333091659*^9, 3.6626063500506077`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"checkAdjoint", "[", 
  RowBox[{"Link", "[", 
   RowBox[{"2", ",", "Alternating", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6626063511721573`*^9, 3.662606357251472*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"KnotTheory", "::", "credits"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\\"Vogel's algorithm was implemented by \
Dan Carney in the summer of 2005 at the University of Toronto.\\\"\\)\
\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662880183808571*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6626063826747723`*^9, 3.662880369299569*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"L", "=", 
     RowBox[{"Link", "[", 
      RowBox[{"2", ",", "Alternating", ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"Factor", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"TwistFactor", "[", 
       RowBox[{"G2", ",", 
        RowBox[{
         RowBox[{"Irrep", "[", "G2", "]"}], "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], 
      RowBox[{"Writhe", "[", "L", "]"}]], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"QuantumKnotInvariant", "[", 
         RowBox[{"G2", ",", 
          RowBox[{
           RowBox[{"Irrep", "[", "G2", "]"}], "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "]"}], "[", "L", "]"}], 
       "[", "q", "]"}], "/", 
      RowBox[{"G2AdjointInvariant", "[", "L", "]"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.662606393872333*^9, 3.662606402270843*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "q", "+", 
      SuperscriptBox["q", "2"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "4"], "+", 
       SuperscriptBox["q", "8"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "12"], "+", 
      SuperscriptBox["q", "14"], "+", 
      SuperscriptBox["q", "16"], "+", 
      SuperscriptBox["q", "18"], "+", 
      SuperscriptBox["q", "28"], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "30"]}], "+", 
      SuperscriptBox["q", "32"], "+", 
      SuperscriptBox["q", "42"], "+", 
      SuperscriptBox["q", "44"], "+", 
      SuperscriptBox["q", "46"], "+", 
      SuperscriptBox["q", "48"], "+", 
      SuperscriptBox["q", "60"]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    SuperscriptBox["q", "2"], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["q", "4"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["q", "6"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["q", "8"]}], "+", 
    RowBox[{"7", " ", 
     SuperscriptBox["q", "10"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["q", "12"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["q", "14"]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["q", "16"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["q", "18"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["q", "20"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["q", "22"]}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox["q", "24"]}], "+", 
    RowBox[{"11", " ", 
     SuperscriptBox["q", "26"]}], "+", 
    RowBox[{"7", " ", 
     SuperscriptBox["q", "28"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["q", "30"]}], "+", 
    RowBox[{"7", " ", 
     SuperscriptBox["q", "32"]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["q", "34"]}], "+", 
    RowBox[{"7", " ", 
     SuperscriptBox["q", "36"]}], "+", 
    RowBox[{"12", " ", 
     SuperscriptBox["q", "38"]}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox["q", "40"]}], "+", 
    RowBox[{"12", " ", 
     SuperscriptBox["q", "42"]}], "+", 
    RowBox[{"7", " ", 
     SuperscriptBox["q", "44"]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["q", "46"]}], "+", 
    RowBox[{"7", " ", 
     SuperscriptBox["q", "48"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["q", "50"]}], "+", 
    RowBox[{"7", " ", 
     SuperscriptBox["q", "52"]}], "+", 
    RowBox[{"11", " ", 
     SuperscriptBox["q", "54"]}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox["q", "56"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["q", "58"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["q", "60"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["q", "62"]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["q", "64"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["q", "66"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["q", "68"]}], "+", 
    RowBox[{"7", " ", 
     SuperscriptBox["q", "70"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["q", "72"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["q", "74"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["q", "76"]}], "+", 
    SuperscriptBox["q", "78"], "+", 
    SuperscriptBox["q", "80"]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.662606404933123*^9, 3.662606448384967*^9, {3.6626064913173943`*^9, 
   3.66260654456004*^9}, {3.6626068063961773`*^9, 3.662606824802362*^9}, {
   3.662612735985241*^9, 3.662612757287904*^9}, {3.662612994007031*^9, 
   3.6626130143415813`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stuff", "Subsection",
 CellChangeTimes->{{3.662613466184791*^9, 3.662613468776587*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"P", ",", "Orderless"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"Q", ",", "Orderless"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"Y", ",", "Orderless"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "/:", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], 
    RowBox[{"P", "[", 
     RowBox[{"b_", ",", "c_"}], "]"}]}], ":=", 
   RowBox[{"P", "[", 
    RowBox[{"a", ",", "c"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "/:", 
   SuperscriptBox[
    RowBox[{"P", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], "2"], ":=", 
   RowBox[{"P", "[", 
    RowBox[{"a", ",", "a"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "/:", 
   RowBox[{"P", "[", 
    RowBox[{"a_", ",", "a_"}], "]"}], ":=", 
   RowBox[{
    SuperscriptBox["q", "10"], "+", 
    SuperscriptBox["q", "8"], "+", 
    SuperscriptBox["q", "2"], "+", "1", "+", 
    SuperscriptBox["q", 
     RowBox[{"-", "2"}]], "+", 
    SuperscriptBox["q", 
     RowBox[{"-", "8"}]], "+", 
    SuperscriptBox["q", 
     RowBox[{"-", "10"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "/:", 
   RowBox[{"Y", "[", 
    RowBox[{"a_", ",", "a_", ",", "b_"}], "]"}], ":=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "/:", 
   RowBox[{
    RowBox[{"Y", "[", 
     RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], 
    RowBox[{"P", "[", 
     RowBox[{"a_", ",", "d_"}], "]"}]}], ":=", 
   RowBox[{"Y", "[", 
    RowBox[{"d", ",", "b", ",", "c"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "/:", 
   RowBox[{
    RowBox[{"Y", "[", 
     RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], 
    RowBox[{"Y", "[", 
     RowBox[{"b_", ",", "a_", ",", "d_"}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["q", "6"], "+", 
       SuperscriptBox["q", "4"], "+", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "2"}]], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "4"}]], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "6"}]]}], ")"}]}], " ", 
    RowBox[{"P", "[", 
     RowBox[{"c", ",", "d"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "/:", 
   SuperscriptBox[
    RowBox[{"Y", "[", 
     RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], "2"], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["q", "6"], "+", 
       SuperscriptBox["q", "4"], "+", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "2"}]], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "4"}]], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "6"}]]}], ")"}]}], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["q", "10"], "+", 
      SuperscriptBox["q", "8"], "+", 
      SuperscriptBox["q", "2"], "+", "1", "+", 
      SuperscriptBox["q", 
       RowBox[{"-", "2"}]], "+", 
      SuperscriptBox["q", 
       RowBox[{"-", "8"}]], "+", 
      SuperscriptBox["q", 
       RowBox[{"-", "10"}]]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Y", "/:", 
   RowBox[{
    RowBox[{"Y", "[", 
     RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], 
    RowBox[{"Y", "[", 
     RowBox[{"d_", ",", "b_", ",", "e_"}], "]"}], 
    RowBox[{"Y", "[", 
     RowBox[{"f_", ",", "c_", ",", "e_"}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["q", "4"], "+", "1", "+", 
      SuperscriptBox["q", 
       RowBox[{"-", "4"}]]}], ")"}], " ", 
    RowBox[{"Y", "[", 
     RowBox[{"a", ",", "d", ",", "f"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Y", "/:", 
   RowBox[{
    RowBox[{"Y", "[", 
     RowBox[{"a1_", ",", "b1_", ",", "b2_"}], "]"}], 
    RowBox[{"Y", "[", 
     RowBox[{"a2_", ",", "b2_", ",", "b3_"}], "]"}], 
    RowBox[{"Y", "[", 
     RowBox[{"a3_", ",", "b3_", ",", "b4_"}], "]"}], 
    RowBox[{"Y", "[", 
     RowBox[{"a4_", ",", "b4_", ",", "b1_"}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["q", "2"], "+", "1", "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "2"}]]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"P", "[", 
         RowBox[{"a1", ",", "a2"}], "]"}], 
        RowBox[{"P", "[", 
         RowBox[{"a3", ",", "a4"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"P", "[", 
         RowBox[{"a2", ",", "a3"}], "]"}], 
        RowBox[{"P", "[", 
         RowBox[{"a4", ",", "a1"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "2"}]]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Y", "[", 
         RowBox[{"a1", ",", "a2", ",", "b1"}], "]"}], 
        RowBox[{"Y", "[", 
         RowBox[{"a3", ",", "a4", ",", "b1"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Y", "[", 
         RowBox[{"a2", ",", "a3", ",", "b1"}], "]"}], 
        RowBox[{"Y", "[", 
         RowBox[{"a4", ",", "a1", ",", "b1"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6626134747994623`*^9, 3.662613475577442*^9}, {
   3.662617401991769*^9, 3.662617448132226*^9}, 3.662617608012825*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Y", "/:", 
   RowBox[{
    RowBox[{"Y", "[", 
     RowBox[{"a1_", ",", "b1_", ",", "b2_"}], "]"}], 
    RowBox[{"Y", "[", 
     RowBox[{"a2_", ",", "b2_", ",", "b3_"}], "]"}], 
    RowBox[{"Y", "[", 
     RowBox[{"a3_", ",", "b3_", ",", "b4_"}], "]"}], 
    RowBox[{"Y", "[", 
     RowBox[{"a4_", ",", "b4_", ",", "b5_"}], "]"}], 
    RowBox[{"Y", "[", 
     RowBox[{"a5_", ",", "b5_", ",", "b1_"}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a1", ",", "a5", ",", "b2"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a2", ",", "b2", ",", "b3"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a3", ",", "b3", ",", "a4"}], "]"}]}], "\[IndentingNewLine]", 
      "+", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a1", ",", "b1", ",", "b2"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a2", ",", "b2", ",", "a3"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a5", ",", "a4", ",", "b1"}], "]"}]}], "\[IndentingNewLine]", 
      "+", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a1", ",", "b1", ",", "a2"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a3", ",", "b4", ",", "b5"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a5", ",", "b5", ",", "b1"}], "]"}]}], "\[IndentingNewLine]", 
      "+", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a3", ",", "a2", ",", "b4"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a4", ",", "b4", ",", "b5"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a5", ",", "b5", ",", "a1"}], "]"}]}], "\[IndentingNewLine]", 
      "+", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a2", ",", "a1", ",", "b3"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a3", ",", "b3", ",", "b4"}], "]"}], 
       RowBox[{"Y", "[", 
        RowBox[{"a4", ",", "b4", ",", "a5"}], "]"}]}]}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a1", ",", "a2", ",", "a3"}], "]"}], 
       RowBox[{"P", "[", 
        RowBox[{"a4", ",", "a5"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a2", ",", "a3", ",", "a4"}], "]"}], 
       RowBox[{"P", "[", 
        RowBox[{"a5", ",", "a1"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a3", ",", "a4", ",", "a5"}], "]"}], 
       RowBox[{"P", "[", 
        RowBox[{"a1", ",", "a2"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a4", ",", "a5", ",", "a1"}], "]"}], 
       RowBox[{"P", "[", 
        RowBox[{"a2", ",", "a3"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Y", "[", 
        RowBox[{"a5", ",", "a1", ",", "a2"}], "]"}], 
       RowBox[{"P", "[", 
        RowBox[{"a3", ",", "a4"}], "]"}]}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6626134747994623`*^9, 3.662613475577442*^9}, {
  3.662617401991769*^9, 3.662617448132226*^9}, {3.662617608012825*^9, 
  3.662617614374383*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Q", "/:", 
   RowBox[{
    RowBox[{"Q", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], 
    RowBox[{"Q", "[", 
     RowBox[{"b_", ",", "c_"}], "]"}]}], ":=", 
   RowBox[{"Q", "[", 
    RowBox[{"a", ",", "c"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", "/:", 
   SuperscriptBox[
    RowBox[{"Q", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], "2"], ":=", 
   RowBox[{"Q", "[", 
    RowBox[{"a", ",", "a"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", "/:", 
   RowBox[{"Q", "[", 
    RowBox[{"a_", ",", "a_"}], "]"}], ":=", 
   RowBox[{
    SuperscriptBox["q", "18"], "+", 
    SuperscriptBox["q", "12"], "+", 
    SuperscriptBox["q", "10"], "+", 
    SuperscriptBox["q", "8"], "+", 
    SuperscriptBox["q", "6"], "+", 
    SuperscriptBox["q", "2"], "+", "2", "+", 
    SuperscriptBox["q", 
     RowBox[{"-", "2"}]], "+", 
    SuperscriptBox["q", 
     RowBox[{"-", "6"}]], "+", 
    SuperscriptBox["q", 
     RowBox[{"-", "8"}]], "+", 
    SuperscriptBox["q", 
     RowBox[{"-", "10"}]], "+", 
    SuperscriptBox["q", 
     RowBox[{"-", "12"}]], "+", 
    SuperscriptBox["q", 
     RowBox[{"-", "18"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", "/:", 
   RowBox[{
    RowBox[{"Q", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], 
    RowBox[{"F", "[", 
     RowBox[{"b_", ",", "c_", ",", "d_"}], "]"}]}], ":=", 
   RowBox[{"F", "[", 
    RowBox[{"a", ",", "c", ",", "d"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "/:", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], 
    RowBox[{"F", "[", 
     RowBox[{"c_", ",", "a_", ",", "d_"}], "]"}]}], ":=", 
   RowBox[{"F", "[", 
    RowBox[{"c", ",", "b", ",", "d"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "/:", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], 
    RowBox[{"F", "[", 
     RowBox[{"c_", ",", "d_", ",", "a_"}], "]"}]}], ":=", 
   RowBox[{"F", "[", 
    RowBox[{"c", ",", "d", ",", "b"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6626134747994623`*^9, 3.662613475577442*^9}, {
   3.662617401991769*^9, 3.662617448132226*^9}, {3.662617608012825*^9, 
   3.662617611342906*^9}, 3.662619225202697*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "/:", 
   RowBox[{
    RowBox[{"F", "[", 
     RowBox[{"e_", ",", "d_", ",", "a_"}], "]"}], 
    RowBox[{"F", "[", 
     RowBox[{"e_", ",", "b_", ",", "c_"}], "]"}]}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"P", "[", 
       RowBox[{"a", ",", "b"}], "]"}], 
      RowBox[{"P", "[", 
       RowBox[{"c", ",", "d"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"Y", "[", 
       RowBox[{"a", ",", "b", ",", "e"}], "]"}], 
      RowBox[{"Y", "[", 
       RowBox[{"e", ",", "c", ",", "d"}], "]"}]}], "-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["q", "4"], "-", "1", "+", 
        SuperscriptBox["q", 
         RowBox[{"-", "4"}]]}]], 
      RowBox[{"P", "[", 
       RowBox[{"a", ",", "d"}], "]"}], 
      RowBox[{"P", "[", 
       RowBox[{"b", ",", "c"}], "]"}]}], "-", 
     RowBox[{"(*", "!!", "*)"}], 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["q", "2"], "+", "1", "+", 
        SuperscriptBox["q", 
         RowBox[{"-", "2"}]]}]], 
      RowBox[{"Y", "[", 
       RowBox[{"a", ",", "e", ",", "d"}], "]"}], 
      RowBox[{"Y", "[", 
       RowBox[{"c", ",", "e", ",", "b"}], "]"}]}]}], ")"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.6626134747994623`*^9, 3.662613475577442*^9}, {
   3.662617401991769*^9, 3.662617448132226*^9}, {3.662617608012825*^9, 
   3.662617611342906*^9}, 3.662619225202697*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["q", "10"], "+", 
   SuperscriptBox["q", "8"], "+", 
   SuperscriptBox["q", "2"], "+", "1", "+", 
   SuperscriptBox["q", 
    RowBox[{"-", "2"}]], "+", 
   SuperscriptBox["q", 
    RowBox[{"-", "8"}]], "+", 
   SuperscriptBox["q", 
    RowBox[{"-", "10"}]], "-", 
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["q", "4"], "-", "1", "+", 
     SuperscriptBox["q", "4"]}]], "-", 
   FractionBox[
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["q", "6"], "+", 
       SuperscriptBox["q", "4"], "+", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "2"}]], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "4"}]], "+", 
       SuperscriptBox["q", 
        RowBox[{"-", "6"}]]}], ")"}]}], 
    RowBox[{
     SuperscriptBox["q", "2"], "+", "1", "+", 
     SuperscriptBox["q", 
      RowBox[{"-", "2"}]]}]]}], "//", "Factor"}]], "Input",
 CellChangeTimes->{{3.662612838108759*^9, 3.662612892245698*^9}, {
  3.662619163907113*^9, 3.662619168843635*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["q", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["q", "4"]}], "-", 
     SuperscriptBox["q", "6"], "+", 
     SuperscriptBox["q", "12"], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["q", "16"]}], "-", 
     SuperscriptBox["q", "18"], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["q", "22"]}]}], ")"}]}], 
  RowBox[{
   SuperscriptBox["q", "10"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["q", "4"]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.662612875271923*^9, 3.662612892807827*^9}, {
  3.6626191479602003`*^9, 3.6626191693067636`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"F", "[", 
     RowBox[{"1", ",", "2", ",", "3"}], "]"}], 
    RowBox[{"F", "[", 
     RowBox[{"1", ",", "3", ",", "4"}], "]"}]}], ",", "_P", ",", "Factor"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.66261348512973*^9, 3.662613511156639*^9}, {
  3.6626191410521393`*^9, 3.662619141635744*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "2"]}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["q", "8"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "q", "+", 
     SuperscriptBox["q", "3"], "-", 
     SuperscriptBox["q", "4"], "+", 
     SuperscriptBox["q", "5"], "-", 
     SuperscriptBox["q", "7"], "+", 
     SuperscriptBox["q", "8"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "q", "-", 
     SuperscriptBox["q", "3"], "-", 
     SuperscriptBox["q", "4"], "-", 
     SuperscriptBox["q", "5"], "+", 
     SuperscriptBox["q", "7"], "+", 
     SuperscriptBox["q", "8"]}], ")"}], " ", 
   RowBox[{"P", "[", 
    RowBox[{"2", ",", "4"}], "]"}]}], 
  RowBox[{
   SuperscriptBox["q", "10"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox["q", "4"], "+", 
     SuperscriptBox["q", "8"]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.6626135035326443`*^9, 3.66261351156748*^9}, 
   3.6626176294604797`*^9, 3.662619142018343*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"P", "[", 
         RowBox[{"a", ",", "b"}], "]"}], 
        RowBox[{"P", "[", 
         RowBox[{"c", ",", "d"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Y", "[", 
         RowBox[{"a", ",", "b", ",", "e"}], "]"}], 
        RowBox[{"Y", "[", 
         RowBox[{"e", ",", "c", ",", "d"}], "]"}]}], "-", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          SuperscriptBox["q", "4"], "-", "1", "+", 
          SuperscriptBox["q", 
           RowBox[{"-", "4"}]]}]], 
        RowBox[{"P", "[", 
         RowBox[{"a", ",", "d"}], "]"}], 
        RowBox[{"P", "[", 
         RowBox[{"b", ",", "c"}], "]"}]}], "-", 
       RowBox[{"(*", "!!", "*)"}], 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          SuperscriptBox["q", "2"], "+", "1", "+", 
          SuperscriptBox["q", 
           RowBox[{"-", "2"}]]}]], 
        RowBox[{"Y", "[", 
         RowBox[{"a", ",", "e", ",", "d"}], "]"}], 
        RowBox[{"Y", "[", 
         RowBox[{"c", ",", "e", ",", "b"}], "]"}]}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"P", "[", 
           RowBox[{"a", ",", "b"}], "]"}], 
          RowBox[{"P", "[", 
           RowBox[{"c", ",", "d"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"a", ",", "b", ",", "e"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"e", ",", "c", ",", "d"}], "]"}]}], "-", 
         RowBox[{
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["q", "4"], "-", "1", "+", 
            SuperscriptBox["q", 
             RowBox[{"-", "4"}]]}]], 
          RowBox[{"P", "[", 
           RowBox[{"a", ",", "d"}], "]"}], 
          RowBox[{"P", "[", 
           RowBox[{"b", ",", "c"}], "]"}]}], "-", 
         RowBox[{"(*", "!!", "*)"}], 
         RowBox[{
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["q", "2"], "+", "1", "+", 
            SuperscriptBox["q", 
             RowBox[{"-", "2"}]]}]], 
          RowBox[{"Y", "[", 
           RowBox[{"a", ",", "e", ",", "d"}], "]"}], 
          RowBox[{"Y", "[", 
           RowBox[{"c", ",", "e", ",", "b"}], "]"}]}]}], ")"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"c", "\[Rule]", "c2"}], ",", 
         RowBox[{"d", "\[Rule]", "d2"}], ",", 
         RowBox[{"a", "\[Rule]", "d"}], ",", 
         RowBox[{"b", "\[Rule]", "c"}]}], "}"}]}], ")"}]}], "//", "Expand"}], 
   ",", 
   RowBox[{"_P", "|", "_Y"}], ",", "Together"}], "]"}]], "Input",
 CellChangeTimes->{{3.6626173043807297`*^9, 3.662617369941145*^9}, {
  3.662619052851882*^9, 3.662619063840869*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "4"]}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["q", "8"]}], "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["q", "12"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["q", "16"]}], "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["q", "20"]}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["q", "24"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "28"]}], "+", 
      SuperscriptBox["q", "32"]}], ")"}], " ", 
    RowBox[{"P", "[", 
     RowBox[{"a", ",", "d2"}], "]"}], " ", 
    RowBox[{"P", "[", 
     RowBox[{"b", ",", "c2"}], "]"}]}], 
   RowBox[{
    SuperscriptBox["q", "8"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "4"], "+", 
       SuperscriptBox["q", "8"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "2"], "-", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "6"], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "8"]}], "+", 
      SuperscriptBox["q", "14"], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "20"]}], "+", 
      SuperscriptBox["q", "22"], "-", 
      SuperscriptBox["q", "24"], "+", 
      SuperscriptBox["q", "26"], "+", 
      SuperscriptBox["q", "28"]}], ")"}], " ", 
    RowBox[{"P", "[", 
     RowBox[{"a", ",", "b"}], "]"}], " ", 
    RowBox[{"P", "[", 
     RowBox[{"c2", ",", "d2"}], "]"}]}], 
   RowBox[{
    SuperscriptBox["q", "10"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "8"]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["q", "6"], " ", 
    RowBox[{"Y", "[", 
     RowBox[{"a", ",", "d2", ",", "e"}], "]"}], " ", 
    RowBox[{"Y", "[", 
     RowBox[{"b", ",", "c2", ",", "e"}], "]"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "8"]}], ")"}]}]], "+", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["q", "16"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["q", "4"], "+", 
       SuperscriptBox["q", "8"]}], ")"}]}]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "2"]}], "-", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "6"], "-", 
      SuperscriptBox["q", "8"], "-", 
      RowBox[{"5", " ", 
       SuperscriptBox["q", "10"]}], "-", 
      RowBox[{"7", " ", 
       SuperscriptBox["q", "12"]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["q", "16"]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["q", "18"]}], "-", 
      RowBox[{"10", " ", 
       SuperscriptBox["q", "20"]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["q", "22"]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["q", "24"]}], "-", 
      RowBox[{"7", " ", 
       SuperscriptBox["q", "28"]}], "-", 
      RowBox[{"5", " ", 
       SuperscriptBox["q", "30"]}], "-", 
      SuperscriptBox["q", "32"], "+", 
      SuperscriptBox["q", "34"], "-", 
      SuperscriptBox["q", "36"], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["q", "38"]}], "-", 
      SuperscriptBox["q", "40"]}], ")"}], " ", 
    RowBox[{"Y", "[", 
     RowBox[{"a", ",", "b", ",", "e"}], "]"}], " ", 
    RowBox[{"Y", "[", 
     RowBox[{"c2", ",", "d2", ",", "e"}], "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.6626173523049498`*^9, 3.662617386694295*^9}, 
   3.662617453691246*^9, 3.662617635692481*^9, {3.662619055832182*^9, 
   3.6626190650029507`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Checking the relations", "Subsection",
 CellChangeTimes->{{3.662621064590974*^9, 3.6626210706656857`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]", "=", "FundamentalBasis"}], ";"}]], "Input",
 CellChangeTimes->{{3.6626211716299334`*^9, 3.662621172777326*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DualityPairing", "[", 
   RowBox[{"\[CapitalGamma]_", ",", "V_", ",", "\[Beta]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "decomposition", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"decomposition", "=", 
      RowBox[{"InverseDecompositionMap", "[", 
       RowBox[{"\[CapitalGamma]", ",", 
        RowBox[{
         RowBox[{"DualRepresentation", "[", "V", "]"}], "\[CircleTimes]", 
         "V"}], ",", "\[Beta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"qDimension", "[", "\[CapitalGamma]", "]"}], "[", "V", "]"}], 
      RowBox[{
       RowBox[{"DirectSumProjectionMap", "[", 
        RowBox[{"\[CapitalGamma]", ",", 
         RowBox[{"Codomain", "[", "decomposition", "]"}], ",", "1", ",", 
         "\[Beta]"}], "]"}], ".", "decomposition"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DualityCopairing", "[", 
   RowBox[{"\[CapitalGamma]_", ",", "V_", ",", "\[Beta]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "decomposition", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"decomposition", "=", 
      RowBox[{"DecompositionMap", "[", 
       RowBox[{"\[CapitalGamma]", ",", 
        RowBox[{"V", "\[CircleTimes]", 
         RowBox[{"DualRepresentation", "[", "V", "]"}]}], ",", "\[Beta]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"decomposition", ".", 
      RowBox[{"DirectSumInclusionMap", "[", 
       RowBox[{"\[CapitalGamma]", ",", 
        RowBox[{"Domain", "[", "decomposition", "]"}], ",", "1", ",", 
        "\[Beta]"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.6626212180007563`*^9, 3.6626213454346733`*^9}, {
  3.662621381038001*^9, 3.662621412416019*^9}, {3.66262144260785*^9, 
  3.6626214545260983`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DualityPairing", "[", 
   RowBox[{"G2", ",", 
    RowBox[{
     RowBox[{"Irrep", "[", "G2", "]"}], "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}], ".", 
  RowBox[{"DualityCopairing", "[", 
   RowBox[{"G2", ",", 
    RowBox[{
     RowBox[{"Irrep", "[", "G2", "]"}], "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "\[Beta]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.662621416043219*^9, 3.6626214334769506`*^9}}],

Cell[BoxData[
 RowBox[{"RepresentationTensor", "[", 
  RowBox[{
   SubscriptBox["G", "2"], ",", 
   RowBox[{
    RowBox[{"Irrep", "[", 
     SubscriptBox["G", "2"], "]"}], "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "FundamentalBasis", ",", 
   RowBox[{
    RowBox[{"Irrep", "[", 
     SubscriptBox["G", "2"], "]"}], "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "FundamentalBasis", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"Matrix", "[", 
       RowBox[{"1", ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          FractionBox[
           RowBox[{"1", "+", 
            SuperscriptBox["q", "6"], "+", 
            SuperscriptBox["q", "8"], "+", 
            SuperscriptBox["q", "10"], "+", 
            SuperscriptBox["q", "12"], "+", 
            SuperscriptBox["q", "16"], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["q", "18"]}], "+", 
            SuperscriptBox["q", "20"], "+", 
            SuperscriptBox["q", "24"], "+", 
            SuperscriptBox["q", "26"], "+", 
            SuperscriptBox["q", "28"], "+", 
            SuperscriptBox["q", "30"], "+", 
            SuperscriptBox["q", "36"]}], 
           SuperscriptBox["q", "18"]], "}"}], "}"}]}], "]"}]}], "}"}], 
    "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.6626214337735567`*^9, 3.6626214565227423`*^9}, 
   3.6626791763491287`*^9, 3.662878744837699*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fork", "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "decomposition", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"decomposition", "=", 
       RowBox[{"DecompositionMap", "[", 
        RowBox[{"G2", ",", 
         SuperscriptBox[
          RowBox[{
           RowBox[{"Irrep", "[", "G2", "]"}], "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], "]"}], 
          RowBox[{"\[CircleTimes]", "2"}]], ",", "\[Beta]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"decomposition", ".", 
       RowBox[{"DirectSumInclusionMap", "[", 
        RowBox[{"G2", ",", 
         RowBox[{"Domain", "[", "decomposition", "]"}], ",", "2", ",", 
         "\[Beta]"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.662679449363896*^9, 3.662679469820671*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fuse", "=", 
   RowBox[{"PullDownTopLeftCorner", "[", "Fork", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6626794599055777`*^9, 3.6626794720968513`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Fuse", ".", "Fork"}], "-", 
  RowBox[{
   RowBox[{"(", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SuperscriptBox["q", "2"], "-", 
      SuperscriptBox["q", "4"], "-", 
      SuperscriptBox["q", "8"], "-", 
      SuperscriptBox["q", "10"], "-", 
      SuperscriptBox["q", "12"]}], 
     SuperscriptBox["q", "6"]], ")"}], 
   RowBox[{"IdentityMap", "[", 
    RowBox[{"G2", ",", 
     RowBox[{
      RowBox[{"Irrep", "[", "G2", "]"}], "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", "\[Beta]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.662679475022311*^9, 3.6626795113396673`*^9}}],

Cell[BoxData[
 RowBox[{"RepresentationTensor", "[", 
  RowBox[{
   SubscriptBox["G", "2"], ",", 
   RowBox[{
    RowBox[{"Irrep", "[", 
     SubscriptBox["G", "2"], "]"}], "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", "FundamentalBasis", ",", 
   RowBox[{
    RowBox[{"Irrep", "[", 
     SubscriptBox["G", "2"], "]"}], "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", "FundamentalBasis", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{"{", "0", "}"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{"{", "0", "}"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{"{", "0", "}"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{"{", "0", "}"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{"{", "0", "}"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{"{", "0", "}"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "1", ",", 
         RowBox[{"{", 
          RowBox[{"{", "0", "}"}], "}"}]}], "]"}]}], "}"}]}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.6626794808602247`*^9, 3.6626795124214993`*^9, 
  3.662878750692974*^9, 3.6628799528239*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"IdentityMap", "[", 
       RowBox[{"G2", ",", 
        RowBox[{
         RowBox[{"Irrep", "[", "G2", "]"}], "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}], 
      "\[CircleTimes]", "Fuse"}], ")"}], ".", 
    RowBox[{"InverseAssociator", "[", 
     RowBox[{"G2", ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "G2", "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "G2", "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "G2", "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}], ".", 
    RowBox[{"(", 
     RowBox[{"Fork", "\[CircleTimes]", 
      RowBox[{"IdentityMap", "[", 
       RowBox[{"G2", ",", 
        RowBox[{
         RowBox[{"Irrep", "[", "G2", "]"}], "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}]}], 
     ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662679525717422*^9, 3.662679607980794*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"capital", " ", "iota"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[CapitalIota]", "=", 
    RowBox[{"Fork", ".", "Fuse"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6626796259964943`*^9, 3.662679655905355*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CupCap", "=", 
   RowBox[{
    RowBox[{"DualityCopairing", "[", 
     RowBox[{"G2", ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "G2", "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}], ".", 
    RowBox[{"DualityPairing", "[", 
     RowBox[{"G2", ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "G2", "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.662679710222677*^9, 3.66267971896066*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NullSpace", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"raw", "/@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"H", ".", "H"}], ",", 
      RowBox[{"IdentityMap", "[", 
       RowBox[{"G2", ",", 
        SuperscriptBox[
         RowBox[{
          RowBox[{"Irrep", "[", "G2", "]"}], "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], "]"}], 
         RowBox[{"\[CircleTimes]", "2"}]], ",", "\[Beta]"}], "]"}], ",", 
      "CupCap", ",", "\[CapitalIota]", ",", "H"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.662679611974381*^9, 3.662679612364959*^9}, {
  3.662679659129518*^9, 3.6626796894147673`*^9}, {3.6626797224485397`*^9, 
  3.662679732210375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     SuperscriptBox["q", "2"], 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "4"]}]], ",", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}]]}], ",", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"], "+", 
       SuperscriptBox["q", "4"]}], 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "4"]}]]}], ",", "1", ",", "1"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6626796132072077`*^9, 3.6626796603428507`*^9, {3.662679726005403*^9, 
   3.662679733010949*^9}, 3.6628787533794622`*^9, 3.66287955523326*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdjointCupCap", "=", 
   RowBox[{
    RowBox[{"DualityCopairing", "[", 
     RowBox[{"G2", ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "G2", "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}], ".", 
    RowBox[{"DualityPairing", "[", 
     RowBox[{"G2", ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "G2", "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6626793832841578`*^9, 3.662679393382145*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Domain", "[", 
  RowBox[{"DecompositionMap", "[", 
   RowBox[{"G2", ",", 
    SuperscriptBox[
     RowBox[{
      RowBox[{"Irrep", "[", "G2", "]"}], "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], "]"}], 
     RowBox[{"\[CircleTimes]", "2"}]], ",", "\[Beta]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.662621741079803*^9, 3.662621742257906*^9}}],

Cell[BoxData[
 RowBox[{"DirectSum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Irrep", "[", 
     SubscriptBox["G", "2"], "]"}], "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
   RowBox[{
    RowBox[{"Irrep", "[", 
     SubscriptBox["G", "2"], "]"}], "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", 
   RowBox[{
    RowBox[{"Irrep", "[", 
     SubscriptBox["G", "2"], "]"}], "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", 
   RowBox[{
    RowBox[{"Irrep", "[", 
     SubscriptBox["G", "2"], "]"}], "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "0"}], "}"}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.662621742532118*^9, 3.662679176572277*^9, 
  3.6628787548484993`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdjointFork", "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "decomposition", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"decomposition", "=", 
       RowBox[{"DecompositionMap", "[", 
        RowBox[{"G2", ",", 
         SuperscriptBox[
          RowBox[{
           RowBox[{"Irrep", "[", "G2", "]"}], "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], "]"}], 
          RowBox[{"\[CircleTimes]", "2"}]], ",", "\[Beta]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q", "2"], "+", "1", "+", 
          SuperscriptBox["q", 
           RowBox[{"-", "2"}]]}], ")"}], 
        RowBox[{"-", "1"}]], 
       RowBox[{"decomposition", ".", 
        RowBox[{"DirectSumInclusionMap", "[", 
         RowBox[{"G2", ",", 
          RowBox[{"Domain", "[", "decomposition", "]"}], ",", "3", ",", 
          "\[Beta]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.662621656091626*^9, 3.662621711587167*^9}, {
   3.662621769485024*^9, 3.6626217718770437`*^9}, 3.662878528264845*^9, {
   3.662878623546339*^9, 3.662878633659149*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PullDownTopLeftCorner", "[", 
   RowBox[{"F", ":", 
    RowBox[{"RepresentationTensor", "[", 
     RowBox[{"\[CapitalGamma]_", ",", 
      RowBox[{"V_", "\[CircleTimes]", "W_"}], ",", "\[Beta]_", ",", "Z_", ",",
       "\[Beta]_", ",", "_"}], "]"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DirectSumProjectionMap", "[", 
    RowBox[{"\[CapitalGamma]", ",", 
     RowBox[{"DirectSum", "[", "W", "]"}], ",", "1", ",", "\[Beta]"}], "]"}], 
   ".", 
   RowBox[{"InverseDecompositionMap", "[", 
    RowBox[{"\[CapitalGamma]", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Irrep", "[", "\[CapitalGamma]", "]"}], "[", 
       RowBox[{"ZeroVector", "[", 
        RowBox[{"Rank", "[", "\[CapitalGamma]", "]"}], "]"}], "]"}], 
      "\[CircleTimes]", "W"}], ",", "\[Beta]"}], "]"}], ".", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"DualityPairing", "[", 
      RowBox[{"\[CapitalGamma]", ",", "V", ",", "\[Beta]"}], "]"}], 
     "\[CircleTimes]", 
     RowBox[{"IdentityMap", "[", 
      RowBox[{"\[CapitalGamma]", ",", "W", ",", "\[Beta]"}], "]"}]}], ")"}], 
   ".", 
   RowBox[{"Associator", "[", 
    RowBox[{"\[CapitalGamma]", ",", 
     RowBox[{"DualRepresentation", "[", "V", "]"}], ",", "V", ",", "W", ",", 
     "\[Beta]"}], "]"}], ".", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"IdentityMap", "[", 
      RowBox[{"\[CapitalGamma]", ",", 
       RowBox[{"DualRepresentation", "[", "V", "]"}], ",", "\[Beta]"}], "]"}],
      "\[CircleTimes]", "F"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.662622427294496*^9, 3.662622650570427*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PullUpBottomRightCorner", "[", 
   RowBox[{"F", ":", 
    RowBox[{"RepresentationTensor", "[", 
     RowBox[{"\[CapitalGamma]_", ",", "U_", ",", "\[Beta]_", ",", 
      RowBox[{"V_", "\[CircleTimes]", "W_"}], ",", "\[Beta]_", ",", "_"}], 
     "]"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"F", "\[CircleTimes]", 
     RowBox[{"IdentityMap", "[", 
      RowBox[{"\[CapitalGamma]", ",", 
       RowBox[{"DualRepresentation", "[", "W", "]"}], ",", "\[Beta]"}], 
      "]"}]}], ")"}], ".", 
   RowBox[{"Associator", "[", 
    RowBox[{"\[CapitalGamma]", ",", "V", ",", "W", ",", 
     RowBox[{"DualRepresentation", "[", "W", "]"}], ",", "\[Beta]"}], "]"}], 
   ".", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"IdentityMap", "[", 
      RowBox[{"\[CapitalGamma]", ",", "V", ",", "\[Beta]"}], "]"}], 
     "\[CircleTimes]", 
     RowBox[{"DualityCopairing", "[", 
      RowBox[{"\[CapitalGamma]", ",", "W", ",", "\[Beta]"}], "]"}]}], ")"}], 
   ".", 
   RowBox[{"DecompositionMap", "[", 
    RowBox[{"\[CapitalGamma]", ",", 
     RowBox[{"V", "\[CircleTimes]", 
      RowBox[{
       RowBox[{"Irrep", "[", "\[CapitalGamma]", "]"}], "[", 
       RowBox[{"ZeroVector", "[", 
        RowBox[{"Rank", "[", "\[CapitalGamma]", "]"}], "]"}], "]"}]}], ",", 
     "\[Beta]"}], "]"}], ".", 
   RowBox[{"DirectSumInclusionMap", "[", 
    RowBox[{"\[CapitalGamma]", ",", 
     RowBox[{"DirectSum", "[", "V", "]"}], ",", "1", ",", "\[Beta]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6626227529913273`*^9, 3.662622954522828*^9}, {
  3.6626230265957403`*^9, 3.662623027620735*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdjointRightFuse", "=", 
   RowBox[{"PullDownTopLeftCorner", "[", "AdjointFork", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.662622631580535*^9, 3.6626226817515917`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdjointRightFork", "=", 
   RowBox[{"PullUpBottomRightCorner", "[", "AdjointRightFuse", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.662623038163685*^9, 3.6626230546243067`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdjointLeftFork", "=", 
   RowBox[{"PullUpBottomRightCorner", "[", "AdjointFuse", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.662864383932659*^9, 3.662864419284192*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdjointFuse", "=", 
   RowBox[{"PullDownTopLeftCorner", "[", "AdjointRightFork", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.662623060901681*^9, 3.662623068458049*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"raw", "[", "F_RepresentationTensor", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{"F", "\[LeftDoubleBracket]", 
      RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"m_Matrix", "\[RuleDelayed]", 
      RowBox[{"Last", "[", "m", "]"}]}], ",", "\[Infinity]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.662679204319201*^9, 3.6626792354188347`*^9}, {
  3.6626792713083973`*^9, 3.662679273904871*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NullSpace", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"raw", "/@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AdjointFork", ".", "AdjointFuse"}], ",", 
      RowBox[{"IdentityMap", "[", 
       RowBox[{"G2", ",", 
        SuperscriptBox[
         RowBox[{
          RowBox[{"Irrep", "[", "G2", "]"}], "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], "]"}], 
         RowBox[{"\[CircleTimes]", "2"}]], ",", "\[Beta]"}], "]"}], ",", 
      "CupCap", ",", "\[CapitalIota]", ",", "H"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.662679611974381*^9, 3.662679612364959*^9}, {
  3.662679659129518*^9, 3.6626796894147673`*^9}, {3.6626797224485397`*^9, 
  3.662679732210375*^9}, {3.662679898163312*^9, 3.6626799035496397`*^9}, {
  3.662679960932232*^9, 3.662679962575095*^9}, {3.662680030129583*^9, 
  3.662680038765382*^9}, {3.6626800831676607`*^9, 3.66268009000278*^9}, {
  3.6628786506134367`*^9, 3.662878670805767*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "q"]}], "-", "q"}], ",", 
    RowBox[{"-", "1"}], ",", 
    FractionBox[
     SuperscriptBox["q", "4"], 
     RowBox[{"1", "-", 
      SuperscriptBox["q", "4"], "+", 
      SuperscriptBox["q", "8"]}]], ",", 
    FractionBox[
     SuperscriptBox["q", "2"], 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "2"], "+", 
      SuperscriptBox["q", "4"]}]], ",", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.662679905119721*^9, 3.6626799676158667`*^9, {3.662680032334736*^9, 
   3.662680039679544*^9}, 3.662680091317492*^9, 3.662878765582541*^9, 
   3.6628795118743353`*^9, 3.662879969198114*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   RowBox[{"-", "%"}], "/", 
   RowBox[{"%", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662679943520577*^9, 3.662679972092003*^9}, {
  3.6628795285080338`*^9, 3.6628795306297417`*^9}, {3.6628799734199953`*^9, 
  3.662879975062606*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", 
     FractionBox["q", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}]]}], ",", 
    FractionBox[
     SuperscriptBox["q", "5"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["q", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["q", "4"], "+", 
        SuperscriptBox["q", "8"]}], ")"}]}]], ",", 
    FractionBox[
     SuperscriptBox["q", "3"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["q", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "q", "+", 
        SuperscriptBox["q", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "q", "+", 
        SuperscriptBox["q", "2"]}], ")"}]}]], ",", 
    FractionBox["q", 
     RowBox[{"1", "+", 
      SuperscriptBox["q", "2"]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.662679953301066*^9, 3.662679972414727*^9}, {
   3.6626800335576267`*^9, 3.662680040509512*^9}, 3.662680092930632*^9, 
   3.662878766170189*^9, {3.662879514257063*^9, 3.6628795312389717`*^9}, 
   3.6628799753885317`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "This", " ", "shows", " ", "that", " ", "the", " ", "last", " ", "term", 
   " ", "in", " ", "equation", " ", "4", " ", "of", " ", 
   RowBox[{"Greg", "'"}], "s", " ", "rank", " ", "2", " ", "paper", " ", 
   "should", " ", "have", " ", "a", " ", "minus", " ", 
   RowBox[{"sign", ".", " ", "The"}], " ", "formulas", " ", "for", " ", "the",
    " ", "projections", " ", "from", " ", "the", " ", "trivalent", " ", 
   "paper", " ", "also", " ", "say", " ", 
   RowBox[{"this", "!"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6626802469301987`*^9, 3.662680283495655*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"HH1", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"IdentityMap", "[", 
       RowBox[{"G2", ",", 
        RowBox[{
         RowBox[{"Irrep", "[", "G2", "]"}], "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}], 
      "\[CircleTimes]", "AdjointRightFuse"}], ")"}], ".", 
    RowBox[{"InverseAssociator", "[", 
     RowBox[{"G2", ",", 
      RowBox[{
       RowBox[{"Irrep", "[", 
        SubscriptBox["G", "2"], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Irrep", "[", 
        SubscriptBox["G", "2"], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Irrep", "[", 
        SubscriptBox["G", "2"], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}], ".", 
    RowBox[{"(", 
     RowBox[{"AdjointFork", "\[CircleTimes]", 
      RowBox[{"IdentityMap", "[", 
       RowBox[{"G2", ",", 
        RowBox[{
         RowBox[{"Irrep", "[", "G2", "]"}], "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Domain", "[", "HH1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Codomain", "[", "HH1", "]"}]}], "Input",
 CellChangeTimes->{{3.6626220890371523`*^9, 3.662622200452793*^9}, {
  3.6626230752704153`*^9, 3.662623077915119*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Irrep", "[", 
    SubscriptBox["G", "2"], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[CircleTimes]", 
  RowBox[{
   RowBox[{"Irrep", "[", 
    SubscriptBox["G", "2"], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.6626221043006887`*^9, 3.662622113021978*^9}, {
   3.662622163510434*^9, 3.6626222013581867`*^9}, 3.662623091741691*^9, 
   3.6626791836492443`*^9, 3.662878768279934*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Irrep", "[", 
    SubscriptBox["G", "2"], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], "]"}], "\[CircleTimes]", 
  RowBox[{
   RowBox[{"Irrep", "[", 
    SubscriptBox["G", "2"], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.6626221043006887`*^9, 3.662622113021978*^9}, {
   3.662622163510434*^9, 3.6626222013581867`*^9}, 3.662623091741691*^9, 
   3.6626791836492443`*^9, 3.6628787682960567`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"HH2", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"AdjointFuse", "\[CircleTimes]", 
      RowBox[{"IdentityMap", "[", 
       RowBox[{"G2", ",", 
        RowBox[{
         RowBox[{"Irrep", "[", "G2", "]"}], "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}]}], 
     ")"}], ".", 
    RowBox[{"Associator", "[", 
     RowBox[{"G2", ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "G2", "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "G2", "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "G2", "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}], ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"IdentityMap", "[", 
       RowBox[{"G2", ",", 
        RowBox[{
         RowBox[{"Irrep", "[", "G2", "]"}], "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}], 
      "\[CircleTimes]", "AdjointRightFork"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Domain", "[", "HH2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Codomain", "[", "HH2", "]"}]}], "Input",
 CellChangeTimes->{{3.662623093033861*^9, 3.6626232054428387`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Irrep", "[", 
    SubscriptBox["G", "2"], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], "]"}], "\[CircleTimes]", 
  RowBox[{
   RowBox[{"Irrep", "[", 
    SubscriptBox["G", "2"], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.662623186121623*^9, 3.662623206729652*^9}, 
   3.662679185236189*^9, 3.662878770867988*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Irrep", "[", 
    SubscriptBox["G", "2"], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[CircleTimes]", 
  RowBox[{
   RowBox[{"Irrep", "[", 
    SubscriptBox["G", "2"], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.662623186121623*^9, 3.662623206729652*^9}, 
   3.662679185236189*^9, 3.662878770883505*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdjointSquare", "=", 
   RowBox[{"HH2", ".", "HH1"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662623209099128*^9, 3.662623221980351*^9}, 
   3.662878797355195*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"raw", "[", 
   RowBox[{"IdentityMap", "[", 
    RowBox[{"G2", ",", 
     SuperscriptBox[
      RowBox[{
       RowBox[{"Irrep", "[", "G2", "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "]"}], 
      RowBox[{"\[CircleTimes]", "2"}]], ",", "\[Beta]"}], "]"}], "]"}], "//", 
  "Length"}]], "Input",
 CellChangeTimes->{{3.662679283679421*^9, 3.662679309908293*^9}}],

Cell[BoxData["1468"], "Output",
 CellChangeTimes->{{3.662679303746335*^9, 3.6626793103331127`*^9}, 
   3.662878773850596*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"raw", "[", "AdjointSquare", "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.662679236400324*^9, 3.6626792400763597`*^9}, {
  3.662679313296678*^9, 3.6626793141091623`*^9}}],

Cell[BoxData["1468"], "Output",
 CellChangeTimes->{3.662679240852243*^9, 3.662679275229747*^9, 
  3.662679314418828*^9, 3.662878773950912*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NullSpace", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"raw", "/@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"BraidingMap", "[", 
       RowBox[{"G2", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Irrep", "[", "G2", "]"}], "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[CircleTimes]", 
         RowBox[{
          RowBox[{"Irrep", "[", "G2", "]"}], "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ",", "\[Beta]"}], "]"}], 
      ",", 
      RowBox[{"IdentityMap", "[", 
       RowBox[{"G2", ",", 
        SuperscriptBox[
         RowBox[{
          RowBox[{"Irrep", "[", "G2", "]"}], "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}], 
         RowBox[{"\[CircleTimes]", "2"}]], ",", "\[Beta]"}], "]"}], ",", 
      "AdjointCupCap", ",", "AdjointSquare"}], "}"}]}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.66267934632592*^9, 3.662679365706814*^9}, {
  3.662679858089838*^9, 3.662679873098937*^9}, {3.662680560167358*^9, 
  3.66268056574207*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.662680478339752*^9, 3.662680523698833*^9, {3.6626805620970917`*^9, 
   3.662680567894849*^9}, 3.662878869965178*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdjointBox1", "=", 
   RowBox[{"HH2", ".", "H", ".", "HH1"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6626810895416613`*^9, 3.662681108347999*^9}, 
   3.662686337467664*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"foo", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"IdentityMap", "[", 
       RowBox[{"G2", ",", 
        RowBox[{
         RowBox[{"Irrep", "[", "G2", "]"}], "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}], 
      "\[CircleTimes]", "H"}], ")"}], ".", 
    RowBox[{"InverseAssociator", "[", 
     RowBox[{"G2", ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "G2", "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "G2", "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "G2", "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}], ".", 
    RowBox[{"(", 
     RowBox[{"AdjointLeftFork", "\[CircleTimes]", 
      RowBox[{"IdentityMap", "[", 
       RowBox[{"G2", ",", 
        RowBox[{
         RowBox[{"Irrep", "[", "G2", "]"}], "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}]}], 
     ")"}], ".", "AdjointFork"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662864359807815*^9, 3.662864370141644*^9}, {
  3.662864427691946*^9, 3.662864527174416*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Codomain", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.6628644710877237`*^9, 3.662864472930086*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Irrep", "[", 
    SubscriptBox["G", "2"], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[CircleTimes]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Irrep", "[", 
      SubscriptBox["G", "2"], "]"}], "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "]"}], "\[CircleTimes]", 
    RowBox[{
     RowBox[{"Irrep", "[", 
      SubscriptBox["G", "2"], "]"}], "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.662864473315073*^9, 3.662864506291545*^9}, 
   3.6628788832074223`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"bar", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Associator", "[", 
       RowBox[{"G2", ",", 
        RowBox[{
         RowBox[{"Irrep", "[", 
          SubscriptBox["G", "2"], "]"}], "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Irrep", "[", 
          SubscriptBox["G", "2"], "]"}], "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Irrep", "[", 
          SubscriptBox["G", "2"], "]"}], "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}], ".",
       "foo"}], ")"}], "\[CircleTimes]", 
    RowBox[{"IdentityMap", "[", 
     RowBox[{"G2", ",", 
      RowBox[{
       RowBox[{"Irrep", "[", "G2", "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6628645304873857`*^9, 3.662864545601885*^9}, {
   3.662864593555787*^9, 3.662864603006154*^9}, 3.6628788200910788`*^9, {
   3.662879013323977*^9, 3.662879015182085*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"qux", "=", 
   RowBox[{
    RowBox[{"InverseAssociator", "[", 
     RowBox[{"G2", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Irrep", "[", 
         SubscriptBox["G", "2"], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[CircleTimes]", 
       RowBox[{
        RowBox[{"Irrep", "[", 
         SubscriptBox["G", "2"], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Irrep", "[", 
        SubscriptBox["G", "2"], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Irrep", "[", 
        SubscriptBox["G", "2"], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}], ".", 
    "bar"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662864605371358*^9, 3.662864670121311*^9}, {
  3.662864702211287*^9, 3.662864704496604*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Codomain", "[", "qux", "]"}]], "Input",
 CellChangeTimes->{{3.662864706004402*^9, 3.662864708004807*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Irrep", "[", 
      SubscriptBox["G", "2"], "]"}], "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[CircleTimes]", 
    RowBox[{
     RowBox[{"Irrep", "[", 
      SubscriptBox["G", "2"], "]"}], "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "]"}]}], ")"}], "\[CircleTimes]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Irrep", "[", 
      SubscriptBox["G", "2"], "]"}], "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "]"}], "\[CircleTimes]", 
    RowBox[{
     RowBox[{"Irrep", "[", 
      SubscriptBox["G", "2"], "]"}], "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.662864720026495*^9, 3.662878915989235*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"turkle", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"IdentityMap", "[", 
       RowBox[{"G2", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Irrep", "[", 
           SubscriptBox["G", "2"], "]"}], "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[CircleTimes]", 
         RowBox[{
          RowBox[{"Irrep", "[", 
           SubscriptBox["G", "2"], "]"}], "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], "]"}]}], ",", "\[Beta]"}], "]"}], 
      "\[CircleTimes]", "AdjointRightFuse"}], ")"}], ".", "qux"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.662864716761323*^9, 3.662864746365591*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Codomain", "[", "turkle", "]"}]], "Input",
 CellChangeTimes->{{3.662864748439734*^9, 3.662864751592319*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Irrep", "[", 
      SubscriptBox["G", "2"], "]"}], "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[CircleTimes]", 
    RowBox[{
     RowBox[{"Irrep", "[", 
      SubscriptBox["G", "2"], "]"}], "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "]"}]}], ")"}], "\[CircleTimes]", 
  RowBox[{
   RowBox[{"Irrep", "[", 
    SubscriptBox["G", "2"], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], "]"}]}]], "Output",
 CellChangeTimes->{3.662864752121399*^9, 3.662878923370399*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdjointBox2", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"IdentityMap", "[", 
       RowBox[{"G2", ",", 
        RowBox[{
         RowBox[{"Irrep", "[", 
          SubscriptBox["G", "2"], "]"}], "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}], 
      "\[CircleTimes]", "AdjointFuse"}], ")"}], ".", 
    RowBox[{"InverseAssociator", "[", 
     RowBox[{"G2", ",", 
      RowBox[{
       RowBox[{"Irrep", "[", 
        SubscriptBox["G", "2"], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Irrep", "[", 
        SubscriptBox["G", "2"], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Irrep", "[", 
        SubscriptBox["G", "2"], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", "\[Beta]"}], "]"}], ".", 
    "turkle"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662864755933494*^9, 3.662864831750539*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Domain", "[", "AdjointBox1", "]"}]], "Input",
 CellChangeTimes->{{3.662864833413109*^9, 3.662864838402095*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Irrep", "[", 
    SubscriptBox["G", "2"], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[CircleTimes]", 
  RowBox[{
   RowBox[{"Irrep", "[", 
    SubscriptBox["G", "2"], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], "]"}]}]], "Output",
 CellChangeTimes->{3.662864838841606*^9, 3.662878928870695*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Codomain", "[", "AdjointBox2", "]"}]], "Input",
 CellChangeTimes->{{3.662864839357401*^9, 3.662864842291319*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Irrep", "[", 
    SubscriptBox["G", "2"], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[CircleTimes]", 
  RowBox[{
   RowBox[{"Irrep", "[", 
    SubscriptBox["G", "2"], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], "]"}]}]], "Output",
 CellChangeTimes->{3.662864842583817*^9, 3.662878928927856*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"relation", "=", 
  RowBox[{
   RowBox[{"NullSpace", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"raw", "/@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"BraidingMap", "[", 
         RowBox[{"G2", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Irrep", "[", "G2", "]"}], "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[CircleTimes]", 
           RowBox[{
            RowBox[{"Irrep", "[", "G2", "]"}], "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ",", "\[Beta]"}], "]"}],
         ",", 
        RowBox[{"IdentityMap", "[", 
         RowBox[{"G2", ",", 
          SuperscriptBox[
           RowBox[{
            RowBox[{"Irrep", "[", "G2", "]"}], "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], "]"}], 
           RowBox[{"\[CircleTimes]", "2"}]], ",", "\[Beta]"}], "]"}], ",", 
        "AdjointCupCap", ",", "AdjointSquare", ",", "AdjointBox1", ",", 
        "AdjointBox2"}], "}"}]}], "]"}], "]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.66267934632592*^9, 3.662679365706814*^9}, {
  3.662679858089838*^9, 3.662679873098937*^9}, {3.662680560167358*^9, 
  3.66268056574207*^9}, {3.662681130407658*^9, 3.662681133798465*^9}, {
  3.662865549405217*^9, 3.662865555197074*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", 
      SuperscriptBox["q", "2"]}], 
     SuperscriptBox["q", "4"]]}], ",", 
   RowBox[{
    SuperscriptBox["q", "2"], "+", 
    SuperscriptBox["q", "4"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SuperscriptBox["q", "2"]}], 
     SuperscriptBox["q", "10"]]}], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}]}], 
    SuperscriptBox["q", "4"]], ",", 
   FractionBox["1", 
    SuperscriptBox["q", "6"]], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.66286485897915*^9, 3.6628655609731293`*^9, 
  3.662878936856574*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "relation"}], "/", 
   RowBox[{
   "relation", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "//",
   "Factor"}]], "Input",
 CellChangeTimes->{{3.66286555668701*^9, 3.662865569005097*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   SuperscriptBox["q", "6"], ",", 
   FractionBox["1", 
    SuperscriptBox["q", "6"]], ",", "2", ",", 
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["q", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["q", "2"]}], ")"}]}]], ",", 
   FractionBox[
    SuperscriptBox["q", "4"], 
    RowBox[{"1", "+", 
     SuperscriptBox["q", "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.662865565200985*^9, 3.662865569291401*^9}, 
   3.662878936985818*^9, 3.6628793957850847`*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
PDJrEDq6B3cEZdaOvkN6BvXA9us+7p8fjlpYd9Z++wu+4L778h6j90Evgsfy
mLQGuO7ileC2sdcEAgMXc9MZqEXOjTNwvYtp6fE/8tHstY0rbSXvdOeD9pcv
ubzKV/8vHjK0wc4TzsA5q3LN0FgNbPxT9fk98pBD0v67755+q4+8VUEPhPPi
oeezbT7oJpuk9OabHft7ez3/PLEBrQHOgN6Af95ee+WcN66FjkO8xWPA+Tcv
S48TfdOwppgLX6BPSl+IOa6dibeKz7bajzpT8USwbovt9Ld+//vRkxAIBAIL
AtZka74eVzk93cEVV2S/rJ6aV0MzduedeSbBuHF53befyOXLuv/oo92f8WXf
wHWYF0azICYovQj2rnGNegJ+BC8dsUGgRfG/1XU9r6Pl4DrW09ysM5gXZ6AW
xitdLyzOgOZI71IrzebS/7XffllfIK+y7vEb8xr1GOMQynxF52luXpGBAQX9
CJ/ZZpu0W5UL//rXv+7rp9N7+Otfc11Db5HPr319pZWybr2j+zmtDZ5M3Zte
XhwyqqGbx61Fj8L8UbgCmhYzD62h5iDI64c3+VPxWRVz4XQ7W4fyGN4rc7nM
+nJ/5T33f/pYHGh4UAUCgcCChfVZbs9b2GxDM497ovZmj7/llpQ22CD3HhZ9
AR565syUDjgg9yh2hy8ocxTlCHor+H2Jk8tjiQnwBzgL+sPuzm0MBPoR8AA8
0/+9ugb+oYqx/lR9vn9fxWe/+c1v6vzB1/fffz/98Y9/rH//j9V1/q9VXun2
/1HFW/9dxdoDekabXIEHYuEM1KHmxRnoQxLDij1xBmJaWuXu8pX9CfTXes3U
4pwLOq5bb80/VwfUj+C1DxuW0t57Rx9wC+D+++5LG6+9dtp1hx1aW2fAo+j8
83NuWnTvNALqADSKHYG93wwpXnquDToDeoMJE/NMKTpL10Qr8qvdRakxFa7g
uONS2njjHMuNavAv4i61Guux80l/oBe2o+ez9DmoY/FeWX75vJZZs8v7feih
Kf3kJ+FbGQgEAn0JuYM6Ba1Zd/hb+wNfIvuFGL3M2qn5gkVzv9vnPpfr/d1Z
9z1fejd9DWprZjQWn97idci7QG3RbVpJgxwY1JDn/3MVW71VXas/+Pu/T/fd
e2+6/uqr02UXXZTOP+usdN4ZZ6RzHaefXv//kirW/vKll6brrroq3XLzzenO
229P36zivocfeij9sPr7V15+ufZexyn890DS4FgDzABv5gzMWpybB6JZ7NYI
t3OIP/m+thLot625RcerJsd3lp6AL1npS8Dh0pQNpPc6MFece+aZaY0VV0x7
77JLzQu2LFzr1bpV99cs0uDE8H56G82E6ijUMqq1sq4vjBmXYxL+BiVWePDB
nLcGb5BR6jI0GGpKxx6be0KWXjqlceMz74IncPiefpRPivcKx9AZvsDMBbyN
+JCGZNiwttmaakH8C/DBA5nnDgQCgVZCd+JI+4PcXE3fHAR8QfG4tZ/gCz7/
+Ty/oTvrPg3uK6/kugOuW/zf3utwiSWyhk1doZX0x4FBC35n+pefrz7TOIKT
qmtpr89+Nm23+eZpk1mz0gZrrpnWXW21tHaVN6+z6qr1sW51zKri4w2rXHLz
DTdMn67ive223DLtVMV1u++4Y9pv993TsYcfni44++x0z113pZ/85Ce1DmFA
QJzZnjPggdhec+92Yli1RbcTg8qhO9oLPVAgd1Kbcx68RhyJPm3rMf+CMi/B
LJkXXujrZxvoJv6tyskO2GOPtEqVvx150EHpP1u59uoapktUvx4xslEXWDT3
Gdx2W8fjFvdjfeBrpEaOLyg9CviIAw/M/ZkdmcfQyij+UIUrOPHEzBWI4QpX
4Lw5fM9P0poqr8fFitE6Cu+d94RHrfeXL4L32Drm8D2tqJnYwXMGAoFAa4D2
n485vkDvbNEQ6nOzH5u1Y1Z4d/gCtRQ+h3obcNFjxubYAV9QvA7FzfrszIGI
PSbQAtCDIJ+/6sor07677ZbWX3PNtEqV+y0zY0ZaaurUNHPy5LT4xIlpepU/
Lz5p0uxjZpUnL1H9bulp0+rbLlvFY8svsURacaml0ipVTvmp6lpZb/XV05Yb
b5z23XXXdFYVt32rur7erPLpv/71r/1bdyCuVTMs8wPnxRl4Derq6pLlduuu
m3VVrQJ8LU0BbQG+oGgu9Jwdc0xKiy6a+xLkWvxo9SsEBjTervbSLdZfP61Y
5XEnfv7zNafY0qCjMSe6zNwrPsrqEJ3RWOhlMDfJ3JTFJmef/5L34iD4JtAl
yXsHm95AbIYv0YNQuAIeUXQF4yd8kCug1bDmqN3wH8BF0hd0BM6t3jDelPxp
cQ5F+1HqP8MbvJD3q5X6yAKBQGAw449/zH5kfHJx9s18gb0Ah0x71lW+QDxk
1gNPHXt9rS0Y2aaLs8/IHYrXoVnV/TnfCQQ6gOJZ8L2HH05HHnxwnd9/oorR
po0fnyZXOfDk0aPrY0rjq5/53dRx49KU6vC18Aj4gyWnTKn5g6WnT0/LzpyZ
ll9qqbTSMsuk1au4bMO11ko7brVVOnCvvdJZp55a9zD87Gc/67+eB9YEHGWp
oVtv5Mn6YZsh1uRxNnJk25xFdStrVqtA/G1eLc1FORezZuU+DbPNxeB+Tu8r
J+poXB/ot3jku99Nq1d76wpLLJFOrXK7fnud9hRcxzQFtW59eL6OSw0aN9YZ
HTzvB77Pq61WXTOTcizhkBfzRDniiOzLj4toZS7GOfO5oVGxHjqPPFDwMM4r
rZJz4twUrkCsJbfXz4F71Utwxx05PuvoZ7D0sPKw5IXtvjxG4YIKh+O9Fs+F
90ogEAgMfFj77av4AvF60Q3W88EXzTV/fIG5OV3l7OX++thOOSVzEnrb7Cv2
l1pXOCalKvdJO+yQ0o035r2vlff5wKAB3wJ+BZ/ddtu0XJXjTxk7Nk2sct9y
4AimVjnztCpXnDFpUlpiypSaF1hy8uT6Kw0CfQFtwfJLLplWqI4Vl146rbzM
MumTyy6bVq2uz9VWXDGtU8XOG62zTtpq443TzltvnQ7Zd990zumnp/u/+c3a
W7FfwjXePGtxXjoD/izqk+YJyJutG+a26W1uFcinzjkn+8o7F9ZgfcVyAHkR
7UHxMuAb2SL105adCTIf0BRcedllNV/g+j77tNNanzMofQU8DEY36hJmLuq1
ufbazunhXS9q4vJdcxPoE+WpehUmTsqxjP6Fu+/OubA1pFU+Z808AY9C51Q/
wYUX5tmG663XpiuQx+MIClcg1uJZQEvq/PCt8ve0Gx2NuTw+nRNuYssts1ak
zMUW16k56RvZaKOUzjwz90e0yrkPBAKBwQp7BD9y84vE6jwIxe3WfnsNfUGV
d9R7bldyePuEvfqHP8x9hjhv+4l4uPQzqqvZv44/PqXHHw+vw0DL4F+qOOwb
d9yRtt5kk7R4FVfhCMYNG5bGL7pozRXQDixb5QyrVtfZOlWMSyew2frr18cW
Vbyl32CbzTZL2zf8C3apYm3+6rtX+TLPND0O/AwO3mefdOh++9UHLcPxRx1V
5yDXXnVV+vb996ff/e53fX0q5o4ya7GZM5Aft/dAVM/aY48qHh3SqLUvmteT
zuQY/R16j9UG9SB4jfzG1e94uvF2wRk4R3TE6qctAr6df2wlvUgHwXPkmMMO
qznCZRZfPF18wQWtzxmAa5YGns6w6NfFANU6VvcTdEY/45opdW45Mt5A3GIO
46TJKa24Yp6xcOmlKT35ZK6NiEcGYj1CLOV5e/5mH1ojeUNffHHO/Wk3V1kl
1/vHjp+TK6h7EMZmrqDaY+q1E1egjiPe6ujnrjw+val1m0YBLzGkac6VepC6
kN5SHjRuOxDPdyAQCATaYA/SD6y2RctH91v6EXgQ0pSdd16ebdDVNR8XradO
TdBeZu8q83/pGXjlqDmoMfBJiH63QDuUOqS6nJiaT5jDrEGH2YO8xBx6APpL
zdJzfLCK6bascn+9BmOHDq2P8cOH11zBKsstV2sCDt5333TaySeni6pr7SuX
X17PRrjpuuvq4+Ybbki333pr7W347QceSN+p8kezEh793vfqeQk/quLgcvzg
iSfq49lnnql9E9555536+MUvflGfl36JMmsRZ1DmceEu289atI58+tPV7xfO
Pf3WqtNOa615Xep8e+6Z666lB0ENlUeknq0yL0L9VN2uRfD0j36Unqg+t/3l
ul1QMCOB9kjf0fLVPojfGxTnwDWvJu46L33vtAHy+2odrHU1HfXrdxua9zvv
zLNIa3+/CZkzUP8wgxHftv76+VoSZ1Sft7o2j7uQ//bX/sfCEVjjcKZiNb7R
5iTyjj7ooOxrYj3wumkrRo9t4wocpT+g6Ap4SPFT7SxXAN6Tn/88x3PmNHpc
9Z/Zc66qx5s8OesOaEXFc53RLgQCgUCgf6LwBeJu3MCiI9pq/77HV+sVxGd3
JY7xN/oN9Srz0RXzioXdP+1as88hj+NW7zkchGjO8/nwyaFLbv9/qxjI/IA/
V7GbGvh7771XhSM/r3375Ls/rmKaV199tQqRXkkvvfBCeuG559IzVaz35A9+
kJ54/PH03e98J33r/vvreYP3Vvn0N6vjkYcfTr+o7qM/5Mde8+OPPZZ2rOKn
6VU+PGbo0DRmyJBaZ7DsjBm1duD0U06pvQpfq17vr371q7rWKo9Qd9XP4HCe
cCJqkvgR59Drc//OrXPczKM0e6gNCM23eL19bwL+sj1noFYlRi36fLcXl7bS
miGP2WqrvEZ6jSNGZM9ZfWH8aIvHgTyhv/aadBI+u7fcdFO68+tfb33/v3bA
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
9lHAkavZdGRNsC8UnqCcH/0L/CP1Uagd0RVMmZKfV5lr4fAc+UjiCpxPXg36
iQbKXhMIBAKBD4d9AQetZ84cnCHD2vwO1azMNBCDdrWX1D6lPqJPD//s/sW3
9hj9b/rzcP3BRQ9YlF755hkIZQ6CQ/zrKLyDeQjNPom//e1vZ89FKD6Jr77y
Ss09PPXkk7VnAk/A++69t+6PwDuYL3gr7uH66+vZg3olrrjkknTxeefV2n+9
EuYTfvH44+vjkvPPr3USf6nyyL7Il73+yy68sNYU6EegMeCHvkOVC+FXemvu
Ok4H9zKzyjXNZODrcFsV//UVb9JpFM5Ab0KZC6A/9vXX226DM+CJpsblNnwA
9f+2ks6g9Gg0cydqiffdl7XPhTOwht9xR8twBo8//njabN116x6mp+mhBwn4
tO609db1NUtnsGmVD/6yD3uq+hTWKjOc1KwPOSTnrWobcudSa9fP7zpQ/xZP
8GTio9iRXgW3s1bQWdLt6O2hPZB/i0/MFdAPhaNTw19iydwzMK3RM1D6BnAZ
+gEmLdb2va/1MTXfblpTn4Gv7mfxmfmgIZrR6H3AV+ACyqF3wWPjMnCEntOm
m2YvE74I/KppAPRoeO3iNTxBR+dRWl+chzKPAT/nvvSi0obiUdR7xja4mjKD
gWeB78VytAV8C/C5Zlq0yBoUCAQCgZRjbXyB+NqaP6Sp/i82tSfZp+0lXYE9
w/7BbwhfgCcofIF6GC8efkQd8T0OtCTKPIDCOTQfzdxDmctgtiDewaFHv/AP
hYOgfSgcxLvvvlt7N7799tt1vO32fVVf5x25RZX3jB02LI34+MfrngQ9CniQ
3szff/TUU7UnxKiFFkrD/u7v6sc/9sgjB05/gjWk/azF9joDr0WMX3QGOANr
SyvpDJo9G8p5qD5PtZe6up//0x6o/919d8vE69+uXt8Gq6+eNl5rrfToo4/2
9dNZYOCTuvmsWWlC9ZnGG9BZ/KlF5md2CcWfnx5SXqpXQR5N5196+fUCLL10
7t2X96tVdMQbEdxGji3XNV+BLvJb38ozDM1tOeOMrPMXy6h/qLHQJPBDqN6b
er6p/gY+Kg7fi59wDn7nNp6zdcnf+Srfdz+77JIPcwh95XvoMfbdN9fs6Sfw
ArwTeReedVZ+TnRHZirwlObdYh20TnRmj1Mz8nr1jdIs8Tvg82A99TzNbBS7
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
p7N2lEcTviz6DAKBQCDQHdhLzjwzc9RiSrGjfF4sac8SQ3ZHe2x/8hg0ffyH
C1/g0HvH39fearZxf4d6qt5GeYgagx5h3mK4g7POyv4HdH5uF9xBr0H8K9+X
x6px68HnefbrX/86vfnmm+nHr76aXn7ppfTsM8/McTz/3HPpherz7Hc/ff31
uhbJF83cdvfzH1VM1Zc6ezzGTddfP7vOjzdYe+WVF1hO/v7776f111ij1jR7
bN5xZ59+eu1z6Hw/V53DT2+4Ya311rugb2GDtdaq5yf0y/4Ez6n9rEVrUDNn
II6mM2j2M+AV3ko16dm9CcPyeSi9CXKcZg/EFupNMAeUb6ceGv0JO2y5Zfpd
K/FA84D1b/3VV6+vz1pnMHNm7WkanEEPw/6uTs8XEIegpsD7gB+SwzUnV3c9
tZ+PWGYoPvVUnqtYfl9mJpav87qd/5cZi/6PGxCn8XbVY1B8CPCh1sCY+xQI
BAKB7sIed8klea6OOVzFW4CWVz5sv+uOJrrwBTT9dHo8C4q+YNERuc8OX2Cf
Gyg5tjjBnElzyngiOU+0zNtsk9J++2X+5b778m3oDgIdhrhW7umQv+MC9CDT
28oB9Nq/8sor6akqVhIH69O99aab0tVf/nI9V+C0k09Oxx91VDq6yofUyx2H
Vu/JIdXxuQMOqPvyjzzkkHTsEUekL1Z54nnVe/WVyy+vZ5GpxT1dxWIe5y9/
+UvtP25uGS4BN7EgYm65+QXnnFPX73EGcvetN954gdVH773rrrTUtGlZ41Ad
+hIefeSR2b8369G5ndHoTzA/QR3zkur69l71O+jLVXNr9kCkM2j2QCyzFuXR
NWcwJOt6zWlvFczuTWiam4DzVBMtsxadG+uxHKQF8ou33norbbz22rVmBmfA
D/G3A4GX7iZ+8pOfpHWqzzi+gM5guSWWqDm94Az6ANYf8VPJ3+d2iCfK1/J9
Z2+HFwhuIBAIBAK9BTE+DZ0YWv4uZnSMHZtjZhx2d2uH4m59dPgCXr64guJ3
aIaw/Fpu3Rt8gX0VX9Ebs+A8XzUrmnFzmOh+zWHm02DuA90Bz0S9DFW+2y88
HfsZ1K3l5j//+c/Tj3/847r2/2SVrzxW5agPPvBAPR/spurzeeWll6bzzzor
nX3aaekLxx1XcwKHV7k/Tfxen/1s+sy229befJvOmlXXvNdbbbW0RvXZMqvw
U1UOVH9dfvna89/3q1bfr1l9Htf65Cfr2260zjpp2+o92+Mzn6nv90snnpgu
v+iidOO116Zv3H57eujBB9NLL75Y58u0+ziEf6/yTEdPcwk4gy+ddFLtYYAz
oP+nqV4Q3m1ez5e+8IW0WPXYOAOcwBYbbFDrNwrwONdedVV9PsdVeadaJn5j
/z32qDUb/S4vcZ3ySKEzwAfMbdaia/OYY+actdhqOgNzXszObfZAPOig7O2q
H422zMEv7fHHWyLveOONN9JG1XowoXqttAZbb7JJrUNqdbxUraOrrbhiff3i
DfQ5BWcQ6DR8XnAeYkBrpDgKv0pDWbQV/t/+KLfzN+XvHOX/5Xe4jvBaDAQC
gf4Pa36VD9XzePUKFC9C32+4YUrf+lb3ZwnSx9Hw0wLzOPQYNAYew7yzKi+r
fRR6K5aR05srzLvR6+0NeI20g+eem2NyHkj8Grw+vki4g8svz1pCteKI22ZD
Df/5Z59ND1afNbPAbr7hhnT91Venr1x6ac0P0AyccPTRtTbgwL32Svvuumva
faed0meqfE6OjyfYuMr3121wBLiAlZZeuq6NL7P44mnp6dPrmnk5lpw6tZ5V
vuSUKWnmYovV+v+ZkybV/+cZ4O/wCmutskraoHoPN6/y5R2rfH2f6nGPP/LI
dMXFF9ccAj3CQ9/+du07oM+BBqCn/MXk7V6z/mucAT+B3arP1YKYK4+/2WW7
7erH5H2oD5zn4b+2u3Z+VH2Wt9xoo3rufZmfsPG669bno9/5rHk+/MHpDApn
sPrqee56gRgWZyCPLpwBzpRfa6uAzoBXW7POAGdQXXe15xq+wLnho6YPugXW
KZqkDavrGLdVcwbVevErerYWxzNPP51WWXbZmi8YufDC9ZqIhw3OIFCvhziA
9vm/r46S95vRw3/q9ddzDKUv4rvfzXMWqr0vVXtgraX0la+inzn83qzGRx/N
9RL8o8P39GoOdRY/00/BT1LtynPoj71tgUAgMNiBCxAX8vctfEGp/eMQcAnd
9UG3B1x/fY7PRzTpC6pcqPb0NTO9t3NoeZZ9yT6m10+trTdgr/vJT3LfNK8j
55CuQr+Hmuamm+b43LwIfkQxY6GGmrU+/Zerc/L3TzyRHq/iDPyBfoObbrih
7hnQb3DmF7+YTqxyOv0Eeg3wB/J43nzbbrZZ2mLDDdOG1TlfpzrXa1TnfdUV
Vqhz/5WXWSat/IlPpBWWWqrmA/iH4waWnjq15gxmTJyYpk+YkKaOG5emVcf0
Kq+cVv3fz/1+qep2y1a3F3OvXt3vhtXn1uPRNexW5V/77bFHrQn4XvX5oj/o
CeAMjv7c52rOQK1f/r579Vj/sAC8QV977bX6/NEzj/z4x9P06jxcf801H+AB
6A6OOvTQPD9h6NBaC7FidY6urXLz/+hvehrP/Yor8owWnMFCVV68zjo5Vi0o
vQnFz2BIwwOxlTgDax8t1NCGByIO1ywccT+eAF+AN6A5MB+mBep/NPqzVlut
5gz0J2xZrRPvvvtu7Rmi94lGqHz9sKPf8WDzgbXU9Vj3JlTHytX3369ytM5y
Bm7v9Rcvk8AAhPfceyfms4fQdOo3lbOLAZtz/5L3u/7FKqefnudDiWnMlrR+
bL997sF00GJtt13b4Xf6n/Rquq2vxe+p2q/n+DnfRr1R+lLFTXiEwh+IPYM/
CAQCgb6HWFC/qjVeD0LRF+hN0KOgV6G7Oa11/447Ulp33exFXjwS8BNrrJH3
IzFsb9c9Sv+AHgv7Iq67t3QN7lMNS38wfoDeAGdQ5az1gTuQh5iLTMOhr7YF
4vLuQixa4nb5ppp28TDgVybGf/3119OLL75Yew08UsUW337ggXT7rbfWMwHV
/s+pYhu1eX0FB+y1V9q7ik923WGHOrenE9huiy3SVptsUusGCrdAk4BH+MT0
6WmJyZNr7mAG/qC6JtTP66/VQXc/vcEj0CXQLnxixoy0/BJL1Pr87av3FLfx
hx7yG/D6P184gypvl+t8porP/tTLvfXehxuq63Jx3osLLVTzFc7Rq+aItgNe
w231fZQZ8PiD4448Mv2j+lR/gjXgjDMyH/CRj2adE/1Pc187zuDzn5+zN4E/
SSv1JuBPxf1DGx6I1fuWquul5lN50BbOgO8tXUY/W5uK52lZK3wG6ZTob/QM
0fpYL/iemFXq+E712tag0R86tOYNNqj2HuvHq6+8kl584YX03LPP1jX5J3/4
w/Sjao94tvr+mR/9qO6Peqr6mfXmlZdfrtegfx9AvjTfffjhmid1DeP/Vqr2
nye+//0O/73zbA1+84036vOhL8s5wFvyeMGPOvfFN7Z4x/5PP/vMDFqUngKf
WfvGm2/m+r7c3HyYffbJubu8n55KXOJ7MaGveivxquoefLHr+Y+LpzR9RkpT
p6U0ZWo+fO+YVo7p+TZuW25f/39G2/zI6Y3bLLFknkFJg6qnE4eAPzB7wprE
OxIPH1xVIBAI9A3sI7y/zOvR31v4gjLrkIa+uxpoPW533ZXnE48a3eaRgJOg
OeBH5jYLSifpcfSw4tXpJ/DodMm9wWOXeYw0fLTO9AXO6xJL5P3S/ktjgXOn
s3jppd7rmWgRlFzBISYttb/mWQnyA17hcoGnqxj3sUcfTQ8/9FB64L770j3V
Z/HO225Lt9x4Y+2TePF556VTjj8+Hbr//jWvgEfQ27B6lVvQEyzT4BDoDNTZ
cQYO/AE9gsP3NAn4Bh4KPAvf7yFvNa+LX4N58nJ3HoPbVp+j3u7DlgOcWOXN
pSdiTMNHYW49Ed4THpSbV6+d5lte4u/0UPCm6FdwfcmNhwzJ9fWhw3Pu3Py6
6HSbdQbmJuAMWmkuHy7HulN0BjgDfVNPPJHSKqvkvQBngEc+++wF7r9SZqDK
PQsXYL4nz0KfKZoBeb6+mO8/9ljNG37jjjvSzddfn6668sr05csuS5dffHG6
qLq+Lzz33HR+9RoOP+SQNLO6hsv8kaWq6/rgffdNnz/ssHTEwQfXvqgH7r13
zTPSLh2w555zHG7rmtAv9cbPfjYgcmLr5P333lv3ZrkuaQ1ornAjHQFOhvbL
eS19Ycccfng64wtfSFdccknt8XJHtZ7Sgt1XPY734XsPP1yvu/ga71/0QPQR
nHd6AnUSWgJ6AfMezV+kCdAzKU8Xj8xoyv+nNvJ9h/8vNjmlceNTGjMupdHV
ejBqTP5avhfX1ceYtqP8fvbtqt+Pbty2/e8c7ntsdYyfkB+Tj0rhD8zq4nOl
x8Fr8ZriMxUIBAILDtZcfLMauNla6m1yebO35LJqcd2p/fs7cebXv579EKqc
Zw5Ogt8hTmIBeLnNFXI6uTweG6dRxZ/d7r+YG5wH/LgY7Utfyjw+vUG9R0/N
X3mT4xNOPDFzGPbFARCP9mcUbqHwCvS0jmbtgn59uTcNvloiXwJzDc+rPvtq
+/QJdAmbrLderUXQj7ByFWMtN3NmzSMs3uhlwCGoqy+/5JK1zuCGa67pMb+B
2ofwpJNqbkIvMt3/BquvXvdv9CacG7PoPN6iH/tYzQGcWn0+51VflcvxoOTV
OLp6nuq4ejfMs+xXcG3NmlWtQwvlXFlvlLmKeMsCnIFrkSaq1hk0ehNaaS4f
zgBXPJszGJ5nvOAt6cFoK3AGzsFRRy2Q/imfLbyAGjbvAZ8dMzq+ec896eu3
3JKur/JTXMC51fXpmjipyt/lsHxN9AbVvUkNX5PN1l+/9jKlI3LwQqWT8Xke
+pGP1MfYIUPq+rsc+pPVdY0jpOFfwVH9fMWGFwoNkUNv03rVtbd/lcPIwweC
1sAaiCelhyo6A/1GtAId+VuzJr54wgn1GugcOSfOI79YHi/Os3O+fbVW7Fjl
oZ/dbrvah1Y/FU6BVoMOIXiDBQTn2WENKzGOmc977pn1VLSjOIJJi+UcfY7c
v/lo8AAjq2PEqHzwrPbV7+X45ahz/qZjDh5gfD7K7fAGjva3m4NDGNPGH+Av
Sm0Fd3DllSm98krmfuMzFQgEAr2PUmsXK6t3D2nMVMQbyGHVxGn2u3P/cqav
fS3rC0rPg2P4iDzz26zFvtb6ygFw17S35pLz9RFL94b+DX/Ce5EeUD8fT0R7
d9Hx4dXx/noF9WrwGsJhhBav19CsV8AnyAFwCfz+n3/uuXp24+1VrkKPcF4V
d4mdzWnU48BrUdysH4Emn+eiXOWU6javVHlXT/X74jsuOuecmqNQIzSXgCfD
12+9tX7OvQVe63ID2gZ12aWmTKnztnlBXsBnYmbjecrNnJcHvvnN/tP7bF3i
z4WrkyfjA6rXVc8KaH6Ozqu1sZkzoDNoJc5Av1h7zsDag0fGa/o5zoDPAR1G
L3s5qGe/8/bbtYfJnbffXvtm+Ny7nugAXHc4KdoVepdtNtssbTZrVpq1xhpp
7SoPWnOVVerP20oNvxI5/rIzZ9Z+JXxL9A/pJ+LlOeRv/zYt8jd/U3+ucXH4
vsL96UGa2tAQTWnSEU3FC1Z/L2feubr++bP+0wDwoXHt3VZ9vq0fOAO847qr
rlrrND4McnzrIG3BKsssU58DWqfa66VxLorHCx9ZGqtPNPq08Czm0fCVOamK
JZ54/PFaKxLoBRQPQzm0a1pMRTdpnfvCFzLXSdsoxpgwMefj8n5xmAMPMHJ0
W+5ejjrPH9uW38vh/f3kKTlGrN7jOmaRz+u19FVPk8P3fld+X773N/oaxD3l
/+Vn4lD6gvET2ziGUQ1+wf8nTc6PU133dT+n3gp+DFFbCQQCgd6FtdbcP+s5
ba7YEF+gd5XuwNyx7sT5eubMM9MDx2usaBjEpdZ9GgY63/6QS3iuuHj8tYP3
Dz6lN3oV7G88h+6+O6VDD80eB/ZYOYzcxVeaA/2DNAk4DHFpfzhPgwji7MIh
iHX15L///vt1zU2fs1kJl154YV13P/bww2v/P/0NV11xRV1Xaz9XoDvAZ5gv
uUIVZ8nDcQbi/8Or6/SVV17pFd7A67/mq1+t8yh5ldrk2p/8ZP365wU53y03
3VTnavVMt+pvPlHFqXwQ/7u/+FfR++hLMCOg9j9cJNfUf/GLOW9H+6rPF2dQ
ehNaTWcgv1B7tP7jRXAE6ni4Yl/1ZdgX/J43Lg6zF4Eb+2n1GPwFzFTVX2Ce
quvq6Or6OmTffev6Nf9P2p+tque0UfXe0Q8UDRCOSy0cp7Z8lZMs2+ANyjFj
0qRaM4MzcOAP8AJ8Tqc3juJ/OrXhXVL6j4qWyP2bwWr2a29ydj0F1/KN1frh
udfX8iKLpPXXWKPu3fow0EmddeqptbZiYnUdFA8IeqPi7TKbT2l4vhTfFz93
LnnL0mWccNRR6eUXXxwQvRwDBs6l+oY1WZxAK8l7yrwmXqY0/WIteoKRDZ3A
iJFtegE8wZgGD4BPkMeX/L/k/oULEJPoVzI3Wk8DrlEfE8/Cz30u9zo4jjwy
fxXbeA5+76uY8oADso6puo7rv/V/a7GfWYfMcPGcPQ4+Ycq0Nv4Ad+A16I/w
XPW0+nsaVr1v/WV/CQQCgVaD2rVat94AOXzRF0ys1ufddssa/e7s7foZ1O15
G1rnxdtic49lHzr55KyZ60+6MhwKn16eAvZc+gh1mN7qVdCPwXcSdyIXobvA
F1RxXX3Yv/Et9mM9iM5X7It9iuK3Jk/AI/BZ09PMM+HHr76a3qpicJ5rPT0n
wOOaWchjwaxDsbt6n1hcTsWXzPPpyXhc/XT/PfbIMxarHEuusFeVJ33YrAbP
U1857QVeo/ZBrNaUM045pfZk6BeguxeTWvNwATiBo4/+4HXuPaQzaPYzECv3
tS6qJ4E/4X022wNxePYdM08NX0IbhjPw2u0VeNVe5C59fnzucHNvv/127bXJ
i5DW594qH7r5xhvTNV/5Srr8wgvT6dVn6qRjj635uoOr17D3Lrukz26/fdqh
Wku33nTTtMUGG6RNq/xGbwJOoe5NWHPN9KnGvMHSmzCm0ZtAK6SWXuayrqgv
oXHoN1rOz6r8iccJ79QzvvjFmt8YCHBe9XMU/s9r3nTddWvPl3kBV3pbtQeu
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
a0Cji/PxWnscH0vzYkd5Jk4QBOMJ+jd5nrOLht2c4OmAHJLn1xveEL5gpiG+
ULfQTynG4EkuXqE3UOfgcSA2d27qz3PWTTWfF5f4zMXzfOT1Pfg3Nt608gb9
XoXNqr8mfbfZDd/73up7MAbBugRNr/5icxL0FmywYfUn6zIXHgenFrV06fI5
i/bbUZ6Z0PCNb1QfGzk/rkQtlMfKZJ42YnGvpV1qHmW4A3sK7hO3OQvxk14e
d3jv//espz+97L/PPuXKK66Ye1r6KYDe4Lrrris7PPjBd5uZwMfgLUcdVa6+
6qr+PMWrennVl77whfKVXg7t8mfXXH11+cbXv947Br5XfvGLX5Q777yz/PGP
f+w9Lv/d5wjmJE8wjG99q3Lkm2++3I/QOjbHiOaIZkavjXNwqj0Dnp93v7vq
+tTHWz+CmYp8QPRMue8Ir71pA06Pz5aaxrDWwB599tmT85N0RPxs+VjiDHAO
uE3xVhAEwahAXnjqqdU7Vmw2nXsc7hZngIMNZh7iL2fftddW3ZwzbdvtqhZA
jUI+r9fYLMYTT6xeY1PlDfwb6iQ+87e+tdZX+GP0faGXVp+DZYNZTzwu6E94
PNH3JbYJZjP0Fnhm1hv4EfBB5EfQpbeebkstEd/Qn5mwUc0lxsELVm6PI9Rb
jTPgEaYG14VrsS/QvekBbzPo+LvZO/RSzUIfN33+l1x4YXlvLwf5zDnn9Gvl
cz73nQRf653129///nfjDO7Ty5Ovuuqq3kf0n3e7cAIuX+s1wKfMWR3BRMCf
H3JI1fTJQe0b1q/fi7U++MF6xjqTp9oP6Psvv7zq593TvfszSRfX8xa3qT6e
M7UbVqY1cPGN9l76LCeCfdxnTUPVPA1wOXSX0VIGQTAq+MEPqiZdbvfJT05d
kz4R9P6qWU9Hn0MwfdCn4LOhD1b/E8OYS4w34HGgB5IXplj9m9+cuga4aRrM
YDfLaJ99Kn+vLxln0HiDe29beXy1ljPPLOX22+PNFMxOWJcf/3idd976Ejw3
NDVdcp1e3th/psSSXm/eIr5sHObNquGZD4Er8L7pszZ3FwczGYY9ytRq6Qzk
Rfo6eLdOlyZuGqFG/qtf/rL8qLf/6Un4v2Owp914ww39eYnNAxFn8LDeZ0Rz
MZYQ8+Dd5e+4suZHaK4ifwGzp7v4FawKnilaProlz5Tatq/p453rXeYEBneH
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
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBF3xX/810/+DIAiCIAiCIAiCIAhmG/7jP0q57bZS/vCH
mf6fBEEQBEEQBEEQBEEwm/DrX5fypS+V8q1vlfLf/z3T/5sgCIIgCIIgCIIg
CGYL/vf/LuXqq0u56KJSfvjD1b/Hv//79P6/giAIgiAIgiAIgiCYefzkJ6Wc
e269br99aq/9P/+nlO98p5Qbb6yahSAIgiAIgiAIgiAIRgc8EK+7rpTTT696
g3/5l+6v/b//t/Y1fPrTpVx2WeUc/t//W3v/1yAIgiAIgiAIgiAI1i3uvLPm
/aeeWsqVV1ZvxK74zW9K+dznSvngB0s5++xSfvSjqj8IgiAIgiAIgiAIgmA0
cOutlTM46aRSbrppank/LwQ6hXe8o5QPf7jeK56KQRCMK+it/vM/Z/p/EQRB
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
RUMoBzRHSazctAbiBTUM8+4zezGAxhfoReALrxY7f8AV0BbI+8WX6gZqrqta
e+IM9S9xAn5BDcuapeu2Dum7rLlwVcG6RJuB0HzkrGfxq3zJPI8ufohyKn6I
NAp0BvIv/nHWNu4hfojB6kLtVl33+OMrX0CXNTxH0fmtzkXbpX67Yq1XfsY3
lk+HGpi1rU4wzBXwLLBe8bj6atzvXe8q5dprq7Yhe3KwIngY6L/ClfKEUQcw
z0i/VhfQE3h985ORdw3Pq82aC2YrfvCD6tVlP1Zn2GDDeukV16NACx4Esw18
jukL1bOs1WUD/y2ecT/96eSvV4uQw/GwazxZm72IP9ZbltrCeMPnLx8yK5E3
Fj0BrsC1cFDf4oH8jnfUuHai/Kr51OMX1BZ4H4kzjjuuvrarrjEIphtqsPwz
9NuIAVx0s/KsVfXYDIPmW93MXooLa7mYWPj5z6+5V9Z3MFXgs/CwBx9c59M1
fQG+wFlNW4irogsXp654XqvX4mL1ilvbfV3B4uXrE7+FP6A5oD3Yb79S3vve
OhfXDKWc/8GqIKfXC8vPkNYA1/S859XexS41K6/nE2vN8dISg9o73ccMr/Qo
BLMRcqvDD6/xMF1BmyuufsbXk1dczvpgNkL9QF+4vllaAz3h9l05nH5FWoTJ
oD8d12utLx5ozcUlYhF+uOHLxhfyf3UrfIF4c8GC5XMR6FrUBMQIZ501eXz5
zW+W8vKX13jAvfCzNLLmiluDQTCTwJ+aGUMDgzOlNfCrvVUPV5cYmHbcnmnv
ND9BT7j+HXurmkTX+lsQAG0KHmqffWotAEc73I+Ae6UFwHetLEal2bK/8qrD
0Ypvm1cBrmCTQU8Y7YHag74HfTTO/PTSBF1gjb7//XWftB55bOnz6jozRoxq
frLX22/b/HC1BLFtehSC2QIcFx5LHUG9y36MK6AvwBdYt2JatdwgmK3QU3Po
oZWnlcfJ9+kLeYF38SSwr6uBqYWpGVv7Ll+bo8PLI7MXxw/qpnQmzn9ra3h/
lE/pX1GXVY+azHtAX4PvFZuKKcSwall6H1PHCmYL5Pz0Muq5dAb2U7pvzwDu
bLK1Km/76lerlkb80Pzk3EvP42c/G5+OYHLI1/EA6lVtDq211PgC3oTW6Jvf
vOoZd/gCc2nkXs5y+7e1iGvAFVjX8jQzE/SPW9/yt+zHwVTBf8is71YPcM7b
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
r9ahGoE1l5wnGDXIIfWDeX7kj54dWgF7rbnhXX2XaW9PPXV5T9DCQU+PZ4n3
Bw/n7NszD30Hj33s8nmxalN6UXgSdI0znfF0KG3NDPMFPCyiiQ3GEZ4fmqsD
Dqh1h6YToBfnEWKWTBetAX/agw+u9Qq+CH0/xKU1HlEbiR/43IEzTw0UX9B6
99oZS5f3t39b53ZNxhf4e7yDvVsuhCvAGeCk5El6DMW4qWkFcxH8O3Ci9jy+
Bi5f84zTkzUZ1HzlcPZZPQ44gzZ7kV/CVOKbYDTh8+dvwWsYj9+01S65ilqp
/fUd76hn8EQeRGYjWlf4BbyvvZzegF+x10ZXHYwqWk86bZhc314rrrHXin27
7NfgeaQx4zvjOWpzRmh+7nOfqmUwdyy828zB52x2MZ7A54PPweV/6Uvdz1N7
of4se6tzHUfb/AvoF6IvCMYZONgzz6yca9MayPv1S5rT1KVfxz3U13CttFqt
z8HzSvP4hS+kR3cuwGeknwRf0M9jBp8j7qDN+bYnT5bnq3XRIdDRLh3SF7T5
X0cdVfWCiVODuQrPgL5wPnLiULUIz4w4g7amS0+WvfVtb6szwxcPtOaLB54y
J5zQzdM5GE3I/+mm7bnOYp7fbS6CPZVelo+32iZOfqJ4WB5jjjLvIvfikYj7
pbVOP24wDrAf05PL9RcNtAbiXfu1mKdrfGrfl3/ybKaVdC9cr7pI06xn354Z
2MsOO6zWpMSszd/lwgunFmvypsAz6Nuy7y4ZnMnHHht9QRA0rYG6L62BHBFv
4HnRu8XXazJ+rs1+Uu/YfvvqgzhvwL+KbdTe5JqTzWIIZg5Nu8oby2ff5nT7
mjcFTR6N7GRrwd6s38B8hI2H/AvwBXRe1ghfmdRQg7kOe96hh9aZB/I4+b49
VJ9sF08CzwA/JrpJNeP2zPk6s2fGF2227UEH1bVl71x/g94+umHdU/H75hrQ
e03G39qzfe/jHld9O5/97DpnGWebPTgYF9iLcWf22r4P86C3x34t9p3KrDxe
T+aPNr54eN/Wb6kfN1qDdQvnZOuz9jnQkOAL6AWmMtOCrgu/2p+rOfC5pPF6
61szHyEIGsQd9OhiEXGv3nV9CjhZ8UUX3lSuKP6lf8TvtT4HHgfqGvhX/WDZ
S2cffCb/+I+1btU/A+fX/dLeK/dXT8Wvdpk/j6Pld9CfATbwTWw+xXQrv/jF
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
FHEXzqBbN/PzjjP4TPEziHIGfM19FoMNWYxvvvlGurncIcoZ7JeXJ5s2bcr0
oZUeH38c5mtXrR68DPbeO/QlJGkeWK6A+IkvTJQzMD8DQzmCHJr173//W/73
f/9X/vWvf8k///lPv/7bxRDW3//+d/n555/lp59+kh9//NEv8u6//e1vbmv9
P5l+CeUD9z7IRReFGrxyBsOHJ4czIJ7Mnh10FLVri3TuLPL225k+qvJBOmdA
3dI4g5wEcWzjhg3yF+aoGrIPeBZcconIPvuIVKoc9F3HHmveXHFHus6Ar63n
1pDl+O6776Rr27aFOIMWDRvKy2vX+rw5doArf+ih4OddOeVlQA3FfPbjCT4z
fGGUM+AzNc7AUE6AJ/jzn/8sn336qWzZvFk2rF8va198UV5w8eM3zz8vz7r/
uzVub/XIgw/KyqVL5Z4775Tbbr5Zbl60SO51X69ZvVo+eP99n4f/O2l9UOSu
F1wQcteoziAp877+8Q+R8eMDxwxn0Lu3yLZtmT6q8sFLL4XeC81X8TNA62wx
Nefw1VdfyfL77ov/rKykAi7nhBNCvK0UqYGZ/2G8kT5rUTkDgyGLgc6gR4cO
hTiD5g0ayFNPPhlPzoAa3/z5IvXqBb4ArUGfPjRhZPrIDKVBUb0JxFbui+P/
pyErQaz7h9szUm+7fckSuWzGDDn7tNPktHHjZMKJJ8rJo0fLOJe3jR01So4b
PlyOPvxwGT54sBw5cKAc1revDO7XT44aMsQ/9vJLLpHVjz3mZ88kSnNAjure
F9+bgD6WHNa9D4nhDNzeyfvm8rrgDJjN+4c/ZPqoygcvvlhYZ6AeMYacA95V
N15/vZ+7bchCMB9c/Q/hDBo2FLnlFst/4g6thamnjPkZGGIAPBB7duwotfbc
0/MFrCYuJ3xo1ap49rfRf8CMRXI+OIMaLv9z+b73ODDED1wXVcOFxqBKyivG
OANDGYE498MPP8j9y5fLhLFjZWDv3tLNxcROrVtLB/e/1s7tp1htW7Xyq02L
FtKate++sn+zZrJf06ayv1vcf7Dbh/Xv2dM/zx0ur/v0k0+SwxvQm3DxxRHO
oJbIkCFhr50EbNki4j53qV49+BmMGxe0B0kEnIHqDCxfzWnQh3rN3LnywQcf
ZPpQDEWBPmFm2nKuVk7pZul7N8QbcAaqM9AYbJ+rIcvxxRdfyCHpnME++8id
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
9RwlLqGnNSQDxGB81/hs4YWMM9gp6C06atAgaVy3ro9dY0aOzPj87IoGOSj+
Xa++8ornBmbPnOnrTmOOPVaOPvxwOdK9P0P795fB/fr5ObPcDh0wQIYddpj/
+XFur8BjTx4zRk4/5RQ5/6yzZM7FF8vNN9wgT7i9FvMUqTmmc6wP3n+/n/dF
7gpvAH/wtotR7DcOdvkD8Za6XZuWLeWeO+/M7r0E+fa8eSG3ZVZW9VRu++23
mT4yw66C/1udC0YdkIVvxVNPJdqjDI6OfeRf/vIXz63C8W10e5tn3OvGE3r8
CSd4j7+9Klf2/ftt3d6T+8Ydf7ycMGKE52JHuHPgqMGDvR+ULr4f4eIGi++J
IWNHjZJLL7xQnn3mmazq/d8ZeF8mjh3rORP1ZIHjvP2WW3a6B4/qudjTw1Vz
Pfr00099L9b7770n77h4+Obmzb734fXXXvMxGn0H7xMzHVc/9pisfuQRz888
tGqVj6nMRIDHffShh+Rhdz/rwZUr5eZFi2S0+1y8hovY6j4zjps5mW+hjc9G
0Ds0dWqY9QVnUKt28CxNUi8Q8QXOoG3bAp0BvRi5wBn4mBrx33rhhUwflaGC
gF4VnWljd27DGTBzkXpVnMFrmnjiif71oJ2lL+G8M86Ir0cavt74ckV99V98
MdNHZSgLRPNa7U0wH9qdghh1hNsP57ncCY0mue7333+f6cOqELCHJ8ZtePVV
WXTttXKyy/eZK84smA7uf4e9+oEudznQ7evxh0RjhW8WegC+pz5Fz2475lS6
PLmzy3nw/OrdtasM7N1bRrq9wOknnyxXX3GFPOTyVrxkv/jiC78HgY+dN2eO
52k012aPgX6LmWT0I+AlRh0Mf8rr58/P7nkWHNtFFwVfWc8ZJHCGeK6C2Ar3
qjMxWHCzbt+WxJwejfr777/v6+TsPeER8W5ivgx+sRPGjJGR7lztcOCB/tyt
teeefjVy+RFxg4UHNnNTiRFohvi6dSqWHJT6vg23fO9iSOd27WTkkUd6T9S4
xF/VGOTPinXvBVq1s0891XOwqgtAC0DM++677/z1Bj7gjddf93t/+gTY6991
221y/cKFMnf2bM+3XnbhhTLT7ZWnT57s3/PJkyb556Uud4p7/08cNcr31I0+
+mjvEXuMe+/4TLg91uXho9x93PKeHuNu4WX6duvmZ1ygh9gn5RXTxcVsuISs
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
1cJ/lmsVsRJtApwMnEv3jh09/9sj1cdADPf3ueXvS2m+4H2HDx0qF0+bJpvf
eCMeta9PPhHp2bPwrC93zUnceUdvAnMDNL6on0GSuJF0MCMhmq+a/1bOAM4V
rSncJzot4ij+VuSoxCXiq8564ZpDXP3yyy+9Lvidd97xs7m4BuHJy6wuOO1f
P/eczzvpfSUfhdNlTg95KjO/brv5Zs95c98L7tr92aef+l68sgT+6ccNG+b7
LeqkehMumT49Nte1QoDncHl6vv+s+5y8/6x5dCUHyttGfWipjxm2C/ah/Vz+
xYxxau3DXH5WFvVsYmJ0LhaxMDoXS2eUM4tQ+VDiCo/hsWWtF4Vnfd5dj5mz
hdYVjoSeK52tTn7Jz+a7nJ94Syxm3gHvBb0axGziIZ6JxHE9dm55TXrsOped
18P9vHbeC30/2HtwLMwzpxeC+hzHgDbhp1Qs4vUzz7alyw+ZXcY1hbokXo1Z
i48/FnH/R/mcQV5emCue5JwvV8D+JN/jO1UHJLaii0na3qUYgEfgPIcHwPeE
3IhYgu6IfA4/GLRaxA4Wvim6yPvYR/O1/ozHkhfGqRZD3EMzoJwJvObp48f7
PDcK3iudP8F7RlwkbiqfQA7MfAT1PmBm7SOpeQfMo7zXxRA8KOFplyxa5PmY
BS420iML73L5xRd7DQPzvbidM3Om96rkexZfw/vyePok8KnY5mJVLPgC4K5B
0qVLyGfIW5s1Cz22STvv0jkD5iY88kiyrx9wBqozUM7A8tXYQ2NeNO6RC5I7
kkMS7+nrmupyQHSt8K3U49G+Ev8eTfV2adwjblG3wksQX9gp7nH4wcJZo2FF
ywrfSu8r87tOGDnS69aOPuIIOWrIEDl8wABfc4JzPcJ9zc/QyTFLpqw9F7n2
4UnL9YB6F3U54nAsOQOO+ZxzCvxnuT3lFJG0a5whxtCeW9V6EY9t3u0OQT8n
ftKc4+xdmaFQnHkv6odNjki+y76aGawfbt3qZ2NRU3957Vr5tftM0KlSb6fG
RM62asUKWe5i4rJ77/U1J+5jXhaPgf+kBvR7t0f/vzLKF9ijo5PFRxtdK9wI
cZrXjLaVGha+6K+4vIXXoXt9XiPHUJQWDJRW20W+fKyL5+wzyLfRpVFv07jK
373LXS/Q4dKbQJ803l/oFrJWt8ysMuZr656S3JacL1uP11B88BkyI4H5iny2
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
zVPfR3kG6lH7quY1xTvw3MTik447zmvqYpOXc5y33hq8YeAM6Kft148iZaaP
rOyBH07PngU6Nfe5idtfJN4Px/LVnMTWrVtlgPt/r5viDNgr33v33fGJTaUA
uTUeXvSM0auwcN48mTltmu9BIzaPOPxwGezi24BevXwvLv1q8ArMQuOagffh
8CFDZPLpp8sjDz7o5yiUe13z/vtF3GeTH3/pv33nnfL9m4aKBT23GoO1/894
2+3CcwaPPBK8A1N+BtSD6A+Nk84AEI/oBUD7RK6o+ibyyf2bNPHcQS93zh81
eLCcNn689+zCnxX9ARqFNzdt8j0DPA/xiHk4eJvBKTBDltvo0vt4HD64zFPE
7+XsU0/13Cl8AT0JXBc4jlFH/f/27jxK9rI6F/8/N05wOMAZOYByMPFq1Khx
igPGABIUUKM4xAmNCk4MiiCDOAEOOAFeUQEFcUJQQIleE6PkBypEwShGJVER
iAYVE2+Sm5v7u+uu9d7+1Fvv6e9p+pyu7q6eqp5nrXdVd3XVt6q7v7W/+332
s599SO/vuqz3/3NB68vEE7QatM+gz+IKO4eCbWA6zqD5deV/HEyDxh2IkeZu
qfFfMhFrzVx804kn9mbNPu+Zz+zVnPhe6UHgg/VQXMLEuUUvwJ+m6RK20rF2
uITe6t/XFn7B4/bu+2w9ZuLYPBKuWUk+PfYPb3tb9QWUs+64qpSJvLr84hdL
/c6Gj29/e2udGq/ycdCpNY+Ybr4azmDkoa7E918tib4XZ3DRBReMNGcAra4m
Z6bF/f7E30Ef9Ocvv7ynQTAn4b1nnFHeNRH3rHe/4x3lve98Z2+WgtkJF3/i
E705RXLvRYnjF11UdV7No/ThDy/le99b+NcNFg9yWLls05KIx3LdYFo0zkCt
p81NUJP52grrTQA8ppxQf6sckddg8+Bqy+wvmorfn9jT4w9oVg998pN7vbCv
eeUre54qbz/ttPK+97ynnHvOOb3eXPPHP3PxxeXSiXxXzss34dJPf7pcMnHf
Jz/2sd6MWfGNhuCJj3987/h6rjbstFOvH0FO+8R99+3NVtTzO3JwndvSd7vD
5GxtNZQVdg4F24D/o1y262cgtkZLEgwAsZmWi482bddNN93U07LJFcVY8fbU
U04pxx19dHn5i1/c8yF4ztOf3uMTmmc2PkFPAq8Dq8crTJyDbh/cv2/Lmnhc
80Pw3D+dOJac8/YZZtUsK/DeOemkUtasqZzBxPWkPOMZhrsv9TsbPnjf9How
7lFnJugb/uY3l/pdLTySr44lvjex78SR9jiDe9yj3Hfz5p7H66hzBl20Xja8
Mg5AfU5fm/qbftzbb7+9t+64445eDc/PFn0+0QUXlLLnnpOcgd6w5Ti3LJg7
Ws9t14c2s2u2CZ8/nAE/A5yBmvgjV6AHIni/8lF56HFHHVUOPuCAnp+AGV89
zWuHO6CDbX2y9vhyTj0ZNAr6GNS9DpjY/x/8hCeUp07krRYPLutpBx3Um3no
az//44nHyUsfNLGfomnQF2Hu7m4Ty/f0Vh+dyIv/bVQ9oMVwOV/jDOR8akY8
DoLRgFig7qf+1/L6lt+usDgRLD1arqjmJA+UF958883le9/9bm8mwl9NXMc/
f8UVPU5Wn+9pp5zSm6Fw5OGH9zhhHG9bNGN4BroFnoh0XvSuRx1xRDnmFa8o
pxx/fLngvPPKD3/wg5Wl8eL/98pXVj9AnIHbF76wlP/5P5f6nQ0X/ifvfnf1
MGhzFieuqeVnP1vqd7bwmJqv4g94zQYjDfOw1Kx6nMFE3k0LNW6cwbYgj++u
JYP/xcR1o0zsE7ZwBhN7g/L97y/dewqGj+Ypkxg8EMQo9W9zsRpnQFfPj3Ql
QozRR4vzULuSQx647769ehNuoOe9tfvutV+23w/b9e/GIzTfFXzC727eXO5n
7b13Tye71e3E/XSz9+nPgdljIufZtOuuZXdrzZrez3AKF55/fs+rZaVxMAND
bL388jorocsZfOMbS/3OgmHB/3jLLPHOrEX3jep5HSwammcLb1hcAk2C2hOe
lY4Vn0CT2uYqfn0ivuuL/f+uuqp8feJ7vgl/c911vVtLn9n13/xm+duJ3Jz+
Vb1qRfEFgBs47LBSVvc5A3MIX/7y0ZslMPF/LkceWX8/nIHZCc96Vp2lMOqY
6oGYfHUscP3115dH//7vVw/EHXbo6Qz0Jqy4GDXKkPN88IPVW6VxBo98ZDiD
UYMcttsf1npug2nROIMH9Ocm4A3oOlcqZwBt7hevQfUqMwrVp+gC9JA97IEP
7PEH9+n7s7a54Zu7/bF9b63N3d7Zjr9WmwfT1j3Xr+9xBmY1OB5drDnj+hhG
mi8AsfXSS/v+sv395AMeEM5glOB/3Dwr2v+Y5sB9qY0EC4zGJ7QlvuMWrO79
3UXLMB9P2yXHv/xLKYceWspOqytnoEfh2GNrz8Io4Te/KeVpTytl1erKGeAO
jjtu9LiR6SB+Jl8dO3zrW9+qOgMzuCdybpyBfv4VG6tGEfibc86Z5Az4ydAZ
pDdhtLClFtbnhcRg+q9gWohRV1x22ZbeBPHLPECzFlc6/G60r1u8Ws87r+eR
aF63WS38WPl301WY18UHUuzuznuhO/jtjpf3vburr0vQ93DfiefQFeilfdL+
+5fXH398+epXvjK6/QhddDmD5oH4e7/nwrjU7ywYFprPZa8mFp1BECw4zB88
6KBad5fPrF1byhveUMqAc3pXDG69tc6DoE/DGehROOus8eAip8tXwxmMPG64
4YbyR496VNm4enWPN5B/f+aSS8IZLCfwHtMzZW5N+3xO/M96nIEZsG35n+EX
2vJ9u6/7mNmu7vG6x7JcA3DHbtvXONa2vPeJvU9v0XFZdGtu//3fJ5f9ieVr
ui7L47qrHacd12t5D93fdaXmgC2v5dPVnV2TuQnbhPr3lZ/7XM+jGmfAt88+
+rprrx2Z2rg4TOuqb9ZcXDMS9I6d9a539Xpd9b4+/1nP6nkhHvSEJ/R8EcVz
s14e+/CH9zwOHvngB/e8If/gIQ/peXE9euLWfXxs+B/wODTn8XXHHFM+fuGF
vfkL//+o1YO2BTHjU5/qz6TpcwYTf5ueF3YwGhALmsd3lzMYB2/zIFgK8Gvc
f//KGdAZbNhQyjveUXO1UcJ3vlPKxHV0C2egf/gznxn9uDJdviq+Jl8deZjz
/aT99uvN1tq0yy693JImdlRy7pHA3/1dKaecsnVvwsReoHz+8zVmmbno9m//
dnKZqXDjjXW1n7vvBz+488I9WHod3Lb7fe/57TUcV/3t+utL+Zu/qfpdOnDz
zeVkOEZLLsaLnLfYZz9byiWXlPLpT5dy8cV1ZuTHP17nQEzsfXrrwx+u6/zz
6zr33Orf4D6P+8Qn6pLbX3ZZ/b2/8IX6mt6D/N77/fGPS/nHf6wcd5dzwDM0
TmO58grdeWAtBstr49O1TYhRX5w4z2jpN+28c8/vXw/+jRPn6ijGL5pV/IF+
Af6sP5j4fPI++MKVV/Zmvl448Xk55+yze3MQ3v6Wt/R0CeaCnXzcceWk1762
d/vGE07o6Qis097whnLmu97V8/7GRbgW0BaMFV/sPBFb+F43DyuxVcwLRgP+
x/psG2eAG4rOIAgWDj/9aa2/y1XlrBs3lvK+940WZyB2fP3rtZetxRU9T+Mw
w9XvRwM7tcaVfHXkceutt5bnPeMZvTle9KsH7bdfL+cOlglonz72sVImcv8t
OgOLlvb5z6++Mq94RSmvelW9bYtnrfssX7fHvPrVpbzmNaUcc8zWy336zY4+
evK+o46q/i5e42UvK+WII+rt4YeX8qIXlfKCF5TyvOeV8tznlvKc51TvF/N0
9HdZf/InpTzlKVWjZjbvk55Ub//4j0s54IDKQ0+cb73VvuY5u+++k/d5nOV5
juN4jv3MZ9bf/yUvqb+f9/u615Xy5jeXcsYZpUzsnXqzJvAV+Iurrqrzb/7+
76un7T//8ySfQLOAT1jq65l4S98VncFAwAt8eeJvZp7Vffbcs6c3OHLiHP3Z
GHgW29d3/bub55aZLma98EO45ZZberPF6RNoB/7hH/6ht9z3k5/8pNx22229
x+Ig9NiOFVfQIL/BW5pJ0zz11Y1wpcFooOW3OIOmJWmxNfltEAwfE9ebXv9s
4wzUuz7ykdH6vHX1S+KKZU6vGto4YKoHYvLVsYDZga8/7riebvWRE8tMGHln
sAxgL6s2r+5uHyyv9dlsnjL2lzy+73//unzdVrsPB9p+5usHPrD267r1ffe+
dn/7Wfe4Xks89LVb36vVWGKFW/PK+I9v3lxvLdzGXpv7t3tVDbBbdT3L9/fy
/cTtnvest1vu7yzPcVyvYeFzvW77Xb13mmL5vr6Nxz2ulCc8oZSDD678gjk/
uIXjjy/l1FNrz5m9Ah2ZGhQ+YWI/1fPuwSXof6DPXkwewUz4qZyBWlgwLXAG
13/rW715Vfr7zRD86Ic/3NtDjzO6s17wABYfrrbafUs+D2Y5wO8vl6UpbZzB
wx9edUvBaKCr4Wq9Cb7GI4z7+R8ECwGa1p5mv++PJ4ejNR0liB1XXll/Nxq1
5oVz7bVL/c4WB8lXxxLqVJd88pO9WbGHT+yrrrziil79KlgGsJc9/fT62TQ3
wb5cf5jP5867lLJxtzuvDRtr7xgtWG9N85jdNnV+PrF2a/dNOc6WrzdMrq1e
Z2Kt3zB521vrqw/Mlu83TD52q8f1H7vV91OO1X6X3jHX3/lYW95v53fYfSL3
32PPyj/gKvAM/m54DjzIQx5S9wT77FP1DjQLtBJ0GPo/zjyzcgn6KvQ9/OQn
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
C42C/b783/8Aj8ATsekR8AONP+jOjmjzGuw1PA7vIIenb9Bf4X/jdWgntsUf
dOeBib+ZdxsECwd7WbV5dXf7YB4ocj/1ol13nfRpabNrfd1Wd55t+1mbazt1
Tm27rzvbtjsX13O9Vptl2/VosX5nIgb89u9U/pJna28WzN51mVF7r8392/68
Wrd4zi1za30/cbvHPevtlvs76179ebhew7p3/3Xb7+q985Khq9K3gVvdf/8a
H/ELeFLcgh40XKzZMzQOOFqcJz4Bp43LFX/FYfF4seYzdeeodzmDcaoJBsFi
wWeKDooPVpczGKUZhHJLfKk4gi9o81vps8YhpnRn0XRnLSZfDYLFAd2WGo8a
kL3rbDTtON0zzqga12AwiHldPkEuq+dXHwR9sHxSDZLeQy6MQ1CT09Mg79fL
0HwWWw9Dmw9h/+HnrpP8D+hG5NT2JvYp+AOaElxPV0vSOIMWg12PaIXjTRoE
w4W97Gmn1b2kniL78x13qrnf6l1K2bDbndf6jVPmsUzzmI2bppkHu+nOx9ny
dXdWTfd1Jta6DZO36/rza9au63y/YfKxWz2uzcTZcOfHbvW8dsz1dz7Wlvfb
+R028Zbds/IPuAo8Az7jvn3OhFctz1g8K72D6xmtBB2G/g8zgHAJ9hNqjnrW
9DnMpY9rNhDr5fKNM5DjR2cQBAsDnyl9U7ykWy6DdxwlzqDVeMbVI6Vb4+rm
q/GVDYKFhz5RtW2zFF/wgtq7Pyj0wdKM0ooOw7t/3CHeNR7Bnv43v6lcDC2C
fgM6BPqBgw+uNTfXQnw6nqDNaWgaBHoE99uP6Hd41KOqvyRN8rvfXfuH9TO3
2Qteo+tn4Hm0J3qu+UPQ/XpfQRDMHfq3+K/ymMUT4uX4pto377xLKWvWbr23
bvt432/ZX0/Zl0/3uLXrJ+fZTrfP7x5vyzzbjXc+5kychf38brtPro2dWTFb
YlLnMfb+m/aYZm7tpul5kC3vbyrn0FntGL3ZM/csZa/+LB66CRyr3i3XNzo6
2gS9GDxx9YnxY6Dpdd1rOoRh9jI4TvPr6tYE1cSS3wbBcNHlDJoHIp2SGWCj
ghZTGmfQehPGSbuEHxDfozMIgsWD/SnPPjmrflM69kFjDo9AWtCTT67az2Bh
IH9V61cPo0OQ3/INe9vbag8yjW7TH9jn9+Yy7F7z+uahyGPN/a4x+AP6Xj3K
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
Bq7VtCXD5Iq8Fu/Yl72s9pTRsuANnKc4C3PQzFkPgpUG+0A6AXyBJa8dJP/g
e2fvyaeLt4j9YbB8oTYkt6QDkA/yL+RP8N731rgmP8QXmcnomkt3gK/HHchR
8bHbqi/Z5zhn1KDwEry2LddkmgOca7RYwbjg+98vZf/9J3sL6GXpyvnFzMTF
+ozh3OSwnrt656qn1CcZjC+cN/QnZuXIdWmv8bz4JN4zn/70cHvC9CrSbfM2
MEPB9QCnzFdDjB92bS4I5gL5q3pGL9b2PWaf/OTta298luSrYrLY3GbZmEWV
c3q0QVPNv1t+ql6mD5tGGh/rXBrm/9+1/Etfqj4KesrEUUs+rTcC15U6a7CS
0HoSeh55m6oe9nOfmzmv9bmisdWf4zOnppy6w/IHr1gcgVzQLEW1K3VPfOiF
F9Z89IUvLOVJT6r8gTjn9hWvqH0JM8VTOaveW1ySGZD0rfpwxePrr8+smWD0
IQ6KqWoKdAKtt8Bna5A597g3ukl5bE/js66UN7wh852DyToZr2FcAc4Az6/P
TLzFSamfDgNivZh91FG1TkZnwPtGL5s5IGY3REMWLCXExLPPruekngTL58G5
ub2asZ5JfZR4MM/BM/DGG2aPT7B8gX/n9YVrkt/iRfnD6Eu59dbh8ga0BHJr
GhYaA7mA3EBurT579dXZOwUrB1/5St3z0806l53Dg+hlzA/zGWvaSHXkYPnD
tVLfiT09f2z/f/sY97vVg01/QIeAV+Cf+J731Lg2aC7qOHy03vrWyq/icOlY
7HvMcHR+pY8rGFXoIcClmpFoz+9W79agvQX8YXC4raeBpvEzn1nY9xysHOBd
1cloC+SdzV9L/Z9eTPwelt+A64LjeS3eN715vetrvwJ9LZ1avA2CpYAcAqcl
1tIK0BjQZKl3zOQxq6dWjXnVRGy++w61XsYPL3724wPniBzX+fKwh1XNiT4F
vIE+hWHlqM0TEY/Fy0DsxL/SG4jZxx5byre/nXMvWP7gt6w2gStQy6KXoS2f
CXoS9MLTsKt1mLeXPeDKgf87/2s9XTxa9KY2r0LcPO4eP+BxuCDxbrY1To83
I4z+5HnPq1pBPCu9ghkb+PxoAINRA74Mz9a8CCy5wUyzFRvUkc2OVs/FN+AN
1ECG6Y0frHzQh5lXIwfFLznH8AZ/8Ac1B+VdM6wc1Kw6r6XXBn+FM1CflS+Y
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
QRAEQRAEQRAEQRAEQRAEQRAEI4P/B2QaQrU=
    "], {{0, 519}, {1037, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVeQk4Vd/X/z7n3MnlmudZZjLPJPM8z0Mq1zzTNUWRkAyVZEghhUSKRkMJ
oUkyFUqRQiiVypAp70H1/f2/7/993ufdz7PP/Zy911rns/Zee++zzhXwCLX1
gQEA4QT0YkuO1qFQyDF2GPRGNybC2wNCATsXegFc7OSwsCCYHoDgkAiKrZEu
v7OLKz9+FECACBgAO2Ake4aH6Vhbm4P/sSwMgA2D4LnUhq3/We7/Wxi8vMM9
AYCsUezhFe4ZjOJbAGA4PcMoEQBge9B2weiIsA08h2JmCkoQANyGY8y+W5h7
A3tsYdlNGXtbPRTrA0CgIZMpvgDQbtjnj/L0Re3QhqF9jCFe/iGoaDKKd3r6
kb0A4GxHZbYHB4du4FkUi3n8hx3f/8emx1+bZLLvX7zly2Yh6PuHhwWRY/6P
w/G/l+CgyD/P2IZWGj+Kse2Gz+i4VQSGmm1gGhQ3hnhYWqGYEcWP/b025Tfw
kF+kscNv+RnPcD10zAArADDwIuuboRgdS5g1MtBB5zeWJ1M2dVF52NI/wsT+
N/aghNr+tg9HeYcb2P3Bft4m5r9tpoYEWf7B53z8DU1QjEYafCvWz95piyfc
HuXvaIliWhT3hAfamf2WH4n107P8I0OJtN3gLITiOR+Koe2WDMIeHP7HL0Ta
k7zJgR3F2hF+9sZbuoizd7iz+R9uXt76BlscEC/vEIffnBE0unRtf+umhAVZ
/5ZHznkHGdlujTNyLTzK7o9uXwQaYFvjgLwPIJtab/FHFsIirO23uGEwwBzo
AX3ADyLR6gFCQQDw75qpm0HvtnoMARlQgC/wBlK/W/5oOG32hKBXOxALPqPI
G4T/1dPd7PUGUWj72t/WrasU8NnsjdrUCAQfUByM4cTsxGhgzNGrNlrlMaoY
tT96/HR/noozwOnjjHGGOPG/PDxR1kFopQD//972jyb2A7YX+x7bjx3FvgJm
aK836vMGw5C/njmC8U0rv+/3+idS/sWcH1iAUVTP8Ld3Hqj29B8ZjAjKWgmj
i9FE+aPcMawYTiCFUUQ90cFoob4poa3/yTDyL4t/xvLfz9vg958+/m6nlaBV
+s3C4y9/vb9S/7ai9x9j5IX+mv1bEklFbiKPkPvIE6QRqQP8SDNSj3Qi9zbw
30gY34yEP0+z3eQWiNrx/yMjWyU7Lbv6355O/s2AsjnfIMJ7f8TGgtALDYuh
+Pv6RfDroDuyN79JiKf0dn55WTllADb2963t44ft5r4NsXb/00ZG929VeQCI
uv+0haL7QHUuGtZn/mkTQdcmhxoAN2w9IylRW20bxwvAoucGHboyOAAvEARi
qE/yQBloAG1gAEyBFbAHLmAPOup+IBhlHQ0OgsMgBWSAkyAXnAXFoBRUgKvg
BqgDjeA+eAiegh7QD16jsTEBPoFZsABWIAjCQySICeKA+CBhSBKSh1ShnZAB
ZA7ZQi6QO+QLhUCR0EEoCcqATkFnoQtQJXQdaoDuQ0+gXugV9A6ahr5DyzAC
08DMMA8sAsvAqrAObAbbw7thX3gfHAsnwyfgfLgEvgLXwvfhp3A/PAp/gucR
gFAjrIgAIoWoInqIFeKK+CAUJB5JR/KQEqQauYPO9XNkFJlBljA4DBOGHyOF
xqcxxgHjidmHicccw5zFVGBqMe2Y55h3mFnMLywJy42VxKpjTbDOWF9sNDYF
m4ctx97GPkBX1AR2AYfDseJEcSro2nTBBeAO4I7hinA1uBZcL24MN4/H4znw
knhNvBWejI/Ap+DP4K/gm/F9+An8TwI1gY8gTzAkuBJCCImEPMJlQhOhjzBJ
WKGipxKmUqeyovKiiqHKpCqjukPVTTVBtUJkIIoSNYn2xADiYWI+sZr4gPiG
+IOamnobtRq1DbU/dQJ1PvU16sfU76iXaBhpJGj0aNxoImlO0FyiaaF5RfOD
RCKJkLRJrqQI0glSJamNNEL6SctEK01rQutFe4i2gLaWto/2Cx0VnTCdDt0e
uli6PLqbdN10M/RU9CL0evRk+nj6AvoG+kH6eQYmBjkGK4ZghmMMlxmeMEwx
4hlFGA0YvRiTGUsZ2xjHmBAmQSY9Jk+mJKYypgdME8w4ZlFmE+YA5gzmq8xd
zLMsjCyKLI4s+1kKWO6xjLIirCKsJqxBrJmsN1gHWJfZeNh02LzZ0tiq2frY
Ftm52LXZvdnT2WvY+9mXOfg5DDgCObI46jiGOTGcEpw2nNGc5zgfcM5wMXNp
cHlypXPd4BrihrkluG25D3CXcndyz/Pw8hjxhPGc4WnjmeFl5dXmDeDN4W3i
neZj4tvJ58+Xw9fM95GfhV+HP4g/n7+df1aAW8BYIFLggkCXwMo20W0O2xK3
1WwbFiQKqgr6COYItgrOCvEJWQgdFKoSGhKmElYV9hM+LfxIeFFEVMRJ5KhI
nciUKLuoiWisaJXoGzGSmJbYPrESsRfiOHFV8UDxIvEeCVhCScJPokCiWxKW
VJb0lyyS7N2O3a62PWR7yfZBKRopHakoqSqpd9Ks0ubSidJ10l9khGRcZbJk
Hsn8klWSDZItk30txyhnKpcod0fuu7yEvKd8gfwLBZKCocIhhXqFb4qSit6K
5xRfKjEpWSgdVWpVWlNWUaYoVytPqwipuKsUqgyqMqtaqx5TfayGVdNVO6TW
qLakrqweoX5D/auGlEagxmWNqR2iO7x3lO0Y09ymSda8oDm6k3+n+87zO0e1
BLTIWiVa77UFtb20y7UndcR1AnSu6HzRldWl6N7WXdRT14vTa9FH9I300/W7
DBgNHAzOGowYbjP0NawynDVSMjpg1GKMNTYzzjIeNOEx8TSpNJk1VTGNM203
ozGzMztr9t5cwpxifscCtjC1yLZ4YylsGWJZZwWsTKyyrYatRa33Wd+1wdlY
2xTYfLCVsz1o+8iOyW6v3WW7BXtd+0z71w5iDpEOrY50jm6OlY6LTvpOp5xG
nWWc45yfunC6+LvUu+JdHV3LXed3GezK3TXhpuSW4jawW3T3/t1P9nDuCdpz
by/dXvLem+5Ydyf3y+6rZCtyCXnew8Sj0GPWU8/ztOcnL22vHK9pb03vU96T
Ppo+p3ymfDV9s32n/bT88vxm/PX8z/p/CzAOKA5YDLQKvBS4HuQUVBNMCHYP
bghhDAkMaQ/lDd0f2hsmGZYSNrpPfV/uvlmKGaU8HArfHV4fwYy+6nRGikUe
iXwXtTOqIOpntGP0zf0M+0P2d8ZIxKTFTMYaxl48gDngeaD1oMDBwwffxenE
XYiH4j3iWw8JHko+NJFglFBxmHg48PCzRNnEU4lzSU5Jd5J5khOSx44YHalK
oU2hpAwe1ThanIpJ9U/tSlNIO5P2K90rvSNDNiMvY/WY57GO43LH84+vn/A5
0ZWpnHnuJO5kyMmBLK2silMMp2JPjWVbZNfm8Oek58zl7s19kqeYV3yaeDry
9Gi+eX79GaEzJ8+snvU721+gW1BTyF2YVrhY5FXUd077XHUxT3FG8fJ5//Mv
LxhdqC0RKckrxZVGlX4ocyx7dFH1YmU5Z3lG+dqlkEujFbYV7ZUqlZWXuS9n
VsFVkVXTV9yu9FzVv1pfLVV9oYa1JuMauBZ57eN19+sDN8xutN5UvVl9S/hW
4W2m2+m1UG1M7WydX91ovUt9b4NpQ+sdjTu370rfvdQo0Fhwj+VeZhOxKblp
vTm2eb4lrGXmvu/9sda9ra/bnNtetNu0dz0we/D4oeHDtkc6j5ofaz5ufKL+
pKFDtaPuqfLT2k6lztvPlJ7d7lLuqu1W6a7vUeu507ujt6lPq+/+c/3nD1+Y
vHjab9nfO+Aw8HLQbXD0pdfLqVdBr74NRQ2tvE54g32TPkw/nDfCPVLyVvxt
zajy6L13+u8639u9fz3mOfZpPHx8dSL5A+lD3iTfZOWU/FTjtOF0z8ddHyc+
hX1amUn5zPC58IvYl1tftb92zjrPTnyjfFv/fuwHx49Lc4pzrfPW8yMLwQsr
i+k/OX5WLKkuPVp2Wp5ciV7Fr+avia/d+WX268168Pp6GJlC3nwVQNAK+/gA
8P0SACQXAJjQPI5Iu5V//S4ItJF2AOAISUOf4HYkCWOH1caJ4jkJ7FR8RE1q
S5pA0knaBroZBilGb6ZS5jFWCbYY9mZOOi4n7jKeH3w7+JMFngkyCNkKHxd5
KgbEFSR8JE9v75BalBGTtZFLkK9S6FeCleVUdqumq9Wqv9tB0lTd6a6Vpn1d
540eQV/ZwNPwpFG98YgpZCZkbmQRYJlpdcv6pc1PO1Z7BQcrx2Cn487VLk9d
3+2adVvcvbIXuBPJHB5Snjpett57fbx9yX52/jsC+AOhwNGg5uDzIUmhfmHW
+1Qp/OGE8K8RA5FNURXR2fvjY4JiXQ6YHNSMU4lXPqSWoHPYLNEpyTs54siR
lJyjZak301rSOzMGjr09Pnnic+b3k/NZC6fms+dzlvMwp1nyt58xOutZcKgw
v6j6XHPx0/MvLgyVjJZOl82VI5dYKiQqdS+7VUVfybl6o7q35tt1hhsKN+1u
hd8+WVtZd6f+fkPbnZa7dxtv36tpqmwubSm6n9ua3nawPeCB3UPlR+yPlh6P
PunuePi0rfP+s8aumu78nvBevT5S3/PnBS98+pUGsAODgxUvo15pD+GGHqHx
pfRmcjhrRGNk7O3xUY3RT++K39uOIWM14w7jSxM5H7Z/aJ60nRyfOjItMz3+
seJTyIzCzPznmi+eXxm+3p61nv3w7eB3tu8Pf2TOhcyTF3zQOBpffrAmvb6+
Of+C0DU4AJFHpjDXsQk4Z7wmQYpKlChKvY1GlqROa0PnSR/PUMzYxDTNQs+q
ykZmT+W4xTnCTc2jwLuLL4H/gkDztteC88LUInyiSmIm4u4SMZLZ269LdUpP
yWLkBOR3KLgqRihlKJepNKg+U3uvPrcDp8m1U07LQjtIJ1P3ml6P/mdDghGP
sbyJgamDmad5iMV+y3irJOsjNim2qXbp9scc0h2TnWKc/VzsXfV3abkZ7nbd
E7031/0audWjw/OB123vQp8Dvk5+sv40/jMBPYF3giqDC0IyQxPDKPvcKNrh
fOErEf2RV6NSoj32G8TIxgod4DnIEccST38Id2gh4f3hjsTrSbnJ0Ud2p5ge
1U81TyOnH864eOzh8ZETXzLnTy5mzZ/6kT2b8zl3Ju/L6Z9n6M+qFYQUlhd1
nRsrnj4/ceFtyavS3rLHF5vKGy91VHy+LFC1+0rh1Vc1zNcsr6eiu9fSbela
r7qC+r472LuKjXvvHWkqb25sabp/ufVkW1x79IOEh5mPih6XPjnXceJpZKfd
M6kuTNdQ942ejN6APpvnBi8M+m0GPAYjXya/OjoU99rnjd4w5/DMSMPbo6PO
76TeE95/GGsbL5rY90F7kmbyxVTp9KGP/p+8Zvw+B38J+xo2G/aN8j3qR8xc
9Lz/gtEi3eLNnwY/ny65Ln1e7lmlWRvanH9J0A6ZQS9hbwSHZGIkMd3YWJwM
bhp/keBHJUO1ROygLqaJJtnSytPR0i3Qv2JoYaxkymaOY/FltWXTZBfnYOFY
5Zzi6uNu4qnmLeUr4M8TyNmWKZgiFCVMFjEQ5Rf9KdYpXiwRLmm8XUAKlpqW
HpR5LHtH7rJ8vkKCoruSmjJOuVslV9VZjUPtlXqRhtcOeU2c5sjOWq1MbT8d
fV0RPXp9oP/DYNJwwOiucZ6Jt6mw6ahZvrmVBd6izTLJysSa3fqjTZNttp2f
vYYDyWHE8arTQWdTFxaXt64Vu0LR839p9709CXv13AnuveRCj0DPHV40XkPe
l3z2+ar6rvo1+ycEaAeCwJagw8F6IZiQB6FHwnTCfu6rorigZ3ZlhFXEXGR+
1I6okeiE/Tz778W4x7LGDh2oOpgU5xwvFr9wqC0h+7Bvon6SRDL7EeoUkDJ3
dCz1WVpN+rEM8jHF4/jjQyeuZaafDMwyOsV46mH2ruyZnNhcnTzd06lnCGfT
C8aLOM7JF6udV7ugVCJTKlYmcJGjnOESsYKqkg6NJM0r7lePVl+teX5t9YbY
Tddbp2731jHXuzQU3hlsxN4TbzJq9mg5dP9ca1Pb2/b1hwKP9B77PjnWcf3p
QOdal3j3rp7TvSPP5V8c7/8yaPeyYUjgde6wzFvad9HjGVMxny2/LyzZbMz/
1ne4jYJDs9NsNM90PI7WaQCy6tA88y4AbEQArEkA2KsB+Gg1gI2qARR45O/5
AaGJJwHNOVkBHxAHimimaQ5c0cx5P0hDM8oroAn0gQ9gFWKExCFtND8Mh46j
+eADaAyGYAFYF/aCj6JZXh+8jAgiFkgsUoEMYggYdUwwphTzCsuINUMzsjYc
hNPGJeBa8Vi8Kf4k/iVBgBBEaKDCUzlRVVAtEy2IF4iL1JbUFTQYGg+aNpIw
KY30hdaethHNdLLoAf0++nEGF4ZuRkPGe0yqTLXM6sxtLLYsY6yRbDi2PHYR
9noOS44pzlQuOa4x7mIeD15J3p98D/lzBby2KQriBF8L3RTOFAkSNROTFCeJ
z0r0S97dfk4qXtpNRk2WWXZW7pn8ZYU0RT8lU2VpFRaVddXPaiPqfRodOx5o
tu98pNWlPaQzpbugDwxw6D5HMCaYUJnSmDGbC1goWlpahVjn2DTaTtiTHBQd
XZzinM+7tLtOulHvlt3juPegexm5y+Onl5C3nc8R30a/5QC9wDNBSyGeoX37
DCmNEYqRNdFS+6/H7jjQExd6iDthIDEn2fzIwtGctO3pD455n2DJfJv1LHs4
dz2f/6xaofm5vedjSs6XDV2Sqjx/RbZ69PqFW3vqqBuqG3c3S7byPTB8XNJJ
0y3Wu/Aia1DsVe+bc29Pv+/74D699Jnx65XvYE52QW1xfSl9uX7lxerdtdJf
Yesqm/sHtPnNgRFwAREgD7SABXADwSAeZIEy0AC6wQRYg1ghGcgU8oGSoBLo
PvQexsCisDlMgc/CbfBXhBsxQw4iNcg4hhNji8nAPMBCWE3sAexd7CpOC5eE
e4Knx7vgL+K/E3QI2YQPVBpU2VQzREN0zlepnalvoZkwheYFSY10npaadj/t
JJ0LXRe9IX0Lw06GZkY9xg4mO6ZhNDNdZslklWB9yraPnZW9lsOG4wNnDBeJ
q4xbm3ucJ4vXlI+Wb5j/psCJbf6CukLsQp+E74mcFPUR0xUXlmCUJGzHShGk
aWUYZRnkCHJL8lMKg4odSveV76t0qL5W+65Bu0NW02anv1aENkXHT9dZz0hf
zUDRUNXIyHivSbzpBbNH5rOWXFYG1oHomZZjd9o+1yHH8bxTs/M3V6VdCW7P
9vDujXDv9hD09PHK9b7t0+U77rcSwBqoEGQfHBVyNrQl7COFLdwwIiryUtTQ
fvoYi9jMAy/jROLjDo0d9k2iT+5IiUjFpR3NwBxLPcGV2ZaVmO2cq3da44xG
gUaRWrH4BUzJw7Kocq5L9yo9qliuDFc/uNZ9Y/62XN3BhqeNdE36LZTW8vbp
R7pPbnTKdRX2DPfNvfg2MPlybGjqzdxb6B1xjHlCaNJ4Om9G5Wv6j/LFoKWu
leTVtrW5X0ub8w+jq58B8AIpsBPYAB8QB/LANdAJPkJUkCRkAVGgfKgF+giz
wvpwBFwODyEMiAmSjLQgaxgNTCzmDmYVq4NNxw7ixHGHccP4nfgSAoEQSnhB
pUZVRISJAcR+an3quzRqNPdJ1qQPtIl0AnQt9G70CwwnGaUYnzGFMJOYK1h0
Wd6wxrDxsnWxn+Dw4NTlkuBm5l7hGeat5zvFHyxgvk1WkF0IJ7Qk/E3kq+gP
sTUJWkmh7dpS7tIJMkWy9XLP5X8ociqZKCeqtKnRqLtpXNPEo++qTTrbdLP1
WQ2qjVxNGEx7zc9ahlo72MrbDTm4OnY6G7s83+Xj9nNPkjtEDvPo91LxLvSl
8jscQAwsDbYIBWF1lNAI3si26MgYrwNf4ssSYg4PJK4mw0cIKfRHFVLD015k
OBybPpF6UjrrVXZqrkbet/zKs3sKiUWXilXO3yvRKm25qF/eUWFd+aLK/kpP
tWFNw3WxG6dvEW7H1a7Wp90RudtzL7FZuWW6tbDd6iHm0d0n4U8lO8e7zvU4
9zE/7+vPHDR9uT505Y3V8NTbyNG194njyETiJDyV9BHz6dDMly+GX2Nmi74d
/x75Q//H4tzlecv51wt+CwuLUYvTP91+di/pLVUtk5bDlvtWlFbyV76tmqyW
rK6s2a9d/YX8cv51ZR1ad1i/vDH/4T4K8pvHB0SjCwB2ZH39hwgA+FMArGWt
r6+UrK+vlaLJxhsAWoK2/tvZPGvoASh8u4E6JPoT/v0fy38BoPLUGw==
      "], "RGB", 
      "XYZ"], Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{1037, 519},
  PlotRange->{{0, 1037}, {0, 519}}]], "Input"],

Cell[BoxData[
 RowBox[{"adjointTrivalent", "=", 
  RowBox[{
   RowBox[{"DirectSumProjectionMap", "[", 
    RowBox[{"G2", ",", 
     RowBox[{"DirectSum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Irrep", "[", 
         SubscriptBox["G", "2"], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Irrep", "[", 
         SubscriptBox["G", "2"], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Irrep", "[", 
         SubscriptBox["G", "2"], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Irrep", "[", 
         SubscriptBox["G", "2"], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{"3", ",", "0"}], "}"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Irrep", "[", 
         SubscriptBox["G", "2"], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}], "]"}]}], "]"}], ",", "2", ",", 
     "\[Beta]"}], "]"}], ".", 
   RowBox[{"InverseDecompositionMap", "[", 
    RowBox[{"G2", ",", 
     SuperscriptBox[
      RowBox[{
       RowBox[{"Irrep", "[", "G2", "]"}], "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "]"}], 
      RowBox[{"\[CircleTimes]", "2"}]], ",", "\[Beta]"}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.6628790178573427`*^9, 3.66287909412217*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PullDownTopLeftCorner", "[", 
    RowBox[{"PullUpBottomRightCorner", "[", "adjointTrivalent", "]"}], "]"}], 
   "-", "adjointTrivalent"}], "//", "Together"}]], "Input",
 CellChangeTimes->{{3.662879206785798*^9, 3.6628792455974007`*^9}, {
  3.6628792947088947`*^9, 3.662879299580291*^9}}],

Cell[BoxData[
 RowBox[{"RepresentationTensor", "[", 
  RowBox[{
   SubscriptBox["G", "2"], ",", 
   RowBox[{
    RowBox[{"Irrep", "[", 
     SubscriptBox["G", "2"], "]"}], "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "FundamentalBasis", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Irrep", "[", 
      SubscriptBox["G", "2"], "]"}], "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[CircleTimes]", 
    RowBox[{
     RowBox[{"Irrep", "[", 
      SubscriptBox["G", "2"], "]"}], "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ",", "FundamentalBasis", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "6"}], ",", "2"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "1"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "5", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "2"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "8", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0"}], "}"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "8", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0"}], "}"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "6"}], ",", "3"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "5", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "10", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}], "}"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "2"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "5", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "10", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}], "}"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "10", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}], "}"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "3"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", 
         RowBox[{"-", "4"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "8", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0"}], "}"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"2", ",", "16", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "2"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "8", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0"}], "}"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "6"}], ",", "4"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "10", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}], "}"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "10", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}], "}"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "3"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "5", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "10", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}], "}"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "5", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "8", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0"}], "}"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"1", ",", "8", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0"}], "}"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "5", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "0"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "2", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}], ",", 
       RowBox[{"Matrix", "[", 
        RowBox[{"0", ",", "1", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], "}"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.662879285527226*^9}]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local (2)",
WindowSize->{903, 609},
WindowMargins->{{399, Automatic}, {366, Automatic}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 389, 8, 28, "Input"],
Cell[CellGroupData[{
Cell[972, 32, 123, 2, 28, "Input"],
Cell[1098, 36, 665, 10, 38, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1800, 51, 128, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[1953, 57, 398, 9, 38, "Print"],
Cell[2354, 68, 186, 2, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[2567, 74, 134, 2, 28, "Input"],
Cell[2704, 78, 11059, 302, 601, "Input"],
Cell[CellGroupData[{
Cell[13788, 384, 783, 24, 57, "Input"],
Cell[14574, 410, 659, 21, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15270, 436, 1073, 34, 54, "Input"],
Cell[16346, 472, 5698, 165, 250, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22081, 642, 1206, 38, 54, "Input"],
Cell[23290, 682, 5597, 163, 250, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28924, 850, 251, 7, 28, "Input"],
Cell[29178, 859, 577, 18, 55, "Output"]
}, Open  ]],
Cell[29770, 880, 160908, 2643, 148, "Input"],
Cell[190681, 3525, 18859, 487, 965, "Input"],
Cell[209543, 4014, 352, 10, 35, "Input"],
Cell[209898, 4026, 970, 33, 57, "Input"],
Cell[210871, 4061, 1080, 32, 63, "Input"],
Cell[211954, 4095, 293, 8, 46, "Input"],
Cell[212250, 4105, 623, 19, 47, "Input"],
Cell[212876, 4126, 475, 14, 33, "Input"],
Cell[213354, 4142, 919, 27, 74, "Input"],
Cell[CellGroupData[{
Cell[214298, 4173, 255, 6, 28, "Input"],
Cell[214556, 4181, 295, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214888, 4192, 204, 5, 28, "Input"],
Cell[215095, 4199, 99, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215231, 4205, 209, 5, 28, "Input"],
Cell[215443, 4212, 5917, 171, 210, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221397, 4388, 212, 4, 28, "Input"],
Cell[221612, 4394, 126512, 3953, 5942, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348161, 8352, 122, 2, 28, "Input"],
Cell[348286, 8356, 11740, 295, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360063, 8656, 123, 2, 28, "Input"],
Cell[360189, 8660, 77, 1, 28, "Output"]
}, Open  ]],
Cell[360281, 8664, 931, 27, 74, "Input"],
Cell[CellGroupData[{
Cell[361237, 8695, 208, 4, 28, "Input"],
Cell[361448, 8701, 336, 8, 24, "Message"],
Cell[361787, 8711, 101, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361925, 8717, 978, 29, 79, "Input"],
Cell[362906, 8748, 3729, 113, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366672, 8866, 93, 1, 44, "Subsection"],
Cell[366768, 8869, 5502, 176, 295, "Input"],
Cell[372273, 9047, 3010, 85, 148, "Input"],
Cell[375286, 9134, 2267, 71, 118, "Input"],
Cell[377556, 9207, 1441, 44, 114, "Input"],
Cell[CellGroupData[{
Cell[379022, 9255, 1078, 34, 56, "Input"],
Cell[380103, 9291, 806, 26, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380946, 9322, 369, 10, 28, "Input"],
Cell[381318, 9334, 1082, 33, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382437, 9372, 2798, 82, 243, "Input"],
Cell[385238, 9456, 3906, 121, 198, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[389193, 9583, 112, 1, 44, "Subsection"],
Cell[389308, 9586, 156, 3, 28, "Input"],
Cell[389467, 9591, 1902, 43, 148, "Input"],
Cell[CellGroupData[{
Cell[391394, 9638, 525, 15, 28, "Input"],
Cell[391922, 9655, 1514, 41, 83, "Output"]
}, Open  ]],
Cell[393451, 9699, 894, 23, 96, "Input"],
Cell[394348, 9724, 192, 4, 28, "Input"],
Cell[CellGroupData[{
Cell[394565, 9732, 677, 21, 54, "Input"],
Cell[395245, 9755, 2544, 79, 80, "Output"]
}, Open  ]],
Cell[397804, 9837, 1248, 36, 63, "Input"],
Cell[399055, 9875, 289, 7, 46, "Input"],
Cell[399347, 9884, 592, 17, 28, "Input"],
Cell[CellGroupData[{
Cell[399964, 9905, 723, 19, 35, "Input"],
Cell[400690, 9926, 790, 25, 53, "Output"]
}, Open  ]],
Cell[401495, 9954, 602, 17, 28, "Input"],
Cell[CellGroupData[{
Cell[402122, 9975, 395, 11, 35, "Input"],
Cell[402520, 9988, 753, 24, 28, "Output"]
}, Open  ]],
Cell[403288, 10015, 1265, 33, 102, "Input"],
Cell[404556, 10050, 1598, 39, 97, "Input"],
Cell[406157, 10091, 1645, 40, 97, "Input"],
Cell[407805, 10133, 212, 5, 28, "Input"],
Cell[408020, 10140, 219, 5, 28, "Input"],
Cell[408242, 10147, 211, 5, 28, "Input"],
Cell[408456, 10154, 210, 5, 28, "Input"],
Cell[408669, 10161, 509, 12, 28, "Input"],
Cell[CellGroupData[{
Cell[409203, 10177, 987, 22, 57, "Input"],
Cell[410193, 10201, 715, 21, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410945, 10227, 364, 8, 28, "Input"],
Cell[411312, 10237, 1213, 37, 55, "Output"]
}, Open  ]],
Cell[412540, 10277, 623, 11, 46, "Input"],
Cell[CellGroupData[{
Cell[413188, 10292, 1531, 42, 97, "Input"],
Cell[414722, 10336, 523, 14, 28, "Output"],
Cell[415248, 10352, 525, 14, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415810, 10371, 1395, 39, 97, "Input"],
Cell[417208, 10412, 445, 13, 28, "Output"],
Cell[417656, 10427, 445, 13, 28, "Output"]
}, Open  ]],
Cell[418116, 10443, 199, 5, 28, "Input"],
Cell[CellGroupData[{
Cell[418340, 10452, 424, 12, 35, "Input"],
Cell[418767, 10466, 125, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418929, 10473, 216, 4, 28, "Input"],
Cell[419148, 10479, 142, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419327, 10486, 1099, 30, 78, "Input"],
Cell[420429, 10518, 186, 4, 28, "Output"]
}, Open  ]],
Cell[420630, 10525, 209, 5, 28, "Input"],
Cell[420842, 10532, 1327, 37, 63, "Input"],
Cell[CellGroupData[{
Cell[422194, 10573, 129, 2, 28, "Input"],
Cell[422326, 10577, 639, 20, 28, "Output"]
}, Open  ]],
Cell[422980, 10600, 1169, 33, 46, "Input"],
Cell[424152, 10635, 990, 29, 46, "Input"],
Cell[CellGroupData[{
Cell[425167, 10668, 129, 2, 28, "Input"],
Cell[425299, 10672, 823, 26, 28, "Output"]
}, Open  ]],
Cell[426137, 10701, 720, 21, 28, "Input"],
Cell[CellGroupData[{
Cell[426882, 10726, 132, 2, 28, "Input"],
Cell[427017, 10730, 609, 19, 28, "Output"]
}, Open  ]],
Cell[427641, 10752, 1090, 32, 46, "Input"],
Cell[CellGroupData[{
Cell[428756, 10788, 135, 2, 28, "Input"],
Cell[428894, 10792, 395, 12, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429326, 10809, 137, 2, 28, "Input"],
Cell[429466, 10813, 395, 12, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429898, 10830, 1393, 34, 115, "Input"],
Cell[431294, 10866, 751, 26, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432082, 10897, 251, 7, 28, "Input"],
Cell[432336, 10906, 577, 18, 55, "Output"]
}, Open  ]],
Cell[432928, 10927, 160861, 2642, 371, "Input"],
Cell[593792, 13571, 1437, 42, 69, "Input"],
Cell[CellGroupData[{
Cell[595254, 13617, 334, 7, 46, "Input"],
Cell[595591, 13626, 13723, 425, 386, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
